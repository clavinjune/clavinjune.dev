<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>June Personal Web</title><link>https://clavinjune.dev/en/</link><description>Recent content on June Personal Web</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>juneardoc@gmail.com (Clavin June)</managingEditor><webMaster>juneardoc@gmail.com (Clavin June)</webMaster><lastBuildDate>Thu, 21 Oct 2021 15:42:38 +0700</lastBuildDate><atom:link href="https://clavinjune.dev/en/index.xml" rel="self" type="application/rss+xml"/><item><title>Create Log Parser Using Go</title><link>https://clavinjune.dev/en/blogs/create-log-parser-using-go/</link><pubDate>Thu, 21 Oct 2021 15:42:38 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/create-log-parser-using-go/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1461360228754-6e81c478b882?w=1920&amp;amp;q=50" alt="Photo by @iammrcup on Unsplash" title="Photo by @iammrcup on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@iammrcup">@iammrcup&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Log File is a file that contains all events that happened in the system. By simply reading the log file, Developers can understand what happened, who did something to the system, and many more. Some systems have their standard way to write logs like &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://httpd.apache.org/docs/2.4/logs.html" >Apache&lt;/a>, &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://nginx.org/en/docs/http/ngx_http_log_module.html" >Nginx&lt;/a>, &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage" >Envoy&lt;/a>, Etc. But how about the custom one? Of course, developers need to write the log file as descriptive as possible to read it easily.&lt;/p>
&lt;p>Perhaps writing logs is not an issue, but reading it? Do developers review and read their logs? Do they can easily understand the logs? Do they know what happened to the system right now? Perhaps not. That&amp;rsquo;s where monitoring apps like &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://www.elastic.co/" >Elastic&lt;/a> or &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://grafana.com/" >Grafana&lt;/a> come to help parse and monitor the logs file.&lt;/p>
&lt;p>Monitoring apps could help developers read the system logs, creating an alert if something went wrong. But they don&amp;rsquo;t understand what happened to the system. They only follow the rules created by the developers. What if the developers want to put a little &lt;code>brain&lt;/code> to the monitoring system so the monitoring apps could understand what happened? Sure by creating a &lt;code>deep learning model&lt;/code> to analyze the logs is more than a help. But before that, developers should make sure they can parse the logs.&lt;/p>
&lt;p>In this blog post, you will create a simple logs parser using Go as a first step to understand the logs file better.&lt;/p>
&lt;h2 id="define-the-log-format">Define the Log Format&lt;/h2>
&lt;p>Let&amp;rsquo;s say there&amp;rsquo;s a single line of log formatted like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">[2021-08-27T07:39:54.173Z] &amp;#34;GET /healthz HTTP/1.1&amp;#34; 200 - 0 61 225 - &amp;#34;111.114.195.106,10.0.0.11&amp;#34; &amp;#34;okhttp/3.12.1&amp;#34; &amp;#34;0557b0bd-4c1c-4c7a-ab7f-2120d67bee2f&amp;#34; &amp;#34;example.com&amp;#34; &amp;#34;172.16.0.1:8080&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You could extract the data you want from that line, for example:&lt;/p>
&lt;ol>
&lt;li>Timestamp&lt;/li>
&lt;li>HTTP Method&lt;/li>
&lt;li>Request Path&lt;/li>
&lt;li>Response Code&lt;/li>
&lt;li>IPs&lt;/li>
&lt;/ol>
&lt;p>Then create the log format according to that line. Let&amp;rsquo;s say you want to name the &lt;code>timestamp&lt;/code> as &lt;code>$timestamp&lt;/code>, and the unimportant data as &lt;code>$_&lt;/code>. Now you will have a formatted string like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">[$time_stamp] &amp;#34;$http_method $request_path $_&amp;#34; $response_code - $_ $_ $_ - &amp;#34;$ips&amp;#34; &amp;#34;$_&amp;#34; &amp;#34;$_&amp;#34; &amp;#34;$_&amp;#34; &amp;#34;$_&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So you can read your logs data like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain"> $time_stamp =&amp;gt; 2021-08-27T07:39:54.173Z
$http_method =&amp;gt; GET
$request_path =&amp;gt; /healthz
$response_code =&amp;gt; 200
$ips =&amp;gt; 111.114.195.106,10.0.0.11
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="create-the-parser">Create the parser&lt;/h2>
&lt;p>Let&amp;rsquo;s create a &lt;code>main.go&lt;/code> file with the logs data and the format. To be easily used by the regex, you should escape the special symbol in your format using &lt;code>\&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> main() {
logsExample := &lt;span style="color:#a31515">`[2021-08-27T07:39:54.173Z] &amp;#34;GET /healthz HTTP/1.1&amp;#34; 200 - 0 61 225 - &amp;#34;111.114.195.106,10.0.0.11&amp;#34; &amp;#34;okhttp/3.12.1&amp;#34; &amp;#34;0557b0bd-4c1c-4c7a-ab7f-2120d67bee2f&amp;#34; &amp;#34;example.com&amp;#34; &amp;#34;172.16.0.1:8080&amp;#34;`&lt;/span>
logsFormat := &lt;span style="color:#a31515">`\[$time_stamp\] \&amp;#34;$http_method $request_path $_\&amp;#34; $response_code - $_ $_ $_ - \&amp;#34;$ips\&amp;#34; \&amp;#34;$_\&amp;#34; \&amp;#34;$_\&amp;#34; \&amp;#34;$_\&amp;#34; \&amp;#34;$_\&amp;#34;`&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After define the format, adjust your &lt;code>logFormat&lt;/code> to a format that regex could read. Because your variable starts with &lt;code>$&lt;/code> and only contains &lt;code>alphanumeric&lt;/code> and &lt;code>underscore&lt;/code>. You can match the variable using this regex &lt;code>\$([\w_]*)&lt;/code> then change all of the variables into a &lt;code>named capturing group&lt;/code> in regex. Which is &lt;code>(?P&amp;lt;name&amp;gt;re)&lt;/code>. Because you want to &lt;code>replace&lt;/code> the &lt;code>&amp;lt;name&amp;gt;&lt;/code> to your defined variable name, you can modify the &lt;code>named capturing group&lt;/code> to &lt;code>(?P&amp;lt;$1&amp;gt;.*)&lt;/code>. So if you put that in the code, it should be like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go"> ...
regexFormat := regexp.MustCompile(&lt;span style="color:#a31515">`\$([\w_]*)`&lt;/span>).ReplaceAllString(logsFormat, &lt;span style="color:#a31515">`(?P&amp;lt;$1&amp;gt;.*)`&lt;/span>)
...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now your &lt;code>regexFormat&lt;/code> looks like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">\[(?P&amp;lt;time_stamp&amp;gt;.*)\] \&amp;#34;(?P&amp;lt;http_method&amp;gt;.*) (?P&amp;lt;request_path&amp;gt;.*) (?P&amp;lt;_&amp;gt;.*)\&amp;#34; (?P&amp;lt;response_code&amp;gt;.*) - (?P&amp;lt;_&amp;gt;.*) (?P&amp;lt;_&amp;gt;.*) (?P&amp;lt;_&amp;gt;.*) - \&amp;#34;(?P&amp;lt;ips&amp;gt;.*)\&amp;#34; \&amp;#34;(?P&amp;lt;_&amp;gt;.*)\&amp;#34; \&amp;#34;(?P&amp;lt;_&amp;gt;.*)\&amp;#34; \&amp;#34;(?P&amp;lt;_&amp;gt;.*)\&amp;#34; \&amp;#34;(?P&amp;lt;_&amp;gt;.*)\&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then compile your &lt;code>regexFormat&lt;/code> to find all data in the logs line.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go"> ...
re := regexp.MustCompile(regexFormat)
matches := re.FindStringSubmatch(logsExample)
...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now &lt;code>matches&lt;/code> should have all your matched data. Let&amp;rsquo;s print it.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go"> ...
&lt;span style="color:#00f">for&lt;/span> i, k := &lt;span style="color:#00f">range&lt;/span> re.SubexpNames() {
&lt;span style="color:#008000">// ignore the first and the $_
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> i == 0 || k == &lt;span style="color:#a31515">&amp;#34;_&amp;#34;&lt;/span> {
&lt;span style="color:#00f">continue&lt;/span>
}
fmt.Printf(&lt;span style="color:#a31515">&amp;#34;%-15s =&amp;gt; %s\n&amp;#34;&lt;/span>, k, matches[i])
}
...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The output should be like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">$ go run main.go
time_stamp =&amp;gt; 2021-08-27T07:39:54.173Z
http_method =&amp;gt; GET
request_path =&amp;gt; /healthz
response_code =&amp;gt; 200
ips =&amp;gt; 111.114.195.106,10.0.0.11
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After parsing a single logs line, you should be able to parse all your logs files. The only thing you need to do is define your logs file format. And then transform it into a human-readable format like the &lt;a class="link" href="#define-the-log-format" >previous step&lt;/a>.&lt;/p>
&lt;p>Here is the complete code:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;regexp&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> main() {
&lt;span style="color:#008000">// a line of log
&lt;/span>&lt;span style="color:#008000">&lt;/span> logsExample := &lt;span style="color:#a31515">`[2021-08-27T07:39:54.173Z] &amp;#34;GET /healthz HTTP/1.1&amp;#34; 200 - 0 61 225 - &amp;#34;111.114.195.106,10.0.0.11&amp;#34; &amp;#34;okhttp/3.12.1&amp;#34; &amp;#34;0557b0bd-4c1c-4c7a-ab7f-2120d67bee2f&amp;#34; &amp;#34;example.com&amp;#34; &amp;#34;172.16.0.1:8080&amp;#34;`&lt;/span>
&lt;span style="color:#008000">// your defined log format
&lt;/span>&lt;span style="color:#008000">&lt;/span> logsFormat := &lt;span style="color:#a31515">`\[$time_stamp\] \&amp;#34;$http_method $request_path $_\&amp;#34; $response_code - $_ $_ $_ - \&amp;#34;$ips\&amp;#34; \&amp;#34;$_\&amp;#34; \&amp;#34;$_\&amp;#34; \&amp;#34;$_\&amp;#34; \&amp;#34;$_\&amp;#34;`&lt;/span>
&lt;span style="color:#008000">// transform all the defined variable into a regex-readable named format
&lt;/span>&lt;span style="color:#008000">&lt;/span> regexFormat := regexp.MustCompile(&lt;span style="color:#a31515">`\$([\w_]*)`&lt;/span>).ReplaceAllString(logsFormat, &lt;span style="color:#a31515">`(?P&amp;lt;$1&amp;gt;.*)`&lt;/span>)
&lt;span style="color:#008000">// compile the result
&lt;/span>&lt;span style="color:#008000">&lt;/span> re := regexp.MustCompile(regexFormat)
&lt;span style="color:#008000">// find all the matched data from the logsExample
&lt;/span>&lt;span style="color:#008000">&lt;/span> matches := re.FindStringSubmatch(logsExample)
&lt;span style="color:#00f">for&lt;/span> i, k := &lt;span style="color:#00f">range&lt;/span> re.SubexpNames() {
&lt;span style="color:#008000">// ignore the first and the $_
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> i == 0 || k == &lt;span style="color:#a31515">&amp;#34;_&amp;#34;&lt;/span> {
&lt;span style="color:#00f">continue&lt;/span>
}
&lt;span style="color:#008000">// print the defined variable
&lt;/span>&lt;span style="color:#008000">&lt;/span> fmt.Printf(&lt;span style="color:#a31515">&amp;#34;%-15s =&amp;gt; %s\n&amp;#34;&lt;/span>, k, matches[i])
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>My Custom HTTP Error in Golang</title><link>https://clavinjune.dev/en/blogs/my-custom-http-error-in-golang/</link><pubDate>Tue, 18 May 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/my-custom-http-error-in-golang/</guid><description>&lt;p>This is how I handle error with golang on http server&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10"> 10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11"> 11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12"> 12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13"> 13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14"> 14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15"> 15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16"> 16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17"> 17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18"> 18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19"> 19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20"> 20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21"> 21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22"> 22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23"> 23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24"> 24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25"> 25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26"> 26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27"> 27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28"> 28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29"> 29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30"> 30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31"> 31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32"> 32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33"> 33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34"> 34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35"> 35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36"> 36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37"> 37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38"> 38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39"> 39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40"> 40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41"> 41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42"> 42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43"> 43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44"> 44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45"> 45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46"> 46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47"> 47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48"> 48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49"> 49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50"> 50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51"> 51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52"> 52&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="53">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#53"> 53&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="54">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#54"> 54&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="55">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#55"> 55&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="56">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#56"> 56&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="57">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#57"> 57&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="58">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#58"> 58&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="59">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#59"> 59&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="60">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#60"> 60&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="61">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#61"> 61&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="62">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#62"> 62&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="63">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#63"> 63&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="64">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#64"> 64&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="65">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#65"> 65&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="66">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#66"> 66&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="67">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#67"> 67&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="68">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#68"> 68&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="69">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#69"> 69&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="70">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#70"> 70&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="71">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#71"> 71&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="72">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#72"> 72&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="73">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#73"> 73&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="74">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#74"> 74&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="75">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#75"> 75&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="76">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#76"> 76&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="77">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#77"> 77&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="78">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#78"> 78&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="79">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#79"> 79&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="80">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#80"> 80&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="81">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#81"> 81&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="82">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#82"> 82&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="83">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#83"> 83&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="84">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#84"> 84&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="85">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#85"> 85&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="86">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#86"> 86&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="87">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#87"> 87&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="88">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#88"> 88&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="89">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#89"> 89&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="90">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#90"> 90&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="91">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#91"> 91&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="92">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#92"> 92&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="93">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#93"> 93&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="94">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#94"> 94&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="95">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#95"> 95&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="96">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#96"> 96&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="97">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#97"> 97&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="98">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#98"> 98&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="99">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#99"> 99&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="100">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#100">100&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="101">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#101">101&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="102">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#102">102&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> e
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;errors&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;runtime&amp;#34;&lt;/span>
)
&lt;span style="color:#008000">// Error implements built in error with status code, caller, and message attribute
&lt;/span>&lt;span style="color:#008000">&lt;/span>&lt;span style="color:#00f">type&lt;/span> Error &lt;span style="color:#00f">struct&lt;/span> {
Err &lt;span style="color:#2b91af">error&lt;/span>
statusCode &lt;span style="color:#2b91af">int&lt;/span>
message &lt;span style="color:#2b91af">string&lt;/span>
caller &lt;span style="color:#2b91af">string&lt;/span>
}
&lt;span style="color:#008000">// New wraps err with defined statusCode and message
&lt;/span>&lt;span style="color:#008000">&lt;/span>&lt;span style="color:#00f">func&lt;/span> New(err &lt;span style="color:#2b91af">error&lt;/span>, statusCode &lt;span style="color:#2b91af">int&lt;/span>, message &lt;span style="color:#2b91af">string&lt;/span>) &lt;span style="color:#2b91af">error&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;Error{
Err: err,
statusCode: statusCode,
message: message,
caller: getCaller(),
}
}
&lt;span style="color:#008000">// Wrap wraps err with custom message
&lt;/span>&lt;span style="color:#008000">// Wrap&amp;#39;s result inherit statusCode from err if err equals *Error
&lt;/span>&lt;span style="color:#008000">&lt;/span>&lt;span style="color:#00f">func&lt;/span> Wrap(err &lt;span style="color:#2b91af">error&lt;/span>, msg &lt;span style="color:#2b91af">string&lt;/span>) &lt;span style="color:#2b91af">error&lt;/span> {
&lt;span style="color:#00f">var&lt;/span> e *Error
statusCode := http.StatusInternalServerError
&lt;span style="color:#00f">if&lt;/span> errors.As(err, &amp;amp;e) {
statusCode = e.statusCode
}
&lt;span style="color:#00f">return&lt;/span> &amp;amp;Error{
Err: err,
statusCode: statusCode,
message: msg,
caller: getCaller(),
}
}
&lt;span style="color:#008000">// From creates new error from defined statusCode
&lt;/span>&lt;span style="color:#008000">// if statusCode doesn&amp;#39;t have any status text
&lt;/span>&lt;span style="color:#008000">// statusCode changed to http.StatusInternalServerError
&lt;/span>&lt;span style="color:#008000">&lt;/span>&lt;span style="color:#00f">func&lt;/span> From(statusCode &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">error&lt;/span> {
text := http.StatusText(statusCode)
&lt;span style="color:#00f">if&lt;/span> text == &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span> {
text = http.StatusText(http.StatusInternalServerError)
statusCode = http.StatusInternalServerError
}
&lt;span style="color:#00f">return&lt;/span> &amp;amp;Error{
Err: errors.New(text),
statusCode: statusCode,
message: &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>,
caller: getCaller(),
}
}
&lt;span style="color:#008000">// Error returns error message with caller
&lt;/span>&lt;span style="color:#008000">&lt;/span>&lt;span style="color:#00f">func&lt;/span> (e Error) Error() &lt;span style="color:#2b91af">string&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> e.message == &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> e.Err.Error()
}
&lt;span style="color:#00f">return&lt;/span> fmt.Sprintf(&lt;span style="color:#a31515">&amp;#34;%v\n[ %v ] &amp;gt; %v&amp;#34;&lt;/span>, e.Err, e.caller, e.message)
}
&lt;span style="color:#008000">// Unwrap enables errors.As and errors.Is
&lt;/span>&lt;span style="color:#008000">&lt;/span>&lt;span style="color:#00f">func&lt;/span> (e Error) Unwrap() &lt;span style="color:#2b91af">error&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> e.Err
}
&lt;span style="color:#008000">// StatusCode returns e.statusCode
&lt;/span>&lt;span style="color:#008000">&lt;/span>&lt;span style="color:#00f">func&lt;/span> (e Error) StatusCode() &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> e.statusCode
}
&lt;span style="color:#008000">// getCaller uses log.Lshortfile to format the caller
&lt;/span>&lt;span style="color:#008000">&lt;/span>&lt;span style="color:#00f">func&lt;/span> getCaller() &lt;span style="color:#2b91af">string&lt;/span> {
_, file, line, ok := runtime.Caller(2)
&lt;span style="color:#00f">if&lt;/span> !ok {
file = &lt;span style="color:#a31515">&amp;#34;???&amp;#34;&lt;/span>
line = 0
}
short := file
&lt;span style="color:#00f">for&lt;/span> i := len(file) - 1; i &amp;gt; 0; i-- {
&lt;span style="color:#00f">if&lt;/span> file[i] == &lt;span style="color:#a31515">&amp;#39;/&amp;#39;&lt;/span> {
short = file[i+1:]
&lt;span style="color:#00f">break&lt;/span>
}
}
file = short
&lt;span style="color:#00f">return&lt;/span> fmt.Sprintf(&lt;span style="color:#a31515">&amp;#34;%s:%d&amp;#34;&lt;/span>, file, line)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Usage:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;database/sql&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;errors&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;e&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> main() {
base := e.New(sql.ErrNoRows, 404, &lt;span style="color:#a31515">&amp;#34;user not found&amp;#34;&lt;/span>)
base2 := e.Wrap(base, &lt;span style="color:#a31515">&amp;#34;bleh&amp;#34;&lt;/span>)
concrete := e.Wrap(base2, &lt;span style="color:#a31515">&amp;#34;there&amp;#39;s no user with such credentials&amp;#34;&lt;/span>)
fmt.Println(concrete)
fmt.Println(errors.Is(concrete, base))
&lt;span style="color:#00f">var&lt;/span> ee *Error
&lt;span style="color:#00f">if&lt;/span> errors.As(concrete, &amp;amp;ee) {
fmt.Println(ee.StatusCode())
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Result:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sql: no rows in result set
[ main.go:11 ] &amp;gt; user not found
[ main.go:12 ] &amp;gt; bleh
[ main.go:13 ] &amp;gt; there&lt;span style="">&amp;#39;&lt;/span>s no user with such credentials
true
404
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Passing Hostname to Docker Services</title><link>https://clavinjune.dev/en/blogs/passing-hostname-to-docker-services/</link><pubDate>Thu, 29 Apr 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/passing-hostname-to-docker-services/</guid><description>&lt;p>Passing hostname to docker container won&amp;rsquo;t work&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">environment:
- &lt;span style="color:#a31515">&amp;#34;HOST_HOSTNAME=$HOSTNAME&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Do this instead&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">environment:
- &lt;span style="color:#a31515">&amp;#34;HOST_HOSTNAME={{ .Node.Hostname }}&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>It will fetch the hostname from docker placeholder&lt;/p>
&lt;p>&lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://docs.docker.com/engine/reference/commandline/service_create/#create-services-using-templates" >Reference&lt;/a>&lt;/p>
&lt;p>Thank you for reading!&lt;/p></description></item><item><title>My Mistake on Converting Slice to Slice of Ptr in Golang</title><link>https://clavinjune.dev/en/blogs/my-mistake-on-converting-slice-to-slice-of-ptr-in-golang/</link><pubDate>Thu, 22 Apr 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/my-mistake-on-converting-slice-to-slice-of-ptr-in-golang/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1513104890138-7c749659a591?w=1920&amp;amp;q=50" alt="Photo by @iavnt on Unsplash" title="Photo by @iavnt on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@iavnt">@iavnt&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>I once made a function to convert a slice to slice of ptr and made a mistake.&lt;/p>
&lt;h2 id="my-function">My Function&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> Slice2SliceOfPtr(slice []&lt;span style="color:#2b91af">int&lt;/span>) []*&lt;span style="color:#2b91af">int&lt;/span> {
n := len(slice)
r := make([]*&lt;span style="color:#2b91af">int&lt;/span>, n, n)
&lt;span style="color:#00f">for&lt;/span> i, s := &lt;span style="color:#00f">range&lt;/span> slice {
r[i] = &amp;amp;s
}
&lt;span style="color:#00f">return&lt;/span> r
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>It seems normal to me until I realize something was wrong.&lt;/p>
&lt;h2 id="my-main-func">My Main Func&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> main() {
x := []&lt;span style="color:#2b91af">int&lt;/span>{1, 2, 3}
y := Slice2SliceOfPtr(x)
fmt.Println(x)
&lt;span style="color:#00f">for&lt;/span> _, yy := &lt;span style="color:#00f">range&lt;/span> y {
fmt.Printf(&lt;span style="color:#a31515">&amp;#34;%d &amp;#34;&lt;/span>, *yy)
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="result">Result&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">$ go run main.go
[1 2 3]
3 3 3
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Why only the last element copied to the result?&lt;/p>
&lt;p>Because the &lt;code>&amp;amp;s&lt;/code> I used is mutated every iteration.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">for&lt;/span> i, s := &lt;span style="color:#00f">range&lt;/span> slice {
r[i] = &amp;amp;s
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>s&lt;/code> never created as a new variable on every iteration, but its value is mutated inside the for loop&lt;/p>
&lt;p>So I changed the iteration like this:&lt;/p>
&lt;h2 id="better-one">Better One&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">for&lt;/span> i := &lt;span style="color:#00f">range&lt;/span> slice {
r[i] = &amp;amp;slice[i]
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Mocking HTTP Call in Golang</title><link>https://clavinjune.dev/en/blogs/mocking-http-call-in-golang/</link><pubDate>Sun, 11 Apr 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/mocking-http-call-in-golang/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1507925921958-8a62f3d1a50d?w=1920&amp;amp;q=50" alt="Photo by @kellysikkema on Unsplash" title="Photo by @kellysikkema on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@kellysikkema">@kellysikkema&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>This blog post code is running on go1.16.2&lt;/p>
&lt;h2 id="api-interface-to-be-tested">API Interface to be tested&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">type&lt;/span> API &lt;span style="color:#00f">interface&lt;/span> {
&lt;span style="color:#008000">// this function will do http call to external resource
&lt;/span>&lt;span style="color:#008000">&lt;/span> FetchPostByID(ctx context.Context, id &lt;span style="color:#2b91af">int&lt;/span>) (*APIPost, &lt;span style="color:#2b91af">error&lt;/span>)
}
&lt;span style="color:#00f">type&lt;/span> APIPost &lt;span style="color:#00f">struct&lt;/span> {
ID &lt;span style="color:#2b91af">int&lt;/span> &lt;span style="color:#a31515">`json:&amp;#34;id&amp;#34;`&lt;/span>
UserID &lt;span style="color:#2b91af">int&lt;/span> &lt;span style="color:#a31515">`json:&amp;#34;userId&amp;#34;`&lt;/span>
Title &lt;span style="color:#2b91af">string&lt;/span> &lt;span style="color:#a31515">`json:&amp;#34;title&amp;#34;`&lt;/span>
Body &lt;span style="color:#2b91af">string&lt;/span> &lt;span style="color:#a31515">`json:&amp;#34;body&amp;#34;`&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We can simply mock the &lt;code>API interface FetchPostByID function&lt;/code> result in our unit test by creating a mock implementation of the &lt;code>API interface&lt;/code> like this:&lt;/p>
&lt;h2 id="api-mock-implementation">API Mock implementation&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">type&lt;/span> APIMock &lt;span style="color:#00f">struct&lt;/span> {}
&lt;span style="color:#00f">func&lt;/span> (a APIMock) FetchPostByID(ctx context.Context, id &lt;span style="color:#2b91af">int&lt;/span>) (*APIPost, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, fmt.Errorf(http.StatusText(http.StatusNotFound))
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>But by doing that, it doesn&amp;rsquo;t increase the test coverage and it will skip the rest of the code inside the &lt;code>FetchPostByID&lt;/code> real implementation.&lt;/p>
&lt;p>So we&amp;rsquo;re gonna make the testable real implementation first of the &lt;code>API interface&lt;/code>.&lt;/p>
&lt;h2 id="implementation">Implementation&lt;/h2>
&lt;p>To mock only the HTTP Call, we need to create http.Client mock implementation. the &lt;code>real http.Client&lt;/code> have &lt;code>Do function&lt;/code> that executed whenever we want to do HTTP call. So we need to mock the &lt;code>Do function&lt;/code>. Because &lt;code>http.Client&lt;/code> doesn&amp;rsquo;t have any interface implemented by it, we need to create one.&lt;/p>
&lt;h3 id="http-client-mock">HTTP Client Mock&lt;/h3>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">type&lt;/span> HTTPClient &lt;span style="color:#00f">interface&lt;/span> {
Do(*http.Request) (*http.Response, &lt;span style="color:#2b91af">error&lt;/span>)
}
&lt;span style="color:#00f">type&lt;/span> HTTPClientMock &lt;span style="color:#00f">struct&lt;/span> {
&lt;span style="color:#008000">// DoFunc will be executed whenever Do function is executed
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// so we&amp;#39;ll be able to create a custom response
&lt;/span>&lt;span style="color:#008000">&lt;/span> DoFunc &lt;span style="color:#00f">func&lt;/span>(*http.Request) (*http.Response, &lt;span style="color:#2b91af">error&lt;/span>)
}
&lt;span style="color:#00f">func&lt;/span> (H HTTPClientMock) Do(r *http.Request) (*http.Response, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">return&lt;/span> H.DoFunc(r)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="api-implementation-struct">API Implementation Struct&lt;/h3>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34">34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35">35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36">36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37">37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38">38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39">39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40">40&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> NewAPI(client HTTPClient, baseURL &lt;span style="color:#2b91af">string&lt;/span>, timeout time.Duration) API {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;apiV1{
c: client,
baseURL: baseURL,
timeout: timeout,
}
}
&lt;span style="color:#00f">type&lt;/span> apiV1 &lt;span style="color:#00f">struct&lt;/span> {
&lt;span style="color:#008000">// we need to put the http.Client here
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// so we can mock it inside the unit test
&lt;/span>&lt;span style="color:#008000">&lt;/span> c HTTPClient
baseURL &lt;span style="color:#2b91af">string&lt;/span>
timeout time.Duration
}
&lt;span style="color:#00f">func&lt;/span> (a apiV1) FetchPostByID(ctx context.Context, id &lt;span style="color:#2b91af">int&lt;/span>) (*APIPost, &lt;span style="color:#2b91af">error&lt;/span>) {
u := fmt.Sprintf(&lt;span style="color:#a31515">&amp;#34;%s/posts/%d&amp;#34;&lt;/span>, a.baseURL, id)
ctx, cancel := context.WithTimeout(ctx, a.timeout)
&lt;span style="color:#00f">defer&lt;/span> cancel()
req, err := http.NewRequestWithContext(ctx, http.MethodGet, u, &lt;span style="color:#00f">nil&lt;/span>)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
resp, err := a.c.Do(req)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
&lt;span style="color:#00f">defer&lt;/span> resp.Body.Close()
&lt;span style="color:#00f">if&lt;/span> resp.StatusCode != http.StatusOK {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, fmt.Errorf(http.StatusText(resp.StatusCode))
}
&lt;span style="color:#00f">var&lt;/span> result *APIPost
&lt;span style="color:#00f">return&lt;/span> result, json.NewDecoder(resp.Body).Decode(&amp;amp;result)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="unit-test">Unit Test&lt;/h3>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34">34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35">35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36">36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37">37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38">38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39">39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40">40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41">41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42">42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43">43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44">44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45">45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46">46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47">47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48">48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49">49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50">50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51">51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52">52&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="53">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#53">53&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="54">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#54">54&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="55">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#55">55&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="56">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#56">56&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="57">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#57">57&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="58">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#58">58&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="59">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#59">59&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="60">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#60">60&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="61">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#61">61&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="62">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#62">62&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="63">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#63">63&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="64">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#64">64&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="65">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#65">65&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="66">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#66">66&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="67">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#67">67&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="68">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#68">68&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="69">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#69">69&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="70">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#70">70&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="71">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#71">71&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="72">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#72">72&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="73">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#73">73&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="74">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#74">74&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="75">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#75">75&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="76">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#76">76&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="77">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#77">77&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="78">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#78">78&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="79">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#79">79&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="80">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#80">80&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">var&lt;/span> (
&lt;span style="color:#008000">// our custom client
&lt;/span>&lt;span style="color:#008000">&lt;/span> client = &amp;amp;HTTPClientMock{}
&lt;span style="color:#008000">// our api
&lt;/span>&lt;span style="color:#008000">&lt;/span> api = NewAPI(client, &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>, 0)
)
&lt;span style="color:#00f">func&lt;/span> TestApiV1_FetchPostByID(t *testing.T) {
&lt;span style="color:#008000">// test table
&lt;/span>&lt;span style="color:#008000">&lt;/span> tt := []&lt;span style="color:#00f">struct&lt;/span> {
&lt;span style="color:#008000">// Body mock the response body
&lt;/span>&lt;span style="color:#008000">&lt;/span> Body &lt;span style="color:#2b91af">string&lt;/span>
&lt;span style="color:#008000">// StatusCode mock the response statusCode
&lt;/span>&lt;span style="color:#008000">&lt;/span> StatusCode &lt;span style="color:#2b91af">int&lt;/span>
&lt;span style="color:#008000">// Expected Result
&lt;/span>&lt;span style="color:#008000">&lt;/span> Result *APIPost
&lt;span style="color:#008000">// Expected Error
&lt;/span>&lt;span style="color:#008000">&lt;/span> Error &lt;span style="color:#2b91af">error&lt;/span>
}{
{
Body: &lt;span style="color:#a31515">`{&amp;#34;userId&amp;#34;: 1,&amp;#34;id&amp;#34;: 1,&amp;#34;title&amp;#34;: &amp;#34;test title&amp;#34;,&amp;#34;body&amp;#34;: &amp;#34;test body&amp;#34;}`&lt;/span>,
StatusCode: 200,
Result: &amp;amp;APIPost{
ID: 1,
UserID: 1,
Title: &lt;span style="color:#a31515">&amp;#34;test title&amp;#34;&lt;/span>,
Body: &lt;span style="color:#a31515">&amp;#34;test body&amp;#34;&lt;/span>,
},
Error: &lt;span style="color:#00f">nil&lt;/span>,
},
{
Body: &lt;span style="color:#a31515">`{&amp;#34;userId&amp;#34;: 2,&amp;#34;id&amp;#34;: 2,&amp;#34;title&amp;#34;: &amp;#34;test title2&amp;#34;,&amp;#34;body&amp;#34;: &amp;#34;test body2&amp;#34;}`&lt;/span>,
StatusCode: 200,
Result: &amp;amp;APIPost{
ID: 2,
UserID: 2,
Title: &lt;span style="color:#a31515">&amp;#34;test title2&amp;#34;&lt;/span>,
Body: &lt;span style="color:#a31515">&amp;#34;test body2&amp;#34;&lt;/span>,
},
Error: &lt;span style="color:#00f">nil&lt;/span>,
},
{
Body: &lt;span style="color:#a31515">``&lt;/span>,
StatusCode: http.StatusNotFound,
Result: &lt;span style="color:#00f">nil&lt;/span>,
Error: fmt.Errorf(http.StatusText(http.StatusNotFound)),
},
{
Body: &lt;span style="color:#a31515">``&lt;/span>,
StatusCode: http.StatusBadRequest,
Result: &lt;span style="color:#00f">nil&lt;/span>,
Error: fmt.Errorf(http.StatusText(http.StatusBadRequest)),
},
}
&lt;span style="color:#00f">for&lt;/span> _, test := &lt;span style="color:#00f">range&lt;/span> tt {
&lt;span style="color:#008000">// we adjust the DoFunc for each test case
&lt;/span>&lt;span style="color:#008000">&lt;/span> client.DoFunc = &lt;span style="color:#00f">func&lt;/span>(r *http.Request) (*http.Response, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;http.Response{
&lt;span style="color:#008000">// create the custom body
&lt;/span>&lt;span style="color:#008000">&lt;/span> Body: io.NopCloser(strings.NewReader(test.Body)),
&lt;span style="color:#008000">// create the custom status code
&lt;/span>&lt;span style="color:#008000">&lt;/span> StatusCode: test.StatusCode,
}, &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#008000">// execute the func
&lt;/span>&lt;span style="color:#008000">&lt;/span> p, err := api.FetchPostByID(context.Background(), 0)
&lt;span style="color:#008000">// validation
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> &amp;amp;&amp;amp; err.Error() != test.Error.Error() {
t.Fatalf(&lt;span style="color:#a31515">&amp;#34;want %v, got %v&amp;#34;&lt;/span>, test.Error, err)
}
&lt;span style="color:#00f">if&lt;/span> !reflect.DeepEqual(p, test.Result) {
t.Fatalf(&lt;span style="color:#a31515">&amp;#34;want %v, got %v&amp;#34;&lt;/span>, test.Result, p)
}
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Because we only change the &lt;code>http.Client&lt;/code>, our &lt;code>FetchPostByID func&lt;/code> is tested as it is except for this line:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">resp, err := a.c.Do(req)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Because the &lt;code>a.c.Do&lt;/code> is already adjusted with our mock &lt;code>DoFunc&lt;/code> inside the unit test, the &lt;code>a.c.Do&lt;/code> behavior will be changed according to this line:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">client.DoFunc = &lt;span style="color:#00f">func&lt;/span>(r *http.Request) (*http.Response, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;http.Response{
Body: io.NopCloser(strings.NewReader(test.Body)),
StatusCode: test.StatusCode,
}, &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s run the test&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ go test ./... -race -coverprofile /tmp/coverage.out &amp;amp;&amp;amp; go tool cover -html=/tmp/coverage.out
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>
&lt;figure>
&lt;img src="https://clavinjune.dev/img/mocking-http-call-in-golang/coverage.png" alt="Test Coverage" title="Test Coverage" width="100%" />
&lt;figcaption>Test Coverage&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Execute Date Format in Cron</title><link>https://clavinjune.dev/en/blogs/execute-date-format-in-cron/</link><pubDate>Fri, 26 Mar 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/execute-date-format-in-cron/</guid><description>&lt;p>Escaping &lt;code>%&lt;/code> in crontab using &lt;code>\%&lt;/code>&lt;/p>
&lt;p>example&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">0 0 * * 5 cat ~/log &amp;gt;&amp;gt; &lt;span style="color:#a31515">\
&lt;/span>&lt;span style="color:#a31515">&lt;/span>~/log-&lt;span style="color:#a31515">`&lt;/span>date +&lt;span style="color:#a31515">&amp;#34;\%Y-\%m-\%d&amp;#34;&lt;/span>&lt;span style="color:#a31515">`&lt;/span> &amp;amp;&amp;amp; &lt;span style="color:#a31515">\
&lt;/span>&lt;span style="color:#a31515">&lt;/span>&amp;gt; ~/log
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Vault KV V2 List Policy</title><link>https://clavinjune.dev/en/blogs/vault-kv-v2-list-policy/</link><pubDate>Thu, 25 Mar 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/vault-kv-v2-list-policy/</guid><description>&lt;p>Enable kv-v2 on secrets &lt;code>secret&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ vault kv enable-versioning secret
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Put something inside secrets &lt;code>secret&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ vault kv put secret/your-path your-key=your-value
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Create policy file&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7">7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8">8&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ tee policyfile.hcl &lt;span style="color:#a31515">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;span style="color:#a31515">path &amp;#34;secret/*&amp;#34; {
&lt;/span>&lt;span style="color:#a31515"> capabilities = [ &amp;#34;list&amp;#34; ]
&lt;/span>&lt;span style="color:#a31515">}
&lt;/span>&lt;span style="color:#a31515">path &amp;#34;secret/data/your-path&amp;#34; {
&lt;/span>&lt;span style="color:#a31515"> capabilities = [ &amp;#34;read&amp;#34; ]
&lt;/span>&lt;span style="color:#a31515">}
&lt;/span>&lt;span style="color:#a31515">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Please notify that we add policy rules for &lt;code>secret/data/your-path&lt;/code> even though we use &lt;code>secret/your-path&lt;/code> as a path. Because KV-V2 add &lt;code>data&lt;/code> prefix before your path name&lt;/p>
&lt;p>Apply the policy file to your role&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ vault policy write your-role policyfile.hcl
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Golang Context Cancelled on Goroutine</title><link>https://clavinjune.dev/en/blogs/golang-context-cancelled-on-goroutine/</link><pubDate>Mon, 22 Mar 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/golang-context-cancelled-on-goroutine/</guid><description>&lt;p>Golang&amp;rsquo;s request context is automatically be done when passed on goroutine, and its parents goroutine is already done.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;context&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;log&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;time&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> foo(ctx context.Context) {
ctx, cancel := context.WithTimeout(ctx, 60*time.Second)
&lt;span style="color:#00f">defer&lt;/span> cancel()
req, _ := http.NewRequestWithContext(ctx,
http.MethodGet, &lt;span style="color:#a31515">&amp;#34;https://google.com&amp;#34;&lt;/span>, &lt;span style="color:#00f">nil&lt;/span>)
_, err := http.DefaultClient.Do(req)
log.Println(err) &lt;span style="color:#008000">// Get &amp;#34;https://google.com&amp;#34;: context canceled
&lt;/span>&lt;span style="color:#008000">&lt;/span>}
&lt;span style="color:#00f">func&lt;/span> main() {
http.HandleFunc(&lt;span style="color:#a31515">&amp;#34;/&amp;#34;&lt;/span>, &lt;span style="color:#00f">func&lt;/span>(w http.ResponseWriter, r *http.Request) {
&lt;span style="color:#00f">go&lt;/span> foo(r.Context())
}) &lt;span style="color:#008000">// context will be done when it reaches here
&lt;/span>&lt;span style="color:#008000">&lt;/span>
http.ListenAndServe(&lt;span style="color:#a31515">&amp;#34;:8888&amp;#34;&lt;/span>, &lt;span style="color:#00f">nil&lt;/span>)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>LRU Cache in Go</title><link>https://clavinjune.dev/en/blogs/lru-cache-in-go/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/lru-cache-in-go/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1580188911874-f95af62924ee?w=1920&amp;amp;q=50" alt="Photo by @mrthetrain on Unsplash" title="Photo by @mrthetrain on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@mrthetrain">@mrthetrain&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>Two days ago, I failed to implement the optimized LRU cache in coding interview due to panic and stopped by the interviewer. Yes, I suck at coding interviews. I have implemented LRU cache before, so I know how it works and of course know how to implement it. But if you never heard of it, I think &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_%28LRU%29" >this explanation&lt;/a> is enough.&lt;/p>
&lt;h2 id="brief-definition">Brief definition&lt;/h2>
&lt;p>LRU Cache is a combination of hash map and queue. Hash map will store the elements by keys and values while the queue keeps track the least recently used keys. We will implement the queue using doubly linked list.&lt;/p>
&lt;h2 id="rules">Rules&lt;/h2>
&lt;ol>
&lt;li>Track each key usage&lt;/li>
&lt;li>Set max capacity that LRU cache will handle&lt;/li>
&lt;li>If the size is over the defined capacity, remove the least recently used data, and store the new data&lt;/li>
&lt;li>Accessed (get/set) the data means we use the data so mark it as the most recently used data&lt;/li>
&lt;/ol>
&lt;h2 id="node-structure">Node Structure&lt;/h2>
&lt;p>Node structure will store the key, value, and its previous &amp;amp; next nodes (doubly linked list).&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">type&lt;/span> Node &lt;span style="color:#00f">struct&lt;/span> {
Key &lt;span style="color:#2b91af">int&lt;/span>
Value &lt;span style="color:#2b91af">int&lt;/span>
Prev *Node
Next *Node
}
&lt;span style="color:#00f">func&lt;/span> NewNode(key, value &lt;span style="color:#2b91af">int&lt;/span>) *Node {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;Node{
Key: key,
Value: value,
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="lru-structure">LRU Structure&lt;/h2>
&lt;p>LRU will store the capacity, size (optional), the stored data, and it will track the most and the least recently used using tail and head pointer. Size is optional since you can use &lt;code>len(v Type)&lt;/code> method.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">type&lt;/span> LRU &lt;span style="color:#00f">struct&lt;/span> {
capacity &lt;span style="color:#2b91af">int&lt;/span>
size &lt;span style="color:#2b91af">int&lt;/span>
data &lt;span style="color:#00f">map&lt;/span>[&lt;span style="color:#2b91af">int&lt;/span>]*Node
tail *Node
head *Node
}
&lt;span style="color:#00f">func&lt;/span> NewLRU(capacity &lt;span style="color:#2b91af">int&lt;/span>) *LRU {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;LRU{
capacity: capacity,
size: 0,
data: make(&lt;span style="color:#00f">map&lt;/span>[&lt;span style="color:#2b91af">int&lt;/span>]*Node),
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="queue-operation">Queue Operation&lt;/h2>
&lt;h3 id="push-tail">Push Tail&lt;/h3>
&lt;p>Push tail will append the given node to the queue.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (l *LRU) pushTail(n *Node) {
&lt;span style="color:#00f">if&lt;/span> l.head == &lt;span style="color:#00f">nil&lt;/span> {
l.head = n
l.tail = n
&lt;span style="color:#00f">return&lt;/span>
}
l.tail.Next = n
n.Prev = l.tail
l.tail = n
l.tail.Next = &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="pop-head">Pop Head&lt;/h3>
&lt;p>Pop head will remove the head (least recently used) node.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (l *LRU) popHead() *Node {
ret := l.head
&lt;span style="color:#00f">if&lt;/span> l.head == l.tail {
l.head = &lt;span style="color:#00f">nil&lt;/span>
} &lt;span style="color:#00f">else&lt;/span> {
l.head = l.head.Next
l.head.Prev = &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">return&lt;/span> ret
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="pop-tail">Pop Tail&lt;/h3>
&lt;p>Pop tail will remove the tail (most recently used) node. We will not use this method directly, but it will be used later whenever user reset the tail value.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (l *LRU) popTail() *Node {
ret := l.tail
&lt;span style="color:#00f">if&lt;/span> l.head == l.tail {
l.head = &lt;span style="color:#00f">nil&lt;/span>
} &lt;span style="color:#00f">else&lt;/span> {
l.tail = l.tail.Prev
l.tail.Next = &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">return&lt;/span> ret
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="pop">Pop&lt;/h3>
&lt;p>This Pop method will receive node that we want to pop.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (l *LRU) pop(n *Node) *Node {
&lt;span style="color:#00f">switch&lt;/span> n {
&lt;span style="color:#00f">case&lt;/span> l.head:
&lt;span style="color:#00f">return&lt;/span> l.popHead()
&lt;span style="color:#00f">case&lt;/span> l.tail:
&lt;span style="color:#00f">return&lt;/span> l.popTail()
}
n.Next.Prev = n.Prev
n.Prev.Next = n.Next
&lt;span style="color:#00f">return&lt;/span> n
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now all the queue operations has defined, let&amp;rsquo;s implement the main operation of the LRU.&lt;/p>
&lt;h2 id="set">Set&lt;/h2>
&lt;p>Set method will store the given value identified by the given key. Remember the 3rd and 4th rules.&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>If the size is over the defined capacity, remove the least recently used data, and store the new data&lt;/li>
&lt;li>Accessed (get/set) the data means we use the data so mark it as the most recently used data&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (l *LRU) Set(key, value &lt;span style="color:#2b91af">int&lt;/span>) {
&lt;span style="color:#008000">// check if the key exists
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// if it exists, we need to remove it
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// then we append it to the queue
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// 4th rule (mark it as the most recently used)
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> val, isOk := l.data[key]; isOk {
&lt;span style="color:#008000">// this is the reason why we need to use popTail
&lt;/span>&lt;span style="color:#008000">&lt;/span> l.pop(val)
l.size--
}
&lt;span style="color:#008000">// 3rd rule
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> l.size &amp;gt;= l.capacity {
n := l.popHead()
delete(l.data, n.Key)
l.size--
}
&lt;span style="color:#008000">// push new data
&lt;/span>&lt;span style="color:#008000">&lt;/span> n := NewNode(key, value)
l.data[key] = n
l.pushTail(n)
l.size++
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="get">Get&lt;/h2>
&lt;p>Get method will return the stored value depends on the given key. Remember the 4th rule.&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>Accessed (get/set) the data means we use the data so mark it as the most recently used data&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (l *LRU) Get(key &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
val, isOk := l.data[key]
&lt;span style="color:#00f">if&lt;/span> !isOk {
&lt;span style="color:#00f">return&lt;/span> -1
}
&lt;span style="color:#008000">// remove it
&lt;/span>&lt;span style="color:#008000">&lt;/span> l.pop(val)
&lt;span style="color:#008000">// then mark it as the most recently used
&lt;/span>&lt;span style="color:#008000">&lt;/span> l.pushTail(val)
&lt;span style="color:#00f">return&lt;/span> val.Value
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Lastly, to ensure our queue rotation is correct, let&amp;rsquo;s implement the showQueue method.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7">7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8">8&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (l *LRU) ShowQueue() {
fmt.Printf(&lt;span style="color:#a31515">&amp;#34;Least &amp;#34;&lt;/span>)
&lt;span style="color:#00f">for&lt;/span> n := l.head ; n != l.tail ; n = n.Next {
fmt.Printf(&lt;span style="color:#a31515">&amp;#34;%v -&amp;gt; &amp;#34;&lt;/span>, n.Key)
}
fmt.Println(l.tail.Key, &lt;span style="color:#a31515">&amp;#34;Most&amp;#34;&lt;/span>)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s test it&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> main() {
lru := NewLRU(3)
lru.Set(1, 1)
lru.Set(2, 2)
lru.Set(3, 3)
&lt;span style="color:#008000">// Least 1 -&amp;gt; 2 -&amp;gt; 3 Most
&lt;/span>&lt;span style="color:#008000">&lt;/span> lru.ShowQueue()
&lt;span style="color:#008000">// 2
&lt;/span>&lt;span style="color:#008000">&lt;/span> fmt.Println(lru.Get(2))
&lt;span style="color:#008000">// Least 1 -&amp;gt; 3 -&amp;gt; 2 Most
&lt;/span>&lt;span style="color:#008000">&lt;/span> lru.ShowQueue()
lru.Set(1, 100)
&lt;span style="color:#008000">// Least 3 -&amp;gt; 2 -&amp;gt; 1 Most
&lt;/span>&lt;span style="color:#008000">&lt;/span> lru.ShowQueue()
lru.Set(4, 4)
&lt;span style="color:#008000">// Least 2 -&amp;gt; 1 -&amp;gt; 4 Most
&lt;/span>&lt;span style="color:#008000">&lt;/span> lru.ShowQueue()
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The whole code should be like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10"> 10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11"> 11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12"> 12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13"> 13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14"> 14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15"> 15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16"> 16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17"> 17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18"> 18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19"> 19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20"> 20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21"> 21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22"> 22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23"> 23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24"> 24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25"> 25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26"> 26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27"> 27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28"> 28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29"> 29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30"> 30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31"> 31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32"> 32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33"> 33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34"> 34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35"> 35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36"> 36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37"> 37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38"> 38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39"> 39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40"> 40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41"> 41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42"> 42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43"> 43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44"> 44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45"> 45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46"> 46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47"> 47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48"> 48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49"> 49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50"> 50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51"> 51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52"> 52&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="53">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#53"> 53&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="54">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#54"> 54&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="55">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#55"> 55&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="56">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#56"> 56&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="57">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#57"> 57&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="58">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#58"> 58&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="59">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#59"> 59&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="60">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#60"> 60&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="61">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#61"> 61&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="62">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#62"> 62&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="63">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#63"> 63&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="64">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#64"> 64&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="65">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#65"> 65&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="66">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#66"> 66&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="67">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#67"> 67&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="68">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#68"> 68&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="69">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#69"> 69&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="70">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#70"> 70&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="71">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#71"> 71&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="72">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#72"> 72&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="73">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#73"> 73&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="74">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#74"> 74&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="75">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#75"> 75&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="76">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#76"> 76&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="77">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#77"> 77&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="78">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#78"> 78&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="79">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#79"> 79&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="80">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#80"> 80&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="81">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#81"> 81&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="82">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#82"> 82&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="83">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#83"> 83&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="84">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#84"> 84&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="85">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#85"> 85&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="86">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#86"> 86&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="87">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#87"> 87&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="88">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#88"> 88&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="89">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#89"> 89&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="90">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#90"> 90&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="91">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#91"> 91&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="92">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#92"> 92&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="93">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#93"> 93&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="94">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#94"> 94&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="95">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#95"> 95&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="96">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#96"> 96&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="97">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#97"> 97&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="98">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#98"> 98&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="99">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#99"> 99&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="100">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#100">100&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="101">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#101">101&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="102">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#102">102&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="103">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#103">103&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="104">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#104">104&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="105">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#105">105&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="106">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#106">106&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="107">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#107">107&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="108">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#108">108&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="109">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#109">109&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="110">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#110">110&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="111">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#111">111&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="112">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#112">112&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="113">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#113">113&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="114">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#114">114&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="115">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#115">115&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="116">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#116">116&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="117">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#117">117&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="118">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#118">118&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="119">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#119">119&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="120">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#120">120&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="121">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#121">121&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="122">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#122">122&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="123">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#123">123&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="124">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#124">124&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="125">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#125">125&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="126">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#126">126&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="127">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#127">127&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="128">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#128">128&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="129">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#129">129&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="130">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#130">130&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="131">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#131">131&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="132">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#132">132&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="133">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#133">133&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="134">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#134">134&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="135">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#135">135&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="136">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#136">136&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="137">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#137">137&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="138">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#138">138&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="139">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#139">139&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="140">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#140">140&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="141">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#141">141&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="142">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#142">142&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="143">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#143">143&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="144">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#144">144&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="145">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#145">145&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="146">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#146">146&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="147">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#147">147&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="148">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#148">148&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="149">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#149">149&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="150">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#150">150&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="151">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#151">151&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="152">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#152">152&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="153">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#153">153&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="154">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#154">154&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="155">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#155">155&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="156">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#156">156&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="157">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#157">157&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> &lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#00f">type&lt;/span> Node &lt;span style="color:#00f">struct&lt;/span> {
Key &lt;span style="color:#2b91af">int&lt;/span>
Value &lt;span style="color:#2b91af">int&lt;/span>
Prev *Node
Next *Node
}
&lt;span style="color:#00f">func&lt;/span> NewNode(key, value &lt;span style="color:#2b91af">int&lt;/span>) *Node {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;Node{
Key: key,
Value: value,
}
}
&lt;span style="color:#00f">type&lt;/span> LRU &lt;span style="color:#00f">struct&lt;/span> {
capacity &lt;span style="color:#2b91af">int&lt;/span>
size &lt;span style="color:#2b91af">int&lt;/span>
data &lt;span style="color:#00f">map&lt;/span>[&lt;span style="color:#2b91af">int&lt;/span>]*Node
tail *Node
head *Node
}
&lt;span style="color:#00f">func&lt;/span> NewLRU(capacity &lt;span style="color:#2b91af">int&lt;/span>) *LRU {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;LRU{
capacity: capacity,
size: 0,
data: make(&lt;span style="color:#00f">map&lt;/span>[&lt;span style="color:#2b91af">int&lt;/span>]*Node),
}
}
&lt;span style="color:#00f">func&lt;/span> (l *LRU) pushTail(n *Node) {
&lt;span style="color:#00f">if&lt;/span> l.head == &lt;span style="color:#00f">nil&lt;/span> {
l.head = n
l.tail = n
&lt;span style="color:#00f">return&lt;/span>
}
l.tail.Next = n
n.Prev = l.tail
l.tail = n
l.tail.Next = &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> (l *LRU) popHead() *Node {
ret := l.head
&lt;span style="color:#00f">if&lt;/span> l.head == l.tail {
l.head = &lt;span style="color:#00f">nil&lt;/span>
} &lt;span style="color:#00f">else&lt;/span> {
l.head = l.head.Next
l.head.Prev = &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">return&lt;/span> ret
}
&lt;span style="color:#00f">func&lt;/span> (l *LRU) popTail() *Node {
ret := l.tail
&lt;span style="color:#00f">if&lt;/span> l.head == l.tail {
l.head = &lt;span style="color:#00f">nil&lt;/span>
} &lt;span style="color:#00f">else&lt;/span> {
l.tail = l.tail.Prev
l.tail.Next = &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">return&lt;/span> ret
}
&lt;span style="color:#00f">func&lt;/span> (l *LRU) pop(n *Node) *Node {
&lt;span style="color:#00f">switch&lt;/span> n {
&lt;span style="color:#00f">case&lt;/span> l.head:
&lt;span style="color:#00f">return&lt;/span> l.popHead()
&lt;span style="color:#00f">case&lt;/span> l.tail:
&lt;span style="color:#00f">return&lt;/span> l.popTail()
}
n.Next.Prev = n.Prev
n.Prev.Next = n.Next
&lt;span style="color:#00f">return&lt;/span> n
}
&lt;span style="color:#00f">func&lt;/span> (l *LRU) Set(key, value &lt;span style="color:#2b91af">int&lt;/span>) {
&lt;span style="color:#008000">// check if the key exists
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// if it exists, we need to remove it
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// then we append it to the queue
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// 4th rule (mark it as the most recently used)
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> val, isOk := l.data[key]; isOk {
&lt;span style="color:#008000">// this is the reason why we need to use popTail
&lt;/span>&lt;span style="color:#008000">&lt;/span> l.pop(val)
l.size--
}
&lt;span style="color:#008000">// 3rd rule
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> l.size &amp;gt;= l.capacity {
n := l.popHead()
delete(l.data, n.Key)
l.size--
}
&lt;span style="color:#008000">// push new data
&lt;/span>&lt;span style="color:#008000">&lt;/span> n := NewNode(key, value)
l.data[key] = n
l.pushTail(n)
l.size++
}
&lt;span style="color:#00f">func&lt;/span> (l *LRU) Get(key &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
val, isOk := l.data[key]
&lt;span style="color:#00f">if&lt;/span> !isOk {
&lt;span style="color:#00f">return&lt;/span> -1
}
&lt;span style="color:#008000">// remove it
&lt;/span>&lt;span style="color:#008000">&lt;/span> l.pop(val)
&lt;span style="color:#008000">// then mark it as the most recently used
&lt;/span>&lt;span style="color:#008000">&lt;/span> l.pushTail(val)
&lt;span style="color:#00f">return&lt;/span> val.Value
}
&lt;span style="color:#00f">func&lt;/span> (l *LRU) ShowQueue() {
fmt.Printf(&lt;span style="color:#a31515">&amp;#34;Least &amp;#34;&lt;/span>)
&lt;span style="color:#00f">for&lt;/span> n := l.head; n != l.tail; n = n.Next {
fmt.Printf(&lt;span style="color:#a31515">&amp;#34;%v -&amp;gt; &amp;#34;&lt;/span>, n.Key)
}
fmt.Println(l.tail.Key, &lt;span style="color:#a31515">&amp;#34;Most&amp;#34;&lt;/span>)
}
&lt;span style="color:#00f">func&lt;/span> main() {
lru := NewLRU(3)
lru.Set(1, 1)
lru.Set(2, 2)
lru.Set(3, 3)
&lt;span style="color:#008000">// Least 1 -&amp;gt; 2 -&amp;gt; 3 Most
&lt;/span>&lt;span style="color:#008000">&lt;/span> lru.ShowQueue()
&lt;span style="color:#008000">// 2
&lt;/span>&lt;span style="color:#008000">&lt;/span> fmt.Println(lru.Get(2))
&lt;span style="color:#008000">// Least 1 -&amp;gt; 3 -&amp;gt; 2 Most
&lt;/span>&lt;span style="color:#008000">&lt;/span> lru.ShowQueue()
lru.Set(1, 100)
&lt;span style="color:#008000">// Least 3 -&amp;gt; 2 -&amp;gt; 1 Most
&lt;/span>&lt;span style="color:#008000">&lt;/span> lru.ShowQueue()
lru.Set(4, 4)
&lt;span style="color:#008000">// Least 2 -&amp;gt; 1 -&amp;gt; 4 Most
&lt;/span>&lt;span style="color:#008000">&lt;/span> lru.ShowQueue()
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Buffered vs Unbuffered Channel in Golang</title><link>https://clavinjune.dev/en/blogs/buffered-vs-unbuffered-channel-in-golang/</link><pubDate>Sun, 24 Jan 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/buffered-vs-unbuffered-channel-in-golang/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1499159058454-75067059248a?w=1920&amp;amp;q=50" alt="Photo by @quinoal on Unsplash" title="Photo by @quinoal on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@quinoal">@quinoal&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;h2 id="small-talk-about-channel">Small talk about channel&lt;/h2>
&lt;p>If we talk about concurrency in Golang, Golang provides us with a type of concurrency communication called &lt;code>Channel&lt;/code>. Channel itself helps us to communicate between goroutines. We can send and receive messages from one goroutine to another. There are two types of channel in golang that we can used and let&amp;rsquo;s talk about them.&lt;/p>
&lt;h2 id="unbuffered-channel">Unbuffered Channel&lt;/h2>
&lt;p>&lt;code>Unbuffered channel&lt;/code> is a channel that &lt;code>initially has no capacity&lt;/code> to store message inside it. &lt;code>Unbuffered channel&lt;/code> requires us to fill the message in order to make the goroutine process unblocked by the channel. For example:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;time&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> access(ch &lt;span style="color:#00f">chan&lt;/span> &lt;span style="color:#2b91af">int&lt;/span>) {
time.Sleep(time.Second)
fmt.Println(&lt;span style="color:#a31515">&amp;#34;start accessing channel\n&amp;#34;&lt;/span>)
&lt;span style="color:#00f">for&lt;/span> i := &lt;span style="color:#00f">range&lt;/span> ch {
fmt.Println(i)
time.Sleep(time.Second)
}
}
&lt;span style="color:#00f">func&lt;/span> main() {
ch := make(&lt;span style="color:#00f">chan&lt;/span> &lt;span style="color:#2b91af">int&lt;/span>)
&lt;span style="color:#00f">defer&lt;/span> close(ch)
&lt;span style="color:#00f">go&lt;/span> access(ch)
&lt;span style="color:#00f">for&lt;/span> i := 0; i &amp;lt; 9; i++ {
ch &amp;lt;- i
fmt.Println(&lt;span style="color:#a31515">&amp;#34;Filled&amp;#34;&lt;/span>)
}
time.Sleep(3 * time.Second)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In the example above, our main function blocked when filling &lt;code>ch&lt;/code> one by one. And our &lt;code>access function&lt;/code> will print the message filled by &lt;code>main function&lt;/code> one by one also because of the for loop.&lt;/p>
&lt;p>Here is the output of the example above:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ go run chan.go
start accessing channel
0
Filled
1
Filled
2
Filled
3
Filled
4
Filled
5
Filled
6
Filled
7
Filled
8
Filled
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="buffered-channel">Buffered Channel&lt;/h2>
&lt;p>Unlike the Unbuffered Channel, &lt;code>Buffered Channel&lt;/code> has a capacity to store messages inside it. &lt;code>Buffered Channel&lt;/code> could be filled up to its defined capacity, not only one message. For example:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;time&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> access(ch &lt;span style="color:#00f">chan&lt;/span> &lt;span style="color:#2b91af">int&lt;/span>) {
time.Sleep(time.Second)
fmt.Println(&lt;span style="color:#a31515">&amp;#34;start accessing channel\n&amp;#34;&lt;/span>)
&lt;span style="color:#00f">for&lt;/span> i := &lt;span style="color:#00f">range&lt;/span> ch {
fmt.Println(i)
time.Sleep(time.Second)
}
}
&lt;span style="color:#00f">func&lt;/span> main() {
&lt;span style="color:#008000">// only modify this line to defined the capacity
&lt;/span>&lt;span style="color:#008000">&lt;/span> ch := make(&lt;span style="color:#00f">chan&lt;/span> &lt;span style="color:#2b91af">int&lt;/span>, 3)
&lt;span style="color:#00f">defer&lt;/span> close(ch)
&lt;span style="color:#00f">go&lt;/span> access(ch)
&lt;span style="color:#00f">for&lt;/span> i := 0; i &amp;lt; 9; i++ {
ch &amp;lt;- i
fmt.Println(&lt;span style="color:#a31515">&amp;#34;Filled&amp;#34;&lt;/span>)
}
time.Sleep(3 * time.Second)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Here is the output:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ go run chan.go
Filled
Filled
Filled
start accessing channel
0
Filled
1
Filled
2
Filled
3
Filled
4
Filled
5
Filled
6
7
8
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>As you can see, the &lt;code>ch&lt;/code> could be filled first until it is full-capacity then the other goroutine could access it one by one.&lt;/p>
&lt;h2 id="differences">Differences&lt;/h2>
&lt;p>&lt;code>Unbuffered Channel&lt;/code> has no capacity initially, but &lt;code>Buffered Channel&lt;/code> has a capacity.&lt;/p>
&lt;p>&lt;code>Unbuffered Channel&lt;/code> will block the goroutine whenever &lt;code>it is empty and waiting to be filled&lt;/code>. But &lt;code>Buffered Channel&lt;/code> will also block the goroutine either when &lt;code>it is empty and waiting to be filled&lt;/code> or &lt;code>it's on its full-capacity and there's a statement that want to fill the channel&lt;/code>.&lt;/p>
&lt;h2 id="capacity">Capacity&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">unbuffered := make(&lt;span style="color:#00f">chan&lt;/span> &lt;span style="color:#2b91af">int&lt;/span>)
buffered := make(&lt;span style="color:#00f">chan&lt;/span> &lt;span style="color:#2b91af">int&lt;/span>, 30)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="empty-and-waiting-to-be-filled">Empty and Waiting to be filled&lt;/h2>
&lt;p>&lt;code>Both Buffered and Unbuffered&lt;/code> channel blocks the goroutine until it is filled in this case blocks for a second.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> main() {
ch := make(&lt;span style="color:#00f">chan&lt;/span> &lt;span style="color:#2b91af">int&lt;/span>)
&lt;span style="color:#00f">defer&lt;/span> close(ch)
&lt;span style="color:#00f">go&lt;/span> &lt;span style="color:#00f">func&lt;/span>(ch &lt;span style="color:#00f">chan&lt;/span> &lt;span style="color:#2b91af">int&lt;/span>) {
time.Sleep(time.Second)
ch &amp;lt;- 1
}(ch)
&amp;lt;-ch
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="full-capacity-and-theres-statement-that-want-to-fill-the-channel">Full Capacity and there&amp;rsquo;s statement that want to fill the channel&lt;/h2>
&lt;p>Only &lt;code>Buffered&lt;/code> channel blocks on &lt;code>ch &amp;lt;- 2&lt;/code> because the &lt;code>ch&lt;/code> is on its full capacity and waiting to be released. The &lt;code>Unbuffered Channel&lt;/code> will go deadlock this time because there&amp;rsquo;s no goroutine accessing the message &lt;code>2&lt;/code> but it is filled.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> main() {
ch := make(&lt;span style="color:#00f">chan&lt;/span> &lt;span style="color:#2b91af">int&lt;/span>, 1)
&lt;span style="color:#00f">defer&lt;/span> close(ch)
&lt;span style="color:#00f">go&lt;/span> &lt;span style="color:#00f">func&lt;/span>(ch &lt;span style="color:#00f">chan&lt;/span> &lt;span style="color:#2b91af">int&lt;/span>) {
time.Sleep(time.Second)
&amp;lt;-ch
}(ch)
ch &amp;lt;- 1
ch &amp;lt;- 2
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Linux Retains the Size of the Deleted File</title><link>https://clavinjune.dev/en/blogs/linux-retains-the-size-of-the-deleted-file/</link><pubDate>Sat, 23 Jan 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/linux-retains-the-size-of-the-deleted-file/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1512317049220-d3c6fcaf6681?w=1920&amp;amp;q=50" alt="Photo by @ilyapavlov on Unsplash" title="Photo by @ilyapavlov on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@ilyapavlov">@ilyapavlov&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>While interning, I once had an application that logged every request and response to the Linux file system. That app easily fills up our disks due to traffic. I got confused when I tried to delete log files because disk usage didn&amp;rsquo;t decrease even after the log files were deleted. So I restarted the app and finally, the disk usage decreased.&lt;/p>
&lt;p>But it is ineffective because we need to kill the application which is making a downtime at that time. Recently, I learned that it was caused by something called a &lt;code>file descriptor&lt;/code>.&lt;/p>
&lt;h2 id="tldr">TL;DR&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7">7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8">8&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ df -h &amp;lt;big file dir&amp;gt;
$ rm -f &amp;lt;big file&amp;gt; &lt;span style="color:#008000"># remove the big file&lt;/span>
$ df -h &amp;lt;big file dir&amp;gt; &lt;span style="color:#008000"># it still the same&lt;/span>
$ lsof +L1 | grep &amp;lt;big file&amp;gt; &lt;span style="color:#008000"># get the running app PID&lt;/span>
$ cd /proc/&amp;lt;PID&amp;gt;/fd/ &lt;span style="color:#008000"># go to the running app fd&lt;/span>
$ ls -l | grep &amp;lt;big file&amp;gt; &lt;span style="color:#008000"># get the symlink&lt;/span>
$ &amp;gt; &amp;lt;symlink&amp;gt; &lt;span style="color:#008000"># empty the symlink&lt;/span>
$ df -h &amp;lt;big file dir&amp;gt; &lt;span style="color:#008000"># it backs to normal&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s reproduce that incident.&lt;/p>
&lt;h2 id="creating-a-big-file">Creating a big file&lt;/h2>
&lt;p>We need to create a big file, to fill our disk up. I think 3GB is enough. Well, you don&amp;rsquo;t need to make it big just to reproduce, but more than 1GB could show the difference easily in the &lt;code>df -h&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ yes lorem ipsum dolor sit amet &lt;span style="color:#a31515">\
&lt;/span>&lt;span style="color:#a31515">&lt;/span> | head -c 3GB &amp;gt;&amp;gt; big-file.txt
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Yep, now you have a 3GB file contains lorem ipsum called &lt;code>big-file.txt&lt;/code>&lt;/p>
&lt;h2 id="create-a-simple-app">Create a simple app&lt;/h2>
&lt;p>Then we need to create an app that simply read &lt;code>big-file.txt&lt;/code>. But I want to show you even if the &lt;code>big-file.txt&lt;/code> is deleted, our app still writing to it. So I make the app read and append the &lt;code>big-file.txt&lt;/code> using Golang, you can do it with whatever you prefer. Let&amp;rsquo;s call it &lt;code>write-to-file.go&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;os&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> main() {
f, err := os.OpenFile(&lt;span style="color:#a31515">&amp;#34;big-file.txt&amp;#34;&lt;/span>,
os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
panic(err)
}
&lt;span style="color:#00f">defer&lt;/span> f.Close()
&lt;span style="color:#00f">for&lt;/span> i := 0; ; i++ {
fmt.Scanln()
fmt.Fprintf(f, &lt;span style="color:#a31515">&amp;#34;%d\n&amp;#34;&lt;/span>, i)
fmt.Println(i, &lt;span style="color:#a31515">&amp;#34;written&amp;#34;&lt;/span>)
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>It will wait for our input and loop forever until we terminate the app.&lt;/p>
&lt;h2 id="check-current-disk-usage">Check current disk usage&lt;/h2>
&lt;p>Well, because I put it in the &lt;code>home dir&lt;/code>, I check the size of the &lt;code>/home&lt;/code> using &lt;code>df&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ df -h /home
Filesystem Size Used Avail Use% Mounted on
/dev/sdb1 913G 34G 832G 4% /home
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="tail-the-appended-text-in-the-file">Tail the appended text in the file&lt;/h2>
&lt;p>&lt;code>tail -f&lt;/code> will follow the last 10 lines in the file and it would show this&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ tail -f big-file.txt
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lor
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="run-the-app">Run the app&lt;/h2>
&lt;p>Let&amp;rsquo;s run our &lt;code>write-to-file.go&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ go run write-to-file.go
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>For every &lt;code>Enter&lt;/code> you input, it will append the &lt;code>big-file.txt&lt;/code> like this&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ tail -f big-file.txt
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lor0
1
2
3
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ go run write-to-file.go
0 written
1 written
2 written
3 written
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="remove-the-file">Remove the file&lt;/h2>
&lt;p>Now let&amp;rsquo;s stop the &lt;code>tail -f&lt;/code> and remove that &lt;code>big-file.txt&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ rm big-file.txt
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Does your disk usage decreased? Unfortunately, mine is not. It might be karma working there isn&amp;rsquo;t it?&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ df -h /home
Filesystem Size Used Avail Use% Mounted on
/dev/sdb1 913G 34G 832G 4% /home
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now, how to &lt;code>really remove&lt;/code> the &lt;code>big-file.txt&lt;/code>?&lt;/p>
&lt;p>For doing that we need to check the current running process that still open that &lt;code>big-file.txt&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ lsof +L1 | grep big-file.txt
write-to- 102333 clavinjune 3w REG 8,17 3000000008 0 7341204 /home/clavinjune/Public/file-descriptor/big-file.txt (deleted)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now we got the app&amp;rsquo;s name, its PID, and we know that the Linux know the &lt;code>big-file.txt&lt;/code> is already &lt;code>deleted&lt;/code>.&lt;/p>
&lt;p>Let&amp;rsquo;s open the &lt;code>file descriptor&lt;/code> of the app at &lt;code>/proc/&amp;lt;PID&amp;gt;/fd&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ cd /proc/102333/fd
$ ls -l | grep big-file.txt
l-wx------ 1 clavinjune clavinjune 64 Jan 23 01:38 3 -&amp;gt; /home/clavinjune/Public/file-descriptor/big-file.txt (deleted)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>It seems like, we have a symlink called &lt;code>3&lt;/code> that linked to our &lt;code>big-file.txt&lt;/code>.&lt;/p>
&lt;p>Now if you &lt;code>tail -f&lt;/code> to the symlink and input some &lt;code>Enter&lt;/code> to the app, it will show something like this&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ tail -f 3
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lorem ipsum dolor sit amet
lor0
1
2
3
4
5
6
7
8
9
10
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Interesting isn&amp;rsquo;t it? Even if the &lt;code>big-file.txt&lt;/code> is deleted, the app still writing into the symlink. That symlink held our disk space, so we need to make that symlink is empty. By simply echoing nothing to the symlink in this case echoing nothing to &lt;code>3&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ &amp;gt; 3
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now check the disk usage it will return to normal like we really delete the &lt;code>big-file.txt&lt;/code> and the program is still running and still appending to the file.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ df -h /home
Filesystem Size Used Avail Use% Mounted on
/dev/sdb1 913G 32G 835G 4% /home
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s input some &lt;code>Enter&lt;/code> to the app again then the symlink will filled up again by the app.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7">7&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ tail -f 3
11
12
13
14
15
16
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Max Heap in Go</title><link>https://clavinjune.dev/en/blogs/max-heap-in-go/</link><pubDate>Sat, 16 Jan 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/max-heap-in-go/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1532543307581-8b01a7ff954f?w=1920&amp;amp;q=50" alt="Photo by @freestocks on Unsplash" title="Photo by @freestocks on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@freestocks">@freestocks&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>Same as the case &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://clavinjune.dev/blog/binary-search-tree-in-go-0f34cd/" >here&lt;/a>, I just wanted to revisit another data structure. Well, Max Heap (also Min Heap) is a data structure that commonly used to create a priority queue which also a complete binary tree that has nodes which value is greater (or lesser) than its children value.&lt;/p>
&lt;p>Not like BST that I implemented before, Max Heap commonly implemented using array in order to make it easier (I think) to access its children. To accessing each nodes parent or children you can visualize the whole array as a tree. I have no image for it, so I pick Max Heap image from another website. The concept is the same with Min Heap tho.&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="https://iq.opengenus.org/content/images/2019/06/Max-Heap.png" alt="Photo by opengenus.org" title="Photo by opengenus.org" width="100%" />
&lt;figcaption>Photo by opengenus.org&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Finally we start array from 1 (LOL). Why we start from 1? Because index 0 couldn&amp;rsquo;t be accessed by this formula.&lt;/p>
&lt;p>Refer to the provided image above, we can visualize that left child of a node is on the &lt;code>currentIndex * 2&lt;/code>, the right child is on the &lt;code>currentIndex * 2 + 1&lt;/code>, and you can access the parent of the node by using &lt;code>currentIndex / 2&lt;/code>.&lt;/p>
&lt;p>For example, Node with value &lt;code>15&lt;/code>, has 2 children which are &lt;code>10&lt;/code> and &lt;code>5&lt;/code>. You can see the index of &lt;code>15&lt;/code> which is &lt;code>3&lt;/code>. Its left child is &lt;code>10&lt;/code> which has index &lt;code>3 * 2 = 6&lt;/code>, and its right children is &lt;code>5&lt;/code> which has index &lt;code>3 * 2 + 1 = 7&lt;/code>.&lt;/p>
&lt;p>Enough with the theory, you can read it from your book. I only want to write the implementation here using Go. I only implement &lt;code>Push&lt;/code>, &lt;code>Pop&lt;/code>, and &lt;code>Peek&lt;/code> operation. It&amp;rsquo;s hard to decide the name of the operation, but as long as it describes the operation please don&amp;rsquo;t mind.&lt;/p>
&lt;h2 id="define-maxheap-struct">Define MaxHeap Struct&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">type&lt;/span> MaxHeap &lt;span style="color:#00f">struct&lt;/span> {
heap []&lt;span style="color:#2b91af">int&lt;/span>
capacity &lt;span style="color:#2b91af">int&lt;/span>
size &lt;span style="color:#2b91af">int&lt;/span>
root &lt;span style="color:#2b91af">int&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>MaxHeap will have at least size, capacity, and heap itself. &lt;code>root&lt;/code> attribute will be &lt;code>constant&lt;/code> since its root should always be &lt;code>1&lt;/code>. &lt;code>size&lt;/code> will define the current size of the heap, &lt;code>capacity&lt;/code> will define how much the heap can store data, and the &lt;code>heap&lt;/code> itself is an array that we stored the data into.&lt;/p>
&lt;h2 id="constructor">Constructor&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> NewMaxHeap(capacity &lt;span style="color:#2b91af">int&lt;/span>) *MaxHeap {
&lt;span style="color:#008000">// because we used the 0 index
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// we need to increase the capacity defined by user
&lt;/span>&lt;span style="color:#008000">&lt;/span> c := capacity + 1
h := make([]&lt;span style="color:#2b91af">int&lt;/span>, c, c)
&lt;span style="color:#008000">// just to mark that it is the minimum one,
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// you can ignore this
&lt;/span>&lt;span style="color:#008000">&lt;/span> h[0] = (1 &amp;lt;&amp;lt; 31) - 1
&lt;span style="color:#00f">return&lt;/span> &amp;amp;MaxHeap{
root: 1, &lt;span style="color:#008000">// always 1, you can omit this attribute
&lt;/span>&lt;span style="color:#008000">&lt;/span> size: 0,
capacity: c,
heap: h,
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="helper-method">Helper Method&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (MaxHeap) getParent(idx &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> idx / 2
}
&lt;span style="color:#00f">func&lt;/span> (MaxHeap) getLeft(idx &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> idx * 2
}
&lt;span style="color:#00f">func&lt;/span> (MaxHeap) getRight(idx &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> idx*2 + 1
}
&lt;span style="color:#00f">func&lt;/span> (m *MaxHeap) swap(idx1, idx2 &lt;span style="color:#2b91af">int&lt;/span>) {
m.heap[idx1], m.heap[idx2] = m.heap[idx2], m.heap[idx1]
}
&lt;span style="color:#00f">func&lt;/span> (m MaxHeap) String() &lt;span style="color:#2b91af">string&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> fmt.Sprintf(&lt;span style="color:#a31515">`size: %v
&lt;/span>&lt;span style="color:#a31515">capacity: %v
&lt;/span>&lt;span style="color:#a31515">heap: %v`&lt;/span>,
m.size, m.capacity-1, m.heap[1:])
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="push">Push&lt;/h2>
&lt;p>Push into max / min heap should be easy, just put the element where it belongs according to the index, and check if its value is greater / lesser than its parent, if you&amp;rsquo;re implementing max heap, check whether its value is greater than its parent, if so swap its value with its parent value.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (m *MaxHeap) Push(element &lt;span style="color:#2b91af">int&lt;/span>) {
&lt;span style="color:#008000">// check whether it can store the element
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> m.size &amp;gt;= m.capacity-1 {
&lt;span style="color:#00f">return&lt;/span>
}
m.size++
idx := m.size
&lt;span style="color:#008000">// put it according to the index
&lt;/span>&lt;span style="color:#008000">&lt;/span> m.heap[idx] = element
parent := m.getParent(idx)
&lt;span style="color:#008000">// check if its value is greater than its parent
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">for&lt;/span> m.heap[idx] &amp;gt; m.heap[parent] {
&lt;span style="color:#008000">// then swap
&lt;/span>&lt;span style="color:#008000">&lt;/span> m.swap(idx, parent)
&lt;span style="color:#008000">// repeat the process until
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// the greatest value is on the top
&lt;/span>&lt;span style="color:#008000">&lt;/span> idx = parent
parent = m.getParent(idx)
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="peek">Peek&lt;/h2>
&lt;p>Peek operation will return the greatest / least value which is the root.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7">7&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (m MaxHeap) Peek() (&lt;span style="color:#2b91af">int&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">if&lt;/span> m.size &amp;lt;= 0 {
&lt;span style="color:#00f">return&lt;/span> (1 &amp;lt;&amp;lt; 31) - 1, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;max-heap: heap is empty&amp;#34;&lt;/span>)
}
&lt;span style="color:#00f">return&lt;/span> m.heap[m.root], &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s check our heap&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> main() {
h := NewMaxHeap(15)
h.Push(1)
h.Push(4)
h.Push(2)
h.Push(5)
fmt.Println(h)
g, _ := h.Peek()
fmt.Println(&lt;span style="color:#a31515">&amp;#34;greatest:&amp;#34;&lt;/span>, g)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The output should be like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">size: 4
capacity: 15
heap: [5 4 2 1 0 0 0 0 0 0 0 0 0 0 0]
greatest: 5
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="pop">Pop&lt;/h2>
&lt;p>Now let&amp;rsquo;s pop something. Popping operation will return value of the greatest / least value and delete it from the heap. We need to rebalance the heap So the greatest / least value will be the root again.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34">34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35">35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36">36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37">37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38">38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39">39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40">40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41">41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42">42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43">43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44">44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45">45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46">46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47">47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48">48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49">49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50">50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51">51&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (m *MaxHeap) rebalance(idx &lt;span style="color:#2b91af">int&lt;/span>) {
&lt;span style="color:#008000">// don&amp;#39;t rebalance if node index
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// is greater than heap size
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> idx &amp;gt;= m.size {
&lt;span style="color:#00f">return&lt;/span>
}
&lt;span style="color:#008000">// fetch the left child index
&lt;/span>&lt;span style="color:#008000">&lt;/span> left := m.getLeft(idx)
&lt;span style="color:#008000">// fetch the right child index
&lt;/span>&lt;span style="color:#008000">&lt;/span> right := m.getRight(idx)
&lt;span style="color:#008000">// only swap if children position is wrong
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// and only the children index is less than heap size
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// and then rebalance it
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> left &amp;lt;= m.size {
&lt;span style="color:#00f">if&lt;/span> m.heap[idx] &amp;lt; m.heap[left] {
m.swap(idx, left)
m.rebalance(left)
}
}
&lt;span style="color:#00f">if&lt;/span> right &amp;lt;= m.size {
&lt;span style="color:#00f">if&lt;/span> m.heap[idx] &amp;lt; m.heap[right] {
m.swap(idx, right)
m.rebalance(right)
}
}
}
&lt;span style="color:#00f">func&lt;/span> (m *MaxHeap) Pop() (&lt;span style="color:#2b91af">int&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">if&lt;/span> m.size &amp;lt;= 0 {
&lt;span style="color:#00f">return&lt;/span> (1 &amp;lt;&amp;lt; 31) - 1, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;max-heap: heap is empty&amp;#34;&lt;/span>)
}
&lt;span style="color:#008000">// fetch the root
&lt;/span>&lt;span style="color:#008000">&lt;/span> max := m.heap[m.root]
&lt;span style="color:#008000">// make the route is the last element in the heap
&lt;/span>&lt;span style="color:#008000">&lt;/span> m.heap[m.root] = m.heap[m.size]
&lt;span style="color:#008000">// make it zero value
&lt;/span>&lt;span style="color:#008000">&lt;/span> m.heap[m.size] = 0
&lt;span style="color:#008000">// decrease the size so the zero value won&amp;#39;t be counted
&lt;/span>&lt;span style="color:#008000">&lt;/span> m.size--
&lt;span style="color:#008000">// rebalance the heap
&lt;/span>&lt;span style="color:#008000">&lt;/span> m.rebalance(m.root)
&lt;span style="color:#008000">// return the greatest
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">return&lt;/span> max, &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So whenever Pop operation is called, the heap will rebalance it from the top until its leaf. The whole code should be look like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10"> 10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11"> 11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12"> 12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13"> 13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14"> 14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15"> 15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16"> 16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17"> 17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18"> 18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19"> 19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20"> 20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21"> 21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22"> 22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23"> 23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24"> 24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25"> 25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26"> 26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27"> 27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28"> 28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29"> 29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30"> 30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31"> 31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32"> 32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33"> 33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34"> 34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35"> 35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36"> 36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37"> 37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38"> 38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39"> 39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40"> 40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41"> 41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42"> 42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43"> 43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44"> 44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45"> 45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46"> 46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47"> 47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48"> 48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49"> 49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50"> 50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51"> 51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52"> 52&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="53">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#53"> 53&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="54">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#54"> 54&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="55">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#55"> 55&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="56">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#56"> 56&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="57">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#57"> 57&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="58">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#58"> 58&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="59">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#59"> 59&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="60">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#60"> 60&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="61">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#61"> 61&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="62">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#62"> 62&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="63">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#63"> 63&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="64">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#64"> 64&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="65">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#65"> 65&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="66">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#66"> 66&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="67">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#67"> 67&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="68">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#68"> 68&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="69">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#69"> 69&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="70">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#70"> 70&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="71">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#71"> 71&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="72">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#72"> 72&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="73">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#73"> 73&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="74">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#74"> 74&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="75">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#75"> 75&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="76">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#76"> 76&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="77">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#77"> 77&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="78">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#78"> 78&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="79">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#79"> 79&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="80">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#80"> 80&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="81">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#81"> 81&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="82">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#82"> 82&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="83">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#83"> 83&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="84">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#84"> 84&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="85">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#85"> 85&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="86">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#86"> 86&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="87">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#87"> 87&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="88">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#88"> 88&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="89">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#89"> 89&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="90">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#90"> 90&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="91">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#91"> 91&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="92">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#92"> 92&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="93">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#93"> 93&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="94">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#94"> 94&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="95">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#95"> 95&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="96">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#96"> 96&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="97">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#97"> 97&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="98">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#98"> 98&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="99">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#99"> 99&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="100">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#100">100&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="101">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#101">101&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="102">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#102">102&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="103">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#103">103&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="104">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#104">104&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="105">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#105">105&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="106">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#106">106&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="107">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#107">107&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="108">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#108">108&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="109">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#109">109&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="110">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#110">110&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="111">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#111">111&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="112">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#112">112&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="113">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#113">113&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="114">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#114">114&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="115">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#115">115&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="116">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#116">116&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="117">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#117">117&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="118">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#118">118&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="119">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#119">119&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="120">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#120">120&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="121">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#121">121&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="122">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#122">122&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="123">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#123">123&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="124">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#124">124&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="125">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#125">125&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="126">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#126">126&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="127">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#127">127&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="128">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#128">128&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="129">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#129">129&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="130">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#130">130&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="131">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#131">131&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="132">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#132">132&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="133">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#133">133&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="134">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#134">134&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="135">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#135">135&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="136">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#136">136&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="137">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#137">137&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="138">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#138">138&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="139">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#139">139&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="140">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#140">140&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="141">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#141">141&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> &lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#00f">type&lt;/span> MaxHeap &lt;span style="color:#00f">struct&lt;/span> {
heap []&lt;span style="color:#2b91af">int&lt;/span>
capacity &lt;span style="color:#2b91af">int&lt;/span>
size &lt;span style="color:#2b91af">int&lt;/span>
root &lt;span style="color:#2b91af">int&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> (MaxHeap) getParent(idx &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> idx / 2
}
&lt;span style="color:#00f">func&lt;/span> (MaxHeap) getLeft(idx &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> idx * 2
}
&lt;span style="color:#00f">func&lt;/span> (MaxHeap) getRight(idx &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> idx*2 + 1
}
&lt;span style="color:#00f">func&lt;/span> (m *MaxHeap) swap(idx1, idx2 &lt;span style="color:#2b91af">int&lt;/span>) {
m.heap[idx1], m.heap[idx2] = m.heap[idx2], m.heap[idx1]
}
&lt;span style="color:#00f">func&lt;/span> (m MaxHeap) String() &lt;span style="color:#2b91af">string&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> fmt.Sprintf(&lt;span style="color:#a31515">`size: %v
&lt;/span>&lt;span style="color:#a31515">capacity: %v
&lt;/span>&lt;span style="color:#a31515">heap: %v`&lt;/span>,
m.size, m.capacity-1, m.heap[1:])
}
&lt;span style="color:#00f">func&lt;/span> (m *MaxHeap) rebalance(idx &lt;span style="color:#2b91af">int&lt;/span>) {
&lt;span style="color:#00f">if&lt;/span> idx &amp;gt;= m.size {
&lt;span style="color:#00f">return&lt;/span>
}
left := m.getLeft(idx)
right := m.getRight(idx)
&lt;span style="color:#00f">if&lt;/span> left &amp;lt;= m.size {
&lt;span style="color:#00f">if&lt;/span> m.heap[idx] &amp;lt; m.heap[left] {
m.swap(idx, left)
m.rebalance(left)
}
}
&lt;span style="color:#00f">if&lt;/span> right &amp;lt;= m.size {
&lt;span style="color:#00f">if&lt;/span> m.heap[idx] &amp;lt; m.heap[right] {
m.swap(idx, right)
m.rebalance(right)
}
}
}
&lt;span style="color:#00f">func&lt;/span> (m *MaxHeap) Pop() (&lt;span style="color:#2b91af">int&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">if&lt;/span> m.size &amp;lt;= 0 {
&lt;span style="color:#00f">return&lt;/span> (1 &amp;lt;&amp;lt; 31) - 1, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;max-heap: heap is empty&amp;#34;&lt;/span>)
}
&lt;span style="color:#008000">// fetch the root
&lt;/span>&lt;span style="color:#008000">&lt;/span> max := m.heap[m.root]
&lt;span style="color:#008000">// make the route is the last element in the heap
&lt;/span>&lt;span style="color:#008000">&lt;/span> m.heap[m.root] = m.heap[m.size]
&lt;span style="color:#008000">// make it zero value
&lt;/span>&lt;span style="color:#008000">&lt;/span> m.heap[m.size] = 0
&lt;span style="color:#008000">// decrease the size so the zero value won&amp;#39;t be counted
&lt;/span>&lt;span style="color:#008000">&lt;/span> m.size--
&lt;span style="color:#008000">// rebalance the heap
&lt;/span>&lt;span style="color:#008000">&lt;/span> m.rebalance(m.root)
&lt;span style="color:#008000">// return the greatest
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">return&lt;/span> max, &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> (m MaxHeap) Peek() (&lt;span style="color:#2b91af">int&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">if&lt;/span> m.size &amp;lt;= 0 {
&lt;span style="color:#00f">return&lt;/span> (1 &amp;lt;&amp;lt; 31) - 1, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;max-heap: heap is empty&amp;#34;&lt;/span>)
}
&lt;span style="color:#00f">return&lt;/span> m.heap[m.root], &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> (m *MaxHeap) Push(element &lt;span style="color:#2b91af">int&lt;/span>) {
&lt;span style="color:#008000">// exceed the limit
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> m.size &amp;gt;= m.capacity-1 {
&lt;span style="color:#00f">return&lt;/span>
}
m.size++
idx := m.size
m.heap[idx] = element
parent := m.getParent(idx)
&lt;span style="color:#00f">for&lt;/span> m.heap[idx] &amp;gt; m.heap[parent] {
m.swap(idx, parent)
idx = parent
parent = m.getParent(idx)
}
}
&lt;span style="color:#00f">func&lt;/span> NewMaxHeap(capacity &lt;span style="color:#2b91af">int&lt;/span>) *MaxHeap {
&lt;span style="color:#008000">// because we used the 0 index
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// we need to increase the capacity defined by user
&lt;/span>&lt;span style="color:#008000">&lt;/span> c := capacity + 1
h := make([]&lt;span style="color:#2b91af">int&lt;/span>, c, c)
&lt;span style="color:#008000">// just to mark that it is the minimum one,
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// you can ignore this
&lt;/span>&lt;span style="color:#008000">&lt;/span> h[0] = (1 &amp;lt;&amp;lt; 31) - 1
&lt;span style="color:#00f">return&lt;/span> &amp;amp;MaxHeap{
root: 1, &lt;span style="color:#008000">// always 1, you can omit this attribute
&lt;/span>&lt;span style="color:#008000">&lt;/span> size: 0,
capacity: c,
heap: h,
}
}
&lt;span style="color:#00f">func&lt;/span> main() {
h := NewMaxHeap(15)
h.Push(1)
h.Push(4)
h.Push(2)
h.Push(5)
h.Push(3)
h.Push(10)
fmt.Println(h.Pop())
fmt.Println(h.Pop())
fmt.Println(h.Pop())
h.Push(11)
fmt.Println(h)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Python Format Specifier Thousands Separator</title><link>https://clavinjune.dev/en/blogs/python-format-specifier-thousands-separator/</link><pubDate>Sat, 16 Jan 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/python-format-specifier-thousands-separator/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1457904375453-3e1fc2fc76f4?w=1920&amp;amp;q=50" alt="Photo by @volkanolmez on Unsplash" title="Photo by @volkanolmez on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@volkanolmez">@volkanolmez&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>I hate to say this, but I forgot this one-liner syntax in my online coding test. So, I think I need to put this here.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">format = &lt;span style="color:#00f">lambda&lt;/span> n: &lt;span style="color:#a31515">&amp;#39;&lt;/span>&lt;span style="color:#a31515">{:,}&lt;/span>&lt;span style="color:#a31515">&amp;#39;&lt;/span>.format(n)
print(format(-1234567890)) &lt;span style="color:#008000"># -1,234,567,890&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Greatest Common Divisor and Least Common Multiplier</title><link>https://clavinjune.dev/en/blogs/greatest-common-divisor-and-least-common-multiplier/</link><pubDate>Mon, 11 Jan 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/greatest-common-divisor-and-least-common-multiplier/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1453733190371-0a9bedd82893?w=1920&amp;amp;q=50" alt="Photo by @roman_lazygeek on Unsplash" title="Photo by @roman_lazygeek on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@roman_lazygeek">@roman_lazygeek&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>I only rewrite what was written on my &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://pastebin.com/eDNgaM7F" >pastebin&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> &lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#00f">func&lt;/span> findGCD(a, b &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> b == 0 {
&lt;span style="color:#00f">return&lt;/span> a
}
&lt;span style="color:#00f">return&lt;/span> findGCD(b, a%b)
}
&lt;span style="color:#00f">func&lt;/span> findLCM(a, b &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> a * b / findGCD(a, b)
}
&lt;span style="color:#00f">func&lt;/span> main() {
fmt.Println(findGCD(25, 100))
fmt.Println(findLCM(25, 100))
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Sieve of Eratosthenes</title><link>https://clavinjune.dev/en/blogs/sieve-of-eratosthenes/</link><pubDate>Sun, 10 Jan 2021 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/sieve-of-eratosthenes/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1453733190371-0a9bedd82893?w=1920&amp;amp;q=50" alt="Photo by @roman_lazygeek on Unsplash" title="Photo by @roman_lazygeek on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@roman_lazygeek">@roman_lazygeek&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>I don&amp;rsquo;t do anything except converting the pseudocode from &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes#Pseudocode" >wiki&lt;/a> into Golang code&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34">34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35">35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36">36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37">37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38">38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39">39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40">40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41">41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42">42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43">43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44">44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45">45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46">46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47">47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48">48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49">49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50">50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51">51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52">52&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> &lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#00f">func&lt;/span> fetchFirstPrimeNumbersOf(n &lt;span style="color:#2b91af">int&lt;/span>) []&lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">var&lt;/span> result []&lt;span style="color:#2b91af">int&lt;/span>
&lt;span style="color:#008000">// an integer n &amp;gt; 1
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> n &amp;lt;= 1 {
&lt;span style="color:#00f">return&lt;/span> result
}
&lt;span style="color:#008000">// let A be an array of Boolean values
&lt;/span>&lt;span style="color:#008000">&lt;/span> isPrime := make([]&lt;span style="color:#2b91af">bool&lt;/span>, n)
&lt;span style="color:#008000">// indexed by integers 2 to n,
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// initially all set to true.
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">for&lt;/span> i := 2; i &amp;lt; n; i++ {
isPrime[i] = &lt;span style="color:#00f">true&lt;/span>
}
&lt;span style="color:#008000">// for i = 2, 3, 4, ..., not exceeding √n do
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">for&lt;/span> i := 2; i*i &amp;lt; n; i++ {
&lt;span style="color:#008000">// I reverse the conditional check in order to make things a bit pretty
&lt;/span>&lt;span style="color:#008000">&lt;/span>
&lt;span style="color:#008000">// if A[i] is true
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> !isPrime[i] {
&lt;span style="color:#00f">continue&lt;/span>
}
&lt;span style="color:#008000">// for j = i^2, (i^2)+i, (i^2)+2i, (i^2)+3i, ..., not exceeding n do
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">for&lt;/span> j := i * i; j &amp;lt; n; j += i {
&lt;span style="color:#008000">// A[j] := false
&lt;/span>&lt;span style="color:#008000">&lt;/span> isPrime[j] = &lt;span style="color:#00f">false&lt;/span>
}
}
&lt;span style="color:#008000">// return all i such that A[i] is true.
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">for&lt;/span> i := 2; i &amp;lt; n; i++ {
&lt;span style="color:#00f">if&lt;/span> !isPrime[i] {
&lt;span style="color:#00f">continue&lt;/span>
}
result = append(result, i)
}
&lt;span style="color:#00f">return&lt;/span> result
}
&lt;span style="color:#00f">func&lt;/span> main() {
fmt.Println(fetchFirstPrimeNumbersOf(100))
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Contextual Logging in Go</title><link>https://clavinjune.dev/en/blogs/contextual-logging-in-go/</link><pubDate>Sat, 19 Dec 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/contextual-logging-in-go/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1580245492316-d542d595001b?w=1920&amp;amp;q=50" alt="Photo by @borisview on Unsplash" title="Photo by @borisview on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@borisview">@borisview&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>I’ve just woke up and somehow I remembered when I created &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://clavinjune.dev/blog/creating-taboo-error-handler-for-go-f8e220" >taboo&lt;/a> to trace the error log. And then I think, would it be better if I pass the logger instead of the error log itself?&lt;/p>
&lt;p>As the context passed, it will contain a sub-logger that has &lt;code>x-request-id&lt;/code> inside it. It’ll trace all the requested event from HTTP Handler to the most corner of the function.&lt;/p>
&lt;p>I don&amp;rsquo;t know if this gonna be good because I wrote this immediately right after I woke up. This might be not optimized or perhaps an anti-pattern. But at least this could be a reference for you to create a contextual logger.&lt;/p>
&lt;h2 id="logger">Logger&lt;/h2>
&lt;p>First thing first, you need a logger. Might be anything, but I will use &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://github.com/rs/zerolog" >zerolog&lt;/a> in this post. I won&amp;rsquo;t explain about zerolog since you can use anything you want.&lt;/p>
&lt;p>Format the base logger to match your logging style.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> configureBaseLogger() {
output := zerolog.ConsoleWriter{
Out: os.Stdout,
FormatTimestamp: &lt;span style="color:#00f">func&lt;/span>(i &lt;span style="color:#00f">interface&lt;/span>{}) &lt;span style="color:#2b91af">string&lt;/span> {
parse, _ := time.Parse(time.RFC3339, i.(&lt;span style="color:#2b91af">string&lt;/span>))
&lt;span style="color:#00f">return&lt;/span> parse.Format(&lt;span style="color:#a31515">&amp;#34;2006-01-02 15:04:05&amp;#34;&lt;/span>)
},
FormatLevel: &lt;span style="color:#00f">func&lt;/span>(i &lt;span style="color:#00f">interface&lt;/span>{}) &lt;span style="color:#2b91af">string&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> strings.ToUpper(fmt.Sprintf(&lt;span style="color:#a31515">&amp;#34; %-6s &amp;#34;&lt;/span>, i))
},
}
log.Logger = zerolog.New(output).With().
Timestamp().CallerWithSkipFrameCount(2).Logger()
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s test our base logger&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> main() {
configureBaseLogger()
log.Info().Msg(&lt;span style="color:#a31515">&amp;#34;testing&amp;#34;&lt;/span>)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Output:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">2020-12-19 01:01:37 INFO logger/main.go:57 &amp;gt; testing
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>LGTM! Let&amp;rsquo;s continue creating our handler!&lt;/p>
&lt;h2 id="middleware">Middleware&lt;/h2>
&lt;p>Here I&amp;rsquo;ll log the request using the middleware. So I&amp;rsquo;m gonna make a new type of handler to matched my middleware.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">type&lt;/span> HandlerFuncWithStatus &lt;span style="color:#00f">func&lt;/span>(writer http.ResponseWriter, request *http.Request) &lt;span style="color:#2b91af">int&lt;/span>
&lt;span style="color:#00f">const&lt;/span> (
LoggerCtxKey = &lt;span style="color:#00f">iota&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> middleware(next HandlerFuncWithStatus) http.HandlerFunc {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">func&lt;/span>(writer http.ResponseWriter, request *http.Request) {
requestId := request.Header.Get(&lt;span style="color:#a31515">&amp;#34;x-request-id&amp;#34;&lt;/span>)
&lt;span style="color:#00f">if&lt;/span> requestId == &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span> {
requestId = uuid.New().String()
}
subLogger := log.With().Str(&lt;span style="color:#a31515">&amp;#34;requestId&amp;#34;&lt;/span>, requestId).Logger()
subLogger.Info().
Str(&lt;span style="color:#a31515">&amp;#34;path&amp;#34;&lt;/span>, request.URL.Path).
Str(&lt;span style="color:#a31515">&amp;#34;method&amp;#34;&lt;/span>, request.Method).Msg(&lt;span style="color:#a31515">&amp;#34;in&amp;#34;&lt;/span>)
ctx := context.WithValue(context.Background(), LoggerCtxKey, subLogger)
statusCode := next(writer, request.WithContext(ctx))
writer.WriteHeader(statusCode)
subLogger.Info().Int(&lt;span style="color:#a31515">&amp;#34;status&amp;#34;&lt;/span>, statusCode).Msg(&lt;span style="color:#a31515">&amp;#34;out&amp;#34;&lt;/span>)
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The main idea is:&lt;/p>
&lt;ol>
&lt;li>Get &lt;code>x-request-id&lt;/code> if exists, otherwise create one with UUIDv4 format&lt;/li>
&lt;li>Create a sub-logger from our base-logger and then initiate it with the &lt;code>request id&lt;/code>&lt;/li>
&lt;li>Log the method and path, you can do anything in this step tho&lt;/li>
&lt;li>Put the logger into the context and pass it to the http handler&lt;/li>
&lt;li>Finally set and log the http status code&lt;/li>
&lt;/ol>
&lt;h2 id="http-handler">HTTP Handler&lt;/h2>
&lt;p>Now we&amp;rsquo;re gonna create the http handler that will use our middleware. It doesn&amp;rsquo;t need to be fancy.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> anotherFunc(ctx context.Context) {
logger := ctx.Value(LoggerCtxKey).(zerolog.Logger)
logger.Info().Msg(&lt;span style="color:#a31515">&amp;#34;inside anotherFunc&amp;#34;&lt;/span>)
}
&lt;span style="color:#00f">func&lt;/span> handler (writer http.ResponseWriter, request *http.Request) &lt;span style="color:#2b91af">int&lt;/span> {
logger := request.Context().Value(LoggerCtxKey).(zerolog.Logger)
logger.Info().Msg(&lt;span style="color:#a31515">&amp;#34;inside handler&amp;#34;&lt;/span>)
anotherFunc(request.Context())
&lt;span style="color:#00f">return&lt;/span> 204
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So now all the function that has the context passed from the middleware can access the logger by the context key.&lt;/p>
&lt;p>Let&amp;rsquo;s assemble all the codes.&lt;/p>
&lt;h2 id="final">Final&lt;/h2>
&lt;p>This will be the final look of our code.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34">34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35">35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36">36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37">37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38">38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39">39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40">40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41">41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42">42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43">43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44">44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45">45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46">46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47">47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48">48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49">49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50">50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51">51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52">52&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="53">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#53">53&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="54">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#54">54&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="55">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#55">55&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="56">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#56">56&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="57">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#57">57&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="58">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#58">58&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="59">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#59">59&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="60">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#60">60&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="61">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#61">61&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="62">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#62">62&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="63">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#63">63&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="64">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#64">64&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="65">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#65">65&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="66">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#66">66&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="67">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#67">67&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="68">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#68">68&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="69">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#69">69&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="70">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#70">70&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="71">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#71">71&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="72">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#72">72&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="73">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#73">73&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="74">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#74">74&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="75">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#75">75&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="76">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#76">76&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="77">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#77">77&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="78">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#78">78&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="79">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#79">79&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="80">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#80">80&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="81">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#81">81&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="82">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#82">82&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;context&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;github.com/google/uuid&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;github.com/rs/zerolog&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;github.com/rs/zerolog/log&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;os&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;strings&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;time&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">type&lt;/span> HandlerFuncWithStatus &lt;span style="color:#00f">func&lt;/span>(writer http.ResponseWriter, request *http.Request) &lt;span style="color:#2b91af">int&lt;/span>
&lt;span style="color:#00f">const&lt;/span> (
LoggerCtxKey = &lt;span style="color:#00f">iota&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> middleware(next HandlerFuncWithStatus) http.HandlerFunc {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">func&lt;/span>(writer http.ResponseWriter, request *http.Request) {
requestId := request.Header.Get(&lt;span style="color:#a31515">&amp;#34;x-request-id&amp;#34;&lt;/span>)
&lt;span style="color:#00f">if&lt;/span> requestId == &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span> {
requestId = uuid.New().String()
}
subLogger := log.With().Str(&lt;span style="color:#a31515">&amp;#34;requestId&amp;#34;&lt;/span>, requestId).Logger()
subLogger.Info().
Str(&lt;span style="color:#a31515">&amp;#34;path&amp;#34;&lt;/span>, request.URL.Path).
Str(&lt;span style="color:#a31515">&amp;#34;method&amp;#34;&lt;/span>, request.Method).Msg(&lt;span style="color:#a31515">&amp;#34;in&amp;#34;&lt;/span>)
ctx := context.WithValue(context.Background(), LoggerCtxKey, subLogger)
statusCode := next(writer, request.WithContext(ctx))
writer.WriteHeader(statusCode)
subLogger.Info().Int(&lt;span style="color:#a31515">&amp;#34;status&amp;#34;&lt;/span>, statusCode).Msg(&lt;span style="color:#a31515">&amp;#34;out&amp;#34;&lt;/span>)
}
}
&lt;span style="color:#00f">func&lt;/span> anotherFunc(ctx context.Context) {
logger := ctx.Value(LoggerCtxKey).(zerolog.Logger)
logger.Info().Msg(&lt;span style="color:#a31515">&amp;#34;inside anotherFunc&amp;#34;&lt;/span>)
}
&lt;span style="color:#00f">func&lt;/span> handler (writer http.ResponseWriter, request *http.Request) &lt;span style="color:#2b91af">int&lt;/span> {
logger := request.Context().Value(LoggerCtxKey).(zerolog.Logger)
logger.Info().Msg(&lt;span style="color:#a31515">&amp;#34;inside handler&amp;#34;&lt;/span>)
anotherFunc(request.Context())
&lt;span style="color:#00f">return&lt;/span> 204
}
&lt;span style="color:#00f">func&lt;/span> configureBaseLogger() {
output := zerolog.ConsoleWriter{
Out: os.Stdout,
FormatTimestamp: &lt;span style="color:#00f">func&lt;/span>(i &lt;span style="color:#00f">interface&lt;/span>{}) &lt;span style="color:#2b91af">string&lt;/span> {
parse, _ := time.Parse(time.RFC3339, i.(&lt;span style="color:#2b91af">string&lt;/span>))
&lt;span style="color:#00f">return&lt;/span> parse.Format(&lt;span style="color:#a31515">&amp;#34;2006-01-02 15:04:05&amp;#34;&lt;/span>)
},
FormatLevel: &lt;span style="color:#00f">func&lt;/span>(i &lt;span style="color:#00f">interface&lt;/span>{}) &lt;span style="color:#2b91af">string&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> strings.ToUpper(fmt.Sprintf(&lt;span style="color:#a31515">&amp;#34; %-6s &amp;#34;&lt;/span>, i))
},
}
log.Logger = zerolog.New(output).With().
Timestamp().CallerWithSkipFrameCount(2).Logger()
}
&lt;span style="color:#00f">func&lt;/span> main() {
configureBaseLogger()
log.Info().Msg(&lt;span style="color:#a31515">&amp;#34;testing&amp;#34;&lt;/span>)
http.Handle(&lt;span style="color:#a31515">&amp;#34;/&amp;#34;&lt;/span>, middleware(handler))
&lt;span style="color:#00f">if&lt;/span> err := http.ListenAndServe(&lt;span style="color:#a31515">&amp;#34;:8000&amp;#34;&lt;/span>, &lt;span style="color:#00f">nil&lt;/span>) ; err != &lt;span style="color:#00f">nil&lt;/span> {
log.Error().Msg(err.Error())
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Try it by accessing &lt;a class="link" rel="noreferrer noopener" target="_blank" href="http://localhost:8000" >http://localhost:8000&lt;/a>. The output looks like this if I accessed it twice.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7">7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8">8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9">9&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">2020-12-19 01:25:16 INFO logger/main.go:75 &amp;gt; testing
2020-12-19 01:25:20 INFO logger/main.go:33 &amp;gt; in method=GET path=/ requestId=6eb1f209-dac9-42b2-8ba4-883efffcbd9e
2020-12-19 01:25:20 INFO logger/main.go:50 &amp;gt; inside handler requestId=6eb1f209-dac9-42b2-8ba4-883efffcbd9e
2020-12-19 01:25:20 INFO logger/main.go:45 &amp;gt; inside anotherFunc requestId=6eb1f209-dac9-42b2-8ba4-883efffcbd9e
2020-12-19 01:25:20 INFO logger/main.go:39 &amp;gt; out requestId=6eb1f209-dac9-42b2-8ba4-883efffcbd9e status=204
2020-12-19 01:25:31 INFO logger/main.go:33 &amp;gt; in method=GET path=/ requestId=88a140b8-2aed-4d82-bf56-0ab9a1c7cce0
2020-12-19 01:25:31 INFO logger/main.go:50 &amp;gt; inside handler requestId=88a140b8-2aed-4d82-bf56-0ab9a1c7cce0
2020-12-19 01:25:31 INFO logger/main.go:45 &amp;gt; inside anotherFunc requestId=88a140b8-2aed-4d82-bf56-0ab9a1c7cce0
2020-12-19 01:25:31 INFO logger/main.go:39 &amp;gt; out requestId=88a140b8-2aed-4d82-bf56-0ab9a1c7cce0 status=204
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now if you want to trace all the event you can log it to the file and grep the request id.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ grep 88a140b8-2aed-4d82-bf56-0ab9a1c7cce0 /tmp/log
2020-12-19 01:25:31 INFO logger/main.go:33 &amp;gt; in method=GET path=/ requestId=88a140b8-2aed-4d82-bf56-0ab9a1c7cce0
2020-12-19 01:25:31 INFO logger/main.go:50 &amp;gt; inside handler requestId=88a140b8-2aed-4d82-bf56-0ab9a1c7cce0
2020-12-19 01:25:31 INFO logger/main.go:45 &amp;gt; inside anotherFunc requestId=88a140b8-2aed-4d82-bf56-0ab9a1c7cce0
2020-12-19 01:25:31 INFO logger/main.go:39 &amp;gt; out requestId=88a140b8-2aed-4d82-bf56-0ab9a1c7cce0 status=204
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>That should be enough for the reference. Please modify the code according to your usage. I didn&amp;rsquo;t test for the performance nor benchmarking it so take it with a grain of salt.&lt;/p>
&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Asymmetric Cryptography Signing vs Encrypting</title><link>https://clavinjune.dev/en/blogs/asymmetric-cryptography-signing-vs-encrypting/</link><pubDate>Mon, 07 Dec 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/asymmetric-cryptography-signing-vs-encrypting/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1575908539614-ff89490f4a78?w=1920&amp;amp;q=50" alt="Photo by @hocza on Unsplash" title="Photo by @hocza on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@hocza">@hocza&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>When we talk about crypto-something, we need to talk about Alice and Bob acting as actors in the example section. I hope you don&amp;rsquo;t get bored with them as I will use them as examples too. Here, Alice and Bob will use RSA for the asymmetric key, SHA256 for hash function, OAEP for encrypt/decrypt, PSS for sign/verify, and Base64 for the encoding.&lt;/p>
&lt;h2 id="encrypting">Encrypting&lt;/h2>
&lt;p>Alice wants to send Bob an important message securely and &lt;strong>&lt;code>Alice doesn't want anybody to read that message except Bob&lt;/code>&lt;/strong>. It might be a love confession, a nuclear code, or perhaps just private spam. Due to their close relationship, Alice and Bob have exchanged their public keys, so romantic, isn&amp;rsquo;t it? So Alice thought of creating a small Go program to create encrypted messages to send to Bob and &lt;strong>&lt;code>encrypt the message with Bob's public key&lt;/code>&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;crypto/rand&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/rsa&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/sha256&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;encoding/base64&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> encrypt(key *rsa.PublicKey, plainText &lt;span style="color:#2b91af">string&lt;/span>) (&lt;span style="color:#2b91af">string&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
cipherText, err := rsa.EncryptOAEP(sha256.New(), rand.Reader, key, []byte(plainText), &lt;span style="color:#00f">nil&lt;/span>)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;encrypt error: %w&amp;#34;&lt;/span>, err)
}
&lt;span style="color:#00f">return&lt;/span> base64.StdEncoding.EncodeToString(cipherText), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Alice&amp;rsquo;s encrypted message looks like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">fUYx0yO6gkkCah9LmcX2e7puUkl0x4WsCl8UOajVG6sNse6ly6uGnXIXcRKY2R6khxHrPcvsuTaPK6b83QBgNmO0KU7C6kK2kYvah1/rkRK0WAiAfvA3Z+/i5CvUDJ2ZvbvCHjl9YH97qgUrXrZk7DrYMi+J8VIiF6h85ltLRBxAsTtE2zyYr5gZsWYBCp/NRV4i2kF5mBskbDMW6f/f6jm3jWl5zmaxcxF2NX14itK9VIoNUlFukx+5vR/y17ei7ClX4hgkF/Kdw8ruMpyxX74f9RpqK5KRHSjoJThOp2oDqdpK8r4T8wNGx/VfVcwRM8SyV+VMR91w37ppSCCm2E+XzZeFysKGG9Csbwgsh/KzsuJ3rZ30hYit0fDBqJ1PJTt3bNR05503xY7yaoUtQeDRzr+kfi0hdAYHZyiod/ZkUuphB7zYPS26Utn1synocQ82p1FlH8aAtSOREL9Pw9pNNNMi8Cq18Kcn0rmsjC+JFwlnEk5PkFY5ZLdSNMaXcwfh2kx6bH5d65GgRS1rbrRMBPwywkMmQgukjS9QN2R/GXqZlGeznrt/Pf4r0dV+ZLSgRPb0hSDRfEvjMBWLOvGFI/1dxx7AJhoGB/F9VveBHE6Ry5gMrgNs9Fr0cuMw8I651+GhpatwGVoX13WZaa5Q675RGaiVQaZW/W5bYrs=
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>When Bob receives the encrypted message from Alice, Bob wants to read it immediately. So Bob created a program to &lt;strong>&lt;code>decrypt the message with his private key&lt;/code>&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;crypto/rand&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/rsa&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/sha256&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;encoding/base64&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> decrypt(key *rsa.PrivateKey, cipherText &lt;span style="color:#2b91af">string&lt;/span>) (&lt;span style="color:#2b91af">string&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
cipherBytes, err := base64.StdEncoding.DecodeString(cipherText)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;decode error: %w&amp;#34;&lt;/span>, err)
}
plainText, err := rsa.DecryptOAEP(sha256.New(), rand.Reader, key, cipherBytes, &lt;span style="color:#00f">nil&lt;/span>)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;decrypt error: %w&amp;#34;&lt;/span>, err)
}
&lt;span style="color:#00f">return&lt;/span> string(plainText), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And finally, Bob was able to read Alice&amp;rsquo;s message. Because &lt;strong>&lt;code>Bob keeps his private key to himself, People can't decrypt Alice's message&lt;/code>&lt;/strong> including me, so I can&amp;rsquo;t show the plain message to you in this blog post. Sorry guys.&lt;/p>
&lt;h2 id="signing">Signing&lt;/h2>
&lt;p>After receiving the message from Alice, Bob was very happy. Bob wants to reply to Alice&amp;rsquo;s message. But Bob forgot where to put Alice&amp;rsquo;s public key. Bob thought of announcing a reply where everyone would know how happy he was after receiving Alice&amp;rsquo;s message. But the problem is, how can &lt;strong>&lt;code>Bob ensure that the reply isn't modified by others and can be ensured that Bob who announces the reply&lt;/code>&lt;/strong>. Bob starts creating a Go program to &lt;strong>&lt;code>sign the message with his private key so everyone who has Bob's public key can verify that the reply is announced by Bob&lt;/code>&lt;/strong> including Alice.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;crypto&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/rand&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/rsa&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/sha256&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;encoding/base64&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> sign(key *rsa.PrivateKey, plainText &lt;span style="color:#2b91af">string&lt;/span>) (&lt;span style="color:#2b91af">string&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
hash := sha256.New()
hash.Write([]byte(plainText))
digest := hash.Sum(&lt;span style="color:#00f">nil&lt;/span>)
signature, err := rsa.SignPSS(rand.Reader, key, crypto.SHA256, digest, &lt;span style="color:#00f">nil&lt;/span>)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;sign error: %w&amp;#34;&lt;/span>, err)
}
&lt;span style="color:#00f">return&lt;/span> base64.StdEncoding.EncodeToString(signature), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Bob&amp;rsquo;s reply looks like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">Dear Alice,
I&amp;#39;m so happy hearing that from you.
Sincerely yours, Bob.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Bob&amp;rsquo;s signature looks like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">Jsl61bOJIzBs+Ccv8jkrVIeyCBPEU9Ps75ig/GnrP7aUncD3BbIP6AJ8x2jR0UK7aGSE6M/MhRN8zWIgwz8qthcACrec+fz99TGF9CRPn+R9cMezdOzZEMT00unO9u6DppNlQeNHLiCEVfVzvZrRP3GnLBYUzmFNM7LdySbwWmeUE/uOWYQT86FM0i1Tr4DXaVJwyVkIURgRIcmqFAYovQM4m+9Br93+SpnPmEiA4P8eWZ8E+Y5qzA4Hv0HXUHYLnGKUVVsVNhM4o8iL7CVgHr5Fd5JWCmGQPbrNUIOzGRiYOV0BQi/uDRkOW0yGbHtjPHjcuykXeHjgAFE1vVZCT1HwMdsJNOKruuXxoeD43UaoJ/h9ac+8sPKwuWEV476oN2Pm9df0E/JRytGYU7/7MDjs2yEuShhKjGWfj2gWCgJzTbx4IVYs+lwmfcODTkM5b4T+CjINzRXFX73INNWP67g3KxgL4k/3ys7i64HIn3ApMli8aZEvAwjkWyh9JHN7xAeE1TtMN3K3zKXqpRNyfg98kazsV7ViOdP7+oGap9z+22B2SIXgUC4B36UBhk+0chcKJv8fFkowQS0lNLwLM1kRwx69SBEgQpy2KV1ia6X81Q3twEz0nQSiy0iJ5/fN7Wllh+F088SLuyOLo7uK1Ieh+DKJda9R+BsgMC+xBG8=
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Alice who read the announcement &lt;strong>&lt;code>wants to make sure that the message isn't modified and sent by Bob&lt;/code>&lt;/strong>. So Alice &lt;strong>&lt;code>verified the message using the signature and Bob's public key&lt;/code>&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;crypto&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/rand&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/rsa&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/sha256&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;encoding/base64&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> verify(key *rsa.PublicKey, message, signature &lt;span style="color:#2b91af">string&lt;/span>) (&lt;span style="color:#2b91af">bool&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
hash := sha256.New()
hash.Write([]byte(message))
digest := hash.Sum(&lt;span style="color:#00f">nil&lt;/span>)
signatureBytes, err := base64.StdEncoding.DecodeString(signature)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">false&lt;/span>, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;decode error: %w&amp;#34;&lt;/span>, err)
}
err = rsa.VerifyPSS(key, crypto.SHA256, digest, signatureBytes, &lt;span style="color:#00f">nil&lt;/span>)
&lt;span style="color:#00f">return&lt;/span> err == &lt;span style="color:#00f">nil&lt;/span>, err
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And it&amp;rsquo;s verified that Bob announced the reply!
To be summarized, &lt;code>Encrypt&lt;/code> is the method you want to use when &lt;code>you don't want anyone to read the message except the recipient&lt;/code> while &lt;code>Sign&lt;/code> is the method you want to use when &lt;code>you want to make sure the message hasn't been changed and it can be verified that only you who sent it&lt;/code>&lt;/p>
&lt;p>You can read the whole Golang code here:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10"> 10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11"> 11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12"> 12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13"> 13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14"> 14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15"> 15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16"> 16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17"> 17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18"> 18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19"> 19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20"> 20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21"> 21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22"> 22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23"> 23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24"> 24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25"> 25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26"> 26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27"> 27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28"> 28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29"> 29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30"> 30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31"> 31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32"> 32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33"> 33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34"> 34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35"> 35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36"> 36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37"> 37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38"> 38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39"> 39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40"> 40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41"> 41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42"> 42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43"> 43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44"> 44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45"> 45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46"> 46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47"> 47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48"> 48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49"> 49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50"> 50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51"> 51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52"> 52&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="53">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#53"> 53&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="54">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#54"> 54&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="55">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#55"> 55&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="56">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#56"> 56&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="57">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#57"> 57&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="58">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#58"> 58&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="59">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#59"> 59&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="60">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#60"> 60&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="61">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#61"> 61&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="62">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#62"> 62&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="63">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#63"> 63&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="64">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#64"> 64&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="65">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#65"> 65&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="66">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#66"> 66&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="67">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#67"> 67&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="68">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#68"> 68&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="69">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#69"> 69&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="70">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#70"> 70&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="71">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#71"> 71&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="72">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#72"> 72&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="73">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#73"> 73&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="74">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#74"> 74&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="75">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#75"> 75&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="76">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#76"> 76&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="77">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#77"> 77&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="78">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#78"> 78&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="79">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#79"> 79&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="80">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#80"> 80&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="81">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#81"> 81&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="82">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#82"> 82&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="83">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#83"> 83&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="84">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#84"> 84&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="85">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#85"> 85&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="86">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#86"> 86&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="87">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#87"> 87&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="88">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#88"> 88&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="89">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#89"> 89&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="90">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#90"> 90&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="91">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#91"> 91&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="92">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#92"> 92&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="93">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#93"> 93&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="94">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#94"> 94&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="95">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#95"> 95&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="96">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#96"> 96&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="97">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#97"> 97&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="98">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#98"> 98&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="99">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#99"> 99&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="100">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#100">100&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;crypto&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/rand&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/rsa&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;crypto/sha256&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;encoding/base64&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> hash(message &lt;span style="color:#2b91af">string&lt;/span>) []&lt;span style="color:#2b91af">byte&lt;/span> {
hash := sha256.New()
hash.Write([]byte(message))
&lt;span style="color:#00f">return&lt;/span> hash.Sum(&lt;span style="color:#00f">nil&lt;/span>)
}
&lt;span style="color:#00f">func&lt;/span> encode(message []&lt;span style="color:#2b91af">byte&lt;/span>) &lt;span style="color:#2b91af">string&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> base64.StdEncoding.EncodeToString(message)
}
&lt;span style="color:#00f">func&lt;/span> decode(message &lt;span style="color:#2b91af">string&lt;/span>) ([]&lt;span style="color:#2b91af">byte&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">return&lt;/span> base64.StdEncoding.DecodeString(message)
}
&lt;span style="color:#00f">func&lt;/span> encrypt(publicKey *rsa.PublicKey, plainText &lt;span style="color:#2b91af">string&lt;/span>) (&lt;span style="color:#2b91af">string&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
cipherText, err := rsa.EncryptOAEP(sha256.New(), rand.Reader, publicKey, []byte(plainText), &lt;span style="color:#00f">nil&lt;/span>)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;encrypt error: %w&amp;#34;&lt;/span>, err)
}
&lt;span style="color:#00f">return&lt;/span> encode(cipherText), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> decrypt(key *rsa.PrivateKey, cipherText &lt;span style="color:#2b91af">string&lt;/span>) (&lt;span style="color:#2b91af">string&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
cipherBytes, err := decode(cipherText)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;decode error: %w&amp;#34;&lt;/span>, err)
}
plainText, err := rsa.DecryptOAEP(sha256.New(), rand.Reader, key, cipherBytes, &lt;span style="color:#00f">nil&lt;/span>)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;decrypt error: %w&amp;#34;&lt;/span>, err)
}
&lt;span style="color:#00f">return&lt;/span> string(plainText), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> sign(key *rsa.PrivateKey, plainText &lt;span style="color:#2b91af">string&lt;/span>) (&lt;span style="color:#2b91af">string&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
digest := hash(plainText)
signature, err := rsa.SignPSS(rand.Reader, key, crypto.SHA256, digest, &lt;span style="color:#00f">nil&lt;/span>)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;sign error: %w&amp;#34;&lt;/span>, err)
}
&lt;span style="color:#00f">return&lt;/span> encode(signature), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> verify(key *rsa.PublicKey, message, signature &lt;span style="color:#2b91af">string&lt;/span>) (&lt;span style="color:#2b91af">bool&lt;/span>, &lt;span style="color:#2b91af">error&lt;/span>) {
digest := hash(message)
signatureBytes, err := decode(signature)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">false&lt;/span>, fmt.Errorf(&lt;span style="color:#a31515">&amp;#34;decode error: %w&amp;#34;&lt;/span>, err)
}
err = rsa.VerifyPSS(key, crypto.SHA256, digest, signatureBytes, &lt;span style="color:#00f">nil&lt;/span>)
&lt;span style="color:#00f">return&lt;/span> err == &lt;span style="color:#00f">nil&lt;/span>, err
}
&lt;span style="color:#00f">func&lt;/span> getBobKey() (*rsa.PrivateKey, *rsa.PublicKey) {
privateKey, _ := rsa.GenerateKey(rand.Reader, 4096)
&lt;span style="color:#00f">return&lt;/span> privateKey, &amp;amp;privateKey.PublicKey
}
&lt;span style="color:#00f">func&lt;/span> main() {
bobPriv, bobPub := getBobKey()
cipher, _ := encrypt(bobPub, &lt;span style="color:#a31515">&amp;#34;Dear Bob, &amp;lt;REDACTED&amp;gt;&amp;#34;&lt;/span>)
plain, _ := decrypt(bobPriv, cipher)
fmt.Println(&lt;span style="color:#a31515">&amp;#34;cipher text from Alice:&amp;#34;&lt;/span>, cipher)
fmt.Println(&lt;span style="color:#a31515">&amp;#34;plain text from Alice:&amp;#34;&lt;/span>, plain)
bobReply := &lt;span style="color:#a31515">`Dear Alice,
&lt;/span>&lt;span style="color:#a31515">I&amp;#39;m so happy hearing that from you.
&lt;/span>&lt;span style="color:#a31515">Sincerely yours, Bob.`&lt;/span>
replySignature, _ := sign(bobPriv, bobReply)
fmt.Println(&lt;span style="color:#a31515">&amp;#34;reply from Bob:&amp;#34;&lt;/span>, bobReply)
fmt.Println(&lt;span style="color:#a31515">&amp;#34;reply signature from Bob:&amp;#34;&lt;/span>, replySignature)
isVerified, _ := verify(bobPub, bobReply, replySignature)
fmt.Println(&lt;span style="color:#a31515">&amp;#34;Was it Bob who sent the message?&amp;#34;&lt;/span>, isVerified)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Transient Modifier in Java</title><link>https://clavinjune.dev/en/blogs/transient-modifier-in-java/</link><pubDate>Wed, 18 Nov 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/transient-modifier-in-java/</guid><description>&lt;p>Data serialization library in Java could be varied. You can use Jackson, GSON, or anything else. Since there are too many serialization libraries out there, it&amp;rsquo;s quite tricky to manage Java class attribute exclusion during serialization. Each library might have their own way to exclude the Java class attribute. Each Java project should only have 1 serialization library in order to maintain the standardization but, what if somehow in someway you need more than one serialization library?&lt;/p>
&lt;p>Here comes &lt;code>transient modifier&lt;/code> that helps you manage the java class attribute exclusion during serialization in language level. There&amp;rsquo;s no need to memorize unique annotation like&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">@Expose(serialize = &lt;span style="color:#00f">false&lt;/span>, deserialize = &lt;span style="color:#00f">true&lt;/span>)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>or&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">@JsonIgnore
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can only use &lt;code>transient&lt;/code> keyword as your attribute modifier. Let&amp;rsquo;s try it.&lt;/p>
&lt;h2 id="sample-class">Sample Class&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34">34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35">35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36">36&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#008000">// Jackson need this annotation
&lt;/span>&lt;span style="color:#008000">// because it can&amp;#39;t deserialize unknown properties. duh!
&lt;/span>&lt;span style="color:#008000">&lt;/span>@JsonIgnoreProperties(ignoreUnknown = &lt;span style="color:#00f">true&lt;/span>)
&lt;span style="color:#00f">public&lt;/span> &lt;span style="color:#00f">class&lt;/span> &lt;span style="color:#2b91af">Sample&lt;/span> {
&lt;span style="color:#008000">// using transient modifier on foo
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">public&lt;/span> &lt;span style="color:#00f">transient&lt;/span> String foo;
&lt;span style="color:#00f">public&lt;/span> String bar;
@Override
&lt;span style="color:#00f">public&lt;/span> String toString() {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;Sample{&amp;#34;&lt;/span> +
&lt;span style="color:#a31515">&amp;#34;foo=&amp;#39;&amp;#34;&lt;/span> + foo + &lt;span style="color:#a31515">&amp;#39;\&amp;#39;&amp;#39;&lt;/span> +
&lt;span style="color:#a31515">&amp;#34;, bar=&amp;#39;&amp;#34;&lt;/span> + bar + &lt;span style="color:#a31515">&amp;#39;\&amp;#39;&amp;#39;&lt;/span> +
&lt;span style="color:#a31515">&amp;#39;}&amp;#39;&lt;/span>;
}
&lt;span style="color:#00f">public&lt;/span> &lt;span style="color:#00f">static&lt;/span> &lt;span style="color:#2b91af">void&lt;/span> main(String[] args) &lt;span style="color:#00f">throws&lt;/span> Exception {
String json = &lt;span style="color:#a31515">&amp;#34;{\&amp;#34;foo\&amp;#34;:\&amp;#34;foox\&amp;#34;,\&amp;#34;bar\&amp;#34;:\&amp;#34;barx\&amp;#34;}&amp;#34;&lt;/span>;
&lt;span style="color:#008000">// by default jackson not reading any attribute,
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// jackson only read public default Getter
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// so jackson need to have this configuration to mark transient attributes
&lt;/span>&lt;span style="color:#008000">&lt;/span> ObjectMapper jackson = &lt;span style="color:#00f">new&lt;/span> ObjectMapper()
.configure(MapperFeature.PROPAGATE_TRANSIENT_MARKER, &lt;span style="color:#00f">true&lt;/span>);
Gson gson = &lt;span style="color:#00f">new&lt;/span> Gson();
Sample byJackson = jackson.readValue(json, Sample.class);
Sample byGson = gson.fromJson(json, Sample.class);
System.out.println(&lt;span style="color:#a31515">&amp;#34;deserialization by jackson: &amp;#34;&lt;/span> + byJackson);
System.out.println(&lt;span style="color:#a31515">&amp;#34;deserialization by gson: &amp;#34;&lt;/span> + byGson);
System.out.println(&lt;span style="color:#a31515">&amp;#34;serialization by gson: &amp;#34;&lt;/span> + gson.toJson(byGson));
System.out.println(&lt;span style="color:#a31515">&amp;#34;serialization by jackson: &amp;#34;&lt;/span> + jackson.writeValueAsString(byJackson));
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="output">output&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">deserialization by jackson: Sample{foo=&amp;#39;null&amp;#39;, bar=&amp;#39;barx&amp;#39;}
deserialization by gson: Sample{foo=&amp;#39;null&amp;#39;, bar=&amp;#39;barx&amp;#39;}
serialization by gson: {&amp;#34;bar&amp;#34;:&amp;#34;barx&amp;#34;}
serialization by jackson: {&amp;#34;bar&amp;#34;:&amp;#34;barx&amp;#34;}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Yep, as we expect, foo attribute isn&amp;rsquo;t serialized. &lt;code>transient&lt;/code> modifier would work just fine as long as the attribute itself has no &lt;code>static&lt;/code> or &lt;code>final&lt;/code> modifier. Whenever a &lt;code>transient&lt;/code> attribute has &lt;code>static&lt;/code> or &lt;code>final&lt;/code> modifier, the &lt;code>transient&lt;/code> modifier has no effect on that attribute.&lt;/p>
&lt;p>Thank you for reading!&lt;/p></description></item><item><title>AVL Tree in Go</title><link>https://clavinjune.dev/en/blogs/avl-tree-in-go/</link><pubDate>Sun, 15 Nov 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/avl-tree-in-go/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1561900478-5001f6b4d8ed?w=1920&amp;amp;q=50" alt="Photo by @loicleray on Unsplash" title="Photo by @loicleray on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@loicleray">@loicleray&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>After I tried to implement &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://clavinjune.dev/blog/binary-search-tree-in-go-0f34cd/" >BST in Go&lt;/a>, it seems like I want to modify the BST to AVL because BST is not a fairly optimal tree data structure.&lt;/p>
&lt;p>When I said this:&lt;/p>
&lt;blockquote>
&lt;p>To find a specific node you don&amp;rsquo;t have to go around the whole tree, you need to know that BST can route to a specific node by checking the node value&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s half true because there&amp;rsquo;s a case that BST makes a linear tree like this:&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="https://clavinjune.dev/img/avl-tree-in-go/linear-tree.png" alt="linear tree" title="linear tree" width="100%" />
&lt;figcaption>linear tree&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>And if you want to find a node with value 6, in the end, you will travel the whole tree. That’s why we need AVL to improve the time complexity. AVL will try to rebalance the tree whenever it becomes imbalance after insertion/deletion.&lt;/p>
&lt;p>The whole concept of AVL is much the same with BST besides the rebalancing algorithm. In AVL we need to rebalance the tree by rotating every imbalance sub-tree in every insertion/deletion. So we&amp;rsquo;re gonna use all the code from &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://clavinjune.dev/blog/binary-search-tree-in-go-0f34cd/" >here&lt;/a> and modified it a bit.&lt;/p>
&lt;p>To see the tree is balanced or not, we need to define the height on each node. We can calculate the height by counting the maximum height of the left and the right node recursively. If the node has no child, it means its height is 1 otherwise we compare the maximum height of the children.&lt;/p>
&lt;p>Update the &lt;code>node struct&lt;/code> by adding the &lt;code>height&lt;/code> attribute, add the &lt;code>Getter&lt;/code> function, and set the value to 1 inside the constructor.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">type&lt;/span> node &lt;span style="color:#00f">struct&lt;/span> {
height, value &lt;span style="color:#2b91af">int&lt;/span>
left, right *node
}
&lt;span style="color:#00f">func&lt;/span> (n *node) Height() &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> n == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> 0
}
&lt;span style="color:#00f">return&lt;/span> n.height
}
&lt;span style="color:#00f">func&lt;/span> newNode(val &lt;span style="color:#2b91af">int&lt;/span>) *node {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;node{
height: 1,
value: val,
left: &lt;span style="color:#00f">nil&lt;/span>,
right: &lt;span style="color:#00f">nil&lt;/span>,
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And to keep track of the height and the balance of the tree after insertion/deletion, we need to have a &lt;code>updateHeight&lt;/code> and &lt;code>balanceFactor&lt;/code> function.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (n *node) balanceFactor() &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> n == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> 0
}
&lt;span style="color:#00f">return&lt;/span> n.left.Height() - n.right.Height()
}
&lt;span style="color:#00f">func&lt;/span> max(a, b &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> a &amp;gt; b {
&lt;span style="color:#00f">return&lt;/span> a
}
&lt;span style="color:#00f">return&lt;/span> b
}
&lt;span style="color:#00f">func&lt;/span> (n *node) updateHeight() {
&lt;span style="color:#008000">// compare the maximum height of the children + its own height
&lt;/span>&lt;span style="color:#008000">&lt;/span> n.height = max(n.left.Height(), n.right.Height()) + 1
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>balanceFactor&lt;/code> function determines whether the tree is heavier on the left or the right side. If it returns an integer below 0, it means it&amp;rsquo;s heavier on the right side and we need to rotate to the left side of the tree. The thresholds for imbalanced tree are -1 and 1, so if the &lt;code>balanceFactor&lt;/code> function returns less then -1 or greater than 1, we need to rotate the tree.&lt;/p>
&lt;p>Now let&amp;rsquo;s create the rotate function. There are 2 types of rotate, &lt;code>rotateLeft&lt;/code> and &lt;code>rotateRight&lt;/code>. But there are 4 conditions to rotate the tree on insertion and deletion. You can read it and see the picture from &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://www.tutorialspoint.com/data_structures_algorithms/avl_tree_algorithm.htm" >here&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> rightRotate(x *node) *node {
y := x.left
t := y.right
y.right = x
x.left = t
x.updateHeight()
y.updateHeight()
&lt;span style="color:#00f">return&lt;/span> y
}
&lt;span style="color:#00f">func&lt;/span> leftRotate(x *node) *node {
y := x.right
t := y.left
y.left = x
x.right = t
x.updateHeight()
y.updateHeight()
&lt;span style="color:#00f">return&lt;/span> y
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The conditions to rotate the tree on insertion are:&lt;/p>
&lt;ol>
&lt;li>When the tree &lt;code>linearly to the right&lt;/code>, you need to use &lt;code>leftRotate&lt;/code> on the &lt;code>current node&lt;/code>&lt;/li>
&lt;li>When the tree &lt;code>linearly to the left&lt;/code>, you need to use &lt;code>rightRotate&lt;/code> on the &lt;code>current node&lt;/code>&lt;/li>
&lt;li>When the tree creates &lt;code>Less Than&lt;/code> Symbol, you need to &lt;code>leftRotate&lt;/code> on the &lt;code>left child&lt;/code>, and &lt;code>rightRotate&lt;/code> on the &lt;code>current node&lt;/code>&lt;/li>
&lt;li>When the tree creates &lt;code>Greater Than&lt;/code> Symbol, you need to &lt;code>rightRotate&lt;/code> on the &lt;code>right child&lt;/code>, and &lt;code>leftRotate&lt;/code> on the &lt;code>current node&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="insertion">Insertion&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> rotateInsert(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) *node {
&lt;span style="color:#008000">// update the height on every insertion
&lt;/span>&lt;span style="color:#008000">&lt;/span> node.updateHeight()
&lt;span style="color:#008000">// bFactor will tell you which side the weight is on
&lt;/span>&lt;span style="color:#008000">&lt;/span> bFactor := node.balanceFactor()
&lt;span style="color:#008000">// linearly to the left
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;gt; 1 &amp;amp;&amp;amp; val &amp;lt; node.left.value {
&lt;span style="color:#00f">return&lt;/span> rightRotate(node)
}
&lt;span style="color:#008000">// linearly to the right
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;lt; -1 &amp;amp;&amp;amp; val &amp;gt; node.right.value {
&lt;span style="color:#00f">return&lt;/span> leftRotate(node)
}
&lt;span style="color:#008000">// less than symbol
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;gt; 1 &amp;amp;&amp;amp; val &amp;gt; node.left.value {
node.left = leftRotate(node.left)
&lt;span style="color:#00f">return&lt;/span> rightRotate(node)
}
&lt;span style="color:#008000">// greater than symbol
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;lt; -1 &amp;amp;&amp;amp; val &amp;lt; node.right.value {
node.right = rightRotate(node.right)
&lt;span style="color:#00f">return&lt;/span> leftRotate(node)
}
&lt;span style="color:#00f">return&lt;/span> node
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Lastly, you need to update the return statement of the &lt;code>insertNode&lt;/code> function.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> insertNode(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) (*node, &lt;span style="color:#2b91af">error&lt;/span>) {
...
&lt;span style="color:#00f">return&lt;/span> rotateInsert(node, val), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="traverse-operation-and-validation">Traverse Operation and Validation&lt;/h2>
&lt;p>So that the results are easy to visualize, you need to change the traverse function becomes &lt;code>pre-order&lt;/code> and open &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://www.cs.usfca.edu/~galles/visualization/BST.html" >BST Visualization page&lt;/a> &amp;amp; &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://www.cs.usfca.edu/~galles/visualization/AVLtree.html" >AVL Visualiztion Page&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> traverse(node *node) {
&lt;span style="color:#008000">// exit condition
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span>
}
fmt.Println(node.value)
traverse(node.left)
traverse(node.right)
}
&lt;span style="color:#00f">func&lt;/span> main() {
tree := avl.New()
&lt;span style="color:#008000">// to check if your implementation is correct
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// First insert this sequentially
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// to the AVL Visualiztion Page
&lt;/span>&lt;span style="color:#008000">&lt;/span> tree.Insert(0)
tree.Insert(1)
tree.Insert(2)
tree.Insert(3)
tree.Insert(4)
tree.Insert(5)
tree.Insert(6)
tree.Insert(7)
&lt;span style="color:#008000">// Second insert Traverse function results sequentially
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// to the BST Visualization page
&lt;/span>&lt;span style="color:#008000">&lt;/span> tree.Traverse() &lt;span style="color:#008000">// 3 1 0 2 5 4 6 7
&lt;/span>&lt;span style="color:#008000">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If you find the tree visualizations are the same and balanced, then it’s correct.&lt;/p>
&lt;h2 id="deletion">Deletion&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> rotateDelete(node *node) *node {
node.updateHeight()
bFactor := node.balanceFactor()
&lt;span style="color:#008000">// linearly to the left
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;gt; 1 &amp;amp;&amp;amp; node.left.balanceFactor() &amp;gt;= 0 {
&lt;span style="color:#00f">return&lt;/span> rightRotate(node)
}
&lt;span style="color:#008000">// less than symbol
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;gt; 1 &amp;amp;&amp;amp; node.left.balanceFactor() &amp;lt; 0 {
node.left = leftRotate(node.left)
&lt;span style="color:#00f">return&lt;/span> rightRotate(node)
}
&lt;span style="color:#008000">// linearly to the right
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;lt; -1 &amp;amp;&amp;amp; node.right.balanceFactor() &amp;lt;= 0 {
&lt;span style="color:#00f">return&lt;/span> leftRotate(node)
}
&lt;span style="color:#008000">// greater than symbol
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;lt; -1 &amp;amp;&amp;amp; node.right.balanceFactor() &amp;gt; 0 {
node.right = rightRotate(node.right)
&lt;span style="color:#00f">return&lt;/span> leftRotate(node)
}
&lt;span style="color:#00f">return&lt;/span> node
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>Deletion&lt;/code> is not like &lt;code>insertion&lt;/code> in that we can compare the entered values, because the node we are looking for is already deleted. That&amp;rsquo;s why we need to compare the current node&amp;rsquo;s balance factor with the balance factor of the child. Now, you need to modify the &lt;code>removeNode&lt;/code> function. Remember when removing a node with 2 children, we need to find the &lt;code>successor&lt;/code> and there are 2 ways to find the &lt;code>successor&lt;/code>.&lt;/p>
&lt;ol>
&lt;li>Find the least valueable node from the right child of the node&lt;/li>
&lt;li>Find the greatest valueable node from the left child of the node&lt;/li>
&lt;/ol>
&lt;p>We used the first way while the BST &amp;amp; AVL Visualization Page using the second way. You can also change the code so it&amp;rsquo;s easy to visualize.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34">34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35">35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36">36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37">37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38">38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39">39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40">40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41">41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42">42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43">43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44">44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45">45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46">46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47">47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48">48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49">49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50">50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51">51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52">52&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="53">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#53">53&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="54">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#54">54&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="55">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#55">55&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="56">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#56">56&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="57">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#57">57&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="58">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#58">58&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="59">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#59">59&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="60">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#60">60&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="61">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#61">61&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="62">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#62">62&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="63">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#63">63&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="64">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#64">64&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="65">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#65">65&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="66">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#66">66&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="67">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#67">67&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="68">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#68">68&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="69">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#69">69&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> greatest(node *node) *node {
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">if&lt;/span> node.right == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> node
}
&lt;span style="color:#00f">return&lt;/span> greatest(node.right)
}
&lt;span style="color:#00f">func&lt;/span> removeNode(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) (*node, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, ErrNodeNotFound
}
&lt;span style="color:#00f">if&lt;/span> val &amp;gt; node.value {
right, err := removeNode(node.right, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.right = right
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;lt; node.value {
left, err := removeNode(node.left, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.left = left
} &lt;span style="color:#00f">else&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> &amp;amp;&amp;amp; node.right != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has 2 children
&lt;/span>&lt;span style="color:#008000">&lt;/span>
&lt;span style="color:#008000">// find the successor
&lt;/span>&lt;span style="color:#008000">&lt;/span> successor := greatest(node.left)
value := successor.value
&lt;span style="color:#008000">// remove the successor
&lt;/span>&lt;span style="color:#008000">&lt;/span> left, err := removeNode(node.left, value)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.left = left
&lt;span style="color:#008000">// copy the successor value to the current node
&lt;/span>&lt;span style="color:#008000">&lt;/span> node.value = value
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> || node.right != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has 1 child
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// move the child position to the current node
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> {
node = node.left
} &lt;span style="color:#00f">else&lt;/span> {
node = node.right
}
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left == &lt;span style="color:#00f">nil&lt;/span> &amp;amp;&amp;amp; node.right == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has no child
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// simply remove the node
&lt;/span>&lt;span style="color:#008000">&lt;/span> node = &lt;span style="color:#00f">nil&lt;/span>
}
}
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">return&lt;/span> rotateDelete(node), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can validate and recheck your AVL implementation with the BST &amp;amp; AVL visualization page.&lt;/p>
&lt;p>Here is the modifed &lt;code>node.go&lt;/code> file.&lt;/p>
&lt;h2 id="nodego">node.go&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10"> 10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11"> 11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12"> 12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13"> 13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14"> 14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15"> 15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16"> 16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17"> 17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18"> 18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19"> 19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20"> 20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21"> 21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22"> 22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23"> 23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24"> 24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25"> 25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26"> 26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27"> 27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28"> 28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29"> 29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30"> 30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31"> 31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32"> 32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33"> 33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34"> 34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35"> 35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36"> 36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37"> 37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38"> 38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39"> 39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40"> 40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41"> 41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42"> 42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43"> 43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44"> 44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45"> 45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46"> 46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47"> 47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48"> 48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49"> 49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50"> 50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51"> 51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52"> 52&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="53">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#53"> 53&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="54">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#54"> 54&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="55">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#55"> 55&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="56">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#56"> 56&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="57">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#57"> 57&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="58">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#58"> 58&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="59">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#59"> 59&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="60">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#60"> 60&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="61">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#61"> 61&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="62">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#62"> 62&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="63">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#63"> 63&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="64">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#64"> 64&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="65">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#65"> 65&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="66">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#66"> 66&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="67">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#67"> 67&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="68">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#68"> 68&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="69">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#69"> 69&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="70">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#70"> 70&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="71">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#71"> 71&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="72">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#72"> 72&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="73">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#73"> 73&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="74">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#74"> 74&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="75">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#75"> 75&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="76">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#76"> 76&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="77">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#77"> 77&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="78">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#78"> 78&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="79">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#79"> 79&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="80">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#80"> 80&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="81">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#81"> 81&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="82">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#82"> 82&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="83">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#83"> 83&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="84">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#84"> 84&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="85">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#85"> 85&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="86">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#86"> 86&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="87">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#87"> 87&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="88">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#88"> 88&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="89">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#89"> 89&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="90">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#90"> 90&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="91">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#91"> 91&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="92">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#92"> 92&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="93">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#93"> 93&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="94">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#94"> 94&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="95">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#95"> 95&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="96">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#96"> 96&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="97">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#97"> 97&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="98">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#98"> 98&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="99">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#99"> 99&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="100">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#100">100&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="101">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#101">101&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="102">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#102">102&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="103">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#103">103&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="104">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#104">104&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="105">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#105">105&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="106">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#106">106&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="107">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#107">107&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="108">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#108">108&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="109">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#109">109&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="110">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#110">110&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="111">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#111">111&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="112">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#112">112&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="113">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#113">113&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="114">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#114">114&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="115">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#115">115&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="116">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#116">116&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="117">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#117">117&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="118">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#118">118&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="119">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#119">119&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="120">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#120">120&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="121">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#121">121&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="122">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#122">122&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="123">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#123">123&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="124">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#124">124&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="125">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#125">125&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="126">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#126">126&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="127">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#127">127&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="128">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#128">128&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="129">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#129">129&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="130">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#130">130&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="131">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#131">131&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="132">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#132">132&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="133">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#133">133&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="134">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#134">134&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="135">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#135">135&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="136">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#136">136&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="137">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#137">137&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="138">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#138">138&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="139">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#139">139&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="140">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#140">140&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="141">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#141">141&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="142">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#142">142&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="143">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#143">143&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="144">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#144">144&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="145">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#145">145&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="146">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#146">146&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="147">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#147">147&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="148">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#148">148&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="149">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#149">149&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="150">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#150">150&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="151">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#151">151&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="152">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#152">152&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="153">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#153">153&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="154">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#154">154&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="155">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#155">155&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="156">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#156">156&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="157">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#157">157&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="158">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#158">158&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="159">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#159">159&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="160">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#160">160&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="161">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#161">161&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="162">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#162">162&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="163">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#163">163&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="164">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#164">164&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="165">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#165">165&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="166">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#166">166&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="167">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#167">167&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="168">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#168">168&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="169">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#169">169&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="170">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#170">170&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="171">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#171">171&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="172">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#172">172&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="173">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#173">173&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="174">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#174">174&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="175">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#175">175&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="176">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#176">176&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="177">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#177">177&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="178">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#178">178&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="179">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#179">179&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="180">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#180">180&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="181">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#181">181&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="182">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#182">182&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="183">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#183">183&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="184">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#184">184&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="185">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#185">185&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="186">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#186">186&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="187">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#187">187&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="188">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#188">188&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="189">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#189">189&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="190">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#190">190&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="191">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#191">191&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="192">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#192">192&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="193">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#193">193&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="194">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#194">194&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="195">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#195">195&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="196">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#196">196&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="197">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#197">197&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="198">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#198">198&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="199">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#199">199&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="200">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#200">200&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="201">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#201">201&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="202">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#202">202&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="203">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#203">203&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="204">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#204">204&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="205">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#205">205&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="206">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#206">206&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="207">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#207">207&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="208">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#208">208&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="209">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#209">209&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="210">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#210">210&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="211">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#211">211&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="212">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#212">212&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="213">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#213">213&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="214">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#214">214&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="215">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#215">215&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="216">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#216">216&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="217">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#217">217&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="218">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#218">218&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="219">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#219">219&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="220">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#220">220&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="221">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#221">221&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="222">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#222">222&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="223">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#223">223&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="224">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#224">224&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="225">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#225">225&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="226">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#226">226&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="227">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#227">227&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="228">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#228">228&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="229">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#229">229&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="230">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#230">230&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="231">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#231">231&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="232">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#232">232&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="233">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#233">233&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="234">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#234">234&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="235">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#235">235&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="236">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#236">236&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="237">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#237">237&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="238">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#238">238&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="239">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#239">239&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="240">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#240">240&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="241">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#241">241&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="242">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#242">242&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="243">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#243">243&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="244">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#244">244&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="245">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#245">245&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="246">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#246">246&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="247">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#247">247&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="248">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#248">248&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="249">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#249">249&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="250">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#250">250&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="251">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#251">251&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="252">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#252">252&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="253">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#253">253&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="254">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#254">254&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="255">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#255">255&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="256">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#256">256&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="257">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#257">257&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="258">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#258">258&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="259">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#259">259&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="260">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#260">260&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="261">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#261">261&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="262">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#262">262&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="263">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#263">263&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="264">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#264">264&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="265">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#265">265&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="266">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#266">266&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="267">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#267">267&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="268">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#268">268&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="269">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#269">269&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="270">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#270">270&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="271">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#271">271&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="272">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#272">272&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="273">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#273">273&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="274">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#274">274&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="275">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#275">275&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="276">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#276">276&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="277">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#277">277&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="278">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#278">278&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="279">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#279">279&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="280">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#280">280&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="281">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#281">281&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="282">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#282">282&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="283">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#283">283&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="284">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#284">284&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="285">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#285">285&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="286">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#286">286&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="287">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#287">287&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="288">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#288">288&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="289">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#289">289&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="290">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#290">290&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="291">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#291">291&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="292">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#292">292&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="293">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#293">293&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="294">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#294">294&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="295">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#295">295&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="296">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#296">296&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="297">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#297">297&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="298">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#298">298&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> avl
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;errors&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">var&lt;/span> (
ErrDuplicatedNode &lt;span style="color:#2b91af">error&lt;/span> = errors.New(&lt;span style="color:#a31515">&amp;#34;bst: found duplicated value on tree&amp;#34;&lt;/span>)
ErrNodeNotFound &lt;span style="color:#2b91af">error&lt;/span> = errors.New(&lt;span style="color:#a31515">&amp;#34;bst: node not found&amp;#34;&lt;/span>)
)
&lt;span style="color:#00f">type&lt;/span> node &lt;span style="color:#00f">struct&lt;/span> {
height, value &lt;span style="color:#2b91af">int&lt;/span>
left, right *node
}
&lt;span style="color:#00f">func&lt;/span> (n *node) balanceFactor() &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> n == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> 0
}
&lt;span style="color:#00f">return&lt;/span> n.left.Height() - n.right.Height()
}
&lt;span style="color:#00f">func&lt;/span> (n *node) updateHeight() {
max := &lt;span style="color:#00f">func&lt;/span> (a, b &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> a &amp;gt; b {
&lt;span style="color:#00f">return&lt;/span> a
}
&lt;span style="color:#00f">return&lt;/span> b
}
n.height = max(n.left.Height(), n.right.Height()) + 1
}
&lt;span style="color:#00f">func&lt;/span> (n *node) Height() &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> n == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> 0
}
&lt;span style="color:#00f">return&lt;/span> n.height
}
&lt;span style="color:#00f">func&lt;/span> (n *node) Value() &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> n.value
}
&lt;span style="color:#00f">func&lt;/span> (n *node) Left() *node {
&lt;span style="color:#00f">return&lt;/span> n.left
}
&lt;span style="color:#00f">func&lt;/span> (n *node) Right() *node {
&lt;span style="color:#00f">return&lt;/span> n.right
}
&lt;span style="color:#00f">func&lt;/span> newNode(val &lt;span style="color:#2b91af">int&lt;/span>) *node {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;node{
height: 1,
value: val,
left: &lt;span style="color:#00f">nil&lt;/span>,
right: &lt;span style="color:#00f">nil&lt;/span>,
}
}
&lt;span style="color:#00f">func&lt;/span> insertNode(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) (*node, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#008000">// if there&amp;#39;s no node, create one
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> newNode(val), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#008000">// if there&amp;#39;s duplicated node returns error
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.value == val {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, ErrDuplicatedNode
}
&lt;span style="color:#008000">// if value is greater than current node&amp;#39;s value, insert to the right
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;gt; node.value {
right, err := insertNode(node.right, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.right = right
}
&lt;span style="color:#008000">// if value is less than current node&amp;#39;s value, insert to the left
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;lt; node.value {
left, err := insertNode(node.left, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.left = left
}
&lt;span style="color:#00f">return&lt;/span> rotateInsert(node, val), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> removeNode(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) (*node, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, ErrNodeNotFound
}
&lt;span style="color:#00f">if&lt;/span> val &amp;gt; node.value {
right, err := removeNode(node.right, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.right = right
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;lt; node.value {
left, err := removeNode(node.left, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.left = left
} &lt;span style="color:#00f">else&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> &amp;amp;&amp;amp; node.right != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has 2 children
&lt;/span>&lt;span style="color:#008000">&lt;/span>
&lt;span style="color:#008000">// find the successor
&lt;/span>&lt;span style="color:#008000">&lt;/span> successor := greatest(node.left)
value := successor.value
&lt;span style="color:#008000">// remove the successor
&lt;/span>&lt;span style="color:#008000">&lt;/span> left, err := removeNode(node.left, value)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.left = left
&lt;span style="color:#008000">// copy the successor value to the current node
&lt;/span>&lt;span style="color:#008000">&lt;/span> node.value = value
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> || node.right != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has 1 child
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// move the child position to the current node
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> {
node = node.left
} &lt;span style="color:#00f">else&lt;/span> {
node = node.right
}
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left == &lt;span style="color:#00f">nil&lt;/span> &amp;amp;&amp;amp; node.right == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has no child
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// simply remove the node
&lt;/span>&lt;span style="color:#008000">&lt;/span> node = &lt;span style="color:#00f">nil&lt;/span>
}
}
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">return&lt;/span> rotateDelete(node), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> findNode(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) *node {
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#008000">// if the node is found, return the node
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.value == val {
&lt;span style="color:#00f">return&lt;/span> node
}
&lt;span style="color:#008000">// if value is greater than current node&amp;#39;s value, search recursively to the right
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;gt; node.value {
&lt;span style="color:#00f">return&lt;/span> findNode(node.right, val)
}
&lt;span style="color:#008000">// if value is less than current node&amp;#39;s value, search recursively to the left
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;lt; node.value {
&lt;span style="color:#00f">return&lt;/span> findNode(node.left, val)
}
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> rotateInsert(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) *node {
&lt;span style="color:#008000">// update the height on every insertion
&lt;/span>&lt;span style="color:#008000">&lt;/span> node.updateHeight()
&lt;span style="color:#008000">// bFactor will tell you which side the weight is on
&lt;/span>&lt;span style="color:#008000">&lt;/span> bFactor := node.balanceFactor()
&lt;span style="color:#008000">// linearly to the left
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;gt; 1 &amp;amp;&amp;amp; val &amp;lt; node.left.value {
&lt;span style="color:#00f">return&lt;/span> rightRotate(node)
}
&lt;span style="color:#008000">// linearly to the right
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;lt; -1 &amp;amp;&amp;amp; val &amp;gt; node.right.value {
&lt;span style="color:#00f">return&lt;/span> leftRotate(node)
}
&lt;span style="color:#008000">// less than symbol
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;gt; 1 &amp;amp;&amp;amp; val &amp;gt; node.left.value {
node.left = leftRotate(node.left)
&lt;span style="color:#00f">return&lt;/span> rightRotate(node)
}
&lt;span style="color:#008000">// greater than symbol
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;lt; -1 &amp;amp;&amp;amp; val &amp;lt; node.right.value {
node.right = rightRotate(node.right)
&lt;span style="color:#00f">return&lt;/span> leftRotate(node)
}
&lt;span style="color:#00f">return&lt;/span> node
}
&lt;span style="color:#00f">func&lt;/span> rotateDelete(node *node) *node {
node.updateHeight()
bFactor := node.balanceFactor()
&lt;span style="color:#008000">// linearly to the left
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;gt; 1 &amp;amp;&amp;amp; node.left.balanceFactor() &amp;gt;= 0 {
&lt;span style="color:#00f">return&lt;/span> rightRotate(node)
}
&lt;span style="color:#008000">// less than symbol
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;gt; 1 &amp;amp;&amp;amp; node.left.balanceFactor() &amp;lt; 0 {
node.left = leftRotate(node.left)
&lt;span style="color:#00f">return&lt;/span> rightRotate(node)
}
&lt;span style="color:#008000">// linearly to the right
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;lt; -1 &amp;amp;&amp;amp; node.right.balanceFactor() &amp;lt;= 0 {
&lt;span style="color:#00f">return&lt;/span> leftRotate(node)
}
&lt;span style="color:#008000">// greater than symbol
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> bFactor &amp;lt; -1 &amp;amp;&amp;amp; node.right.balanceFactor() &amp;gt; 0 {
node.right = rightRotate(node.right)
&lt;span style="color:#00f">return&lt;/span> leftRotate(node)
}
&lt;span style="color:#00f">return&lt;/span> node
}
&lt;span style="color:#00f">func&lt;/span> rightRotate(x *node) *node {
y := x.left
t := y.right
y.right = x
x.left = t
x.updateHeight()
y.updateHeight()
&lt;span style="color:#00f">return&lt;/span> y
}
&lt;span style="color:#00f">func&lt;/span> leftRotate(x *node) *node {
y := x.right
t := y.left
y.left = x
x.right = t
x.updateHeight()
y.updateHeight()
&lt;span style="color:#00f">return&lt;/span> y
}
&lt;span style="color:#00f">func&lt;/span> greatest(node *node) *node {
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">if&lt;/span> node.right == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> node
}
&lt;span style="color:#00f">return&lt;/span> greatest(node.right)
}
&lt;span style="color:#00f">func&lt;/span> traverse(node *node) {
&lt;span style="color:#008000">// exit condition
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span>
}
fmt.Println(node.value)
traverse(node.left)
traverse(node.right)
}
&lt;span style="color:#00f">func&lt;/span> max(a, b &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> a &amp;gt; b {
&lt;span style="color:#00f">return&lt;/span> a
}
&lt;span style="color:#00f">return&lt;/span> b
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Binary Search Tree in Go</title><link>https://clavinjune.dev/en/blogs/binary-search-tree-in-go/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/binary-search-tree-in-go/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1507100403890-47482dcd79e0?w=1920&amp;amp;q=50" alt="Photo by @danfreemanphoto on Unsplash" title="Photo by @danfreemanphoto on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@danfreemanphoto">@danfreemanphoto&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>So long since I learned to create BST back then at university. I feel like wanna revisit the BST things, so I make this post. BST is not that scary. You only need to create a tree without duplicated value on each node, then the less valuable nodes go to the left, and then the rest of the nodes go to the right or vice-versa. In this post, I&amp;rsquo;ll make a BST in Go Language with less valuable nodes of integer go to the left. I assume you have a basic knowledge of Go Language and tree data structure.&lt;/p>
&lt;h2 id="directory-structure">Directory Structure&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7">7&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">$ tree
.
├── bst
│   ├── node.go
│   └── tree.go
├── go.mod
└── main.go
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>I used &lt;code>tree&lt;/code> command to list down the directory structure (no pun intended).&lt;/p>
&lt;h2 id="code">Code&lt;/h2>
&lt;p>Let&amp;rsquo;s make a &lt;code>node struct&lt;/code> first inside the &lt;code>node.go&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">type&lt;/span> node &lt;span style="color:#00f">struct&lt;/span> {
value &lt;span style="color:#2b91af">int&lt;/span>
left, right *node
}
&lt;span style="color:#00f">func&lt;/span> newNode(value &lt;span style="color:#2b91af">int&lt;/span>) *node {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;node{
value: val,
left: &lt;span style="color:#00f">nil&lt;/span>,
right: &lt;span style="color:#00f">nil&lt;/span>,
}
}
&lt;span style="color:#00f">func&lt;/span> (n *node) Value() &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> n.value
}
&lt;span style="color:#00f">func&lt;/span> (n *node) Left() *node {
&lt;span style="color:#00f">return&lt;/span> n.left
}
&lt;span style="color:#00f">func&lt;/span> (n *node) Right() *node {
&lt;span style="color:#00f">return&lt;/span> n.right
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>I make it unexported so &lt;code>user&lt;/code> can&amp;rsquo;t use &lt;code>node struct&lt;/code> directly to avoid data mutability and give it some &lt;code>getter functions&lt;/code>.&lt;/p>
&lt;p>And then make &lt;code>binarySearchTree struct&lt;/code> inside the &lt;code>tree.go&lt;/code> file to wrap the usage of the &lt;code>node&lt;/code>. It stores &lt;code>pointer of node struct&lt;/code> as a &lt;code>root&lt;/code> so we can keep track the root fo the tree.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7">7&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">type&lt;/span> binarySearchTree &lt;span style="color:#00f">struct&lt;/span> {
root *node
}
&lt;span style="color:#00f">func&lt;/span> New() *binarySearchTree {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;binarySearchTree{}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>With current code, we can create the BST like this in &lt;code>main function&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> main() {
tree := bst.New()
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now we want to give the tree some functionalities such as &lt;code>insert&lt;/code>, &lt;code>find&lt;/code>, &lt;code>traverse&lt;/code>, and &lt;code>remove&lt;/code>. Let&amp;rsquo;s go with &lt;code>insert&lt;/code> first. The pseudo-code will be like this.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">If there&amp;#39;s no node, then create a new node.
If a node with same value is already exists inside the tree, returns error.
If the value is greater than current node&amp;#39;s value, then insert to the right.
If the value is less than current node&amp;#39;s value, then insert to the left.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We&amp;rsquo;ll make the function recursive and not directly change the tree value. So if there&amp;rsquo;s happened to be an error, the tree remains the same.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> insertNode(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) (*node, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#008000">// if there&amp;#39;s no node, create one
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> newNode(val), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">if&lt;/span> node.value == val {
&lt;span style="color:#008000">// if there&amp;#39;s duplicated node returns error
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, ErrDuplicatedNode
}
&lt;span style="color:#00f">if&lt;/span> val &amp;gt; node.value {
&lt;span style="color:#008000">// if value is greater than current node&amp;#39;s value, insert to the right
&lt;/span>&lt;span style="color:#008000">&lt;/span> right, err := insertNode(node.right, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.right = right
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;lt; node.value {
&lt;span style="color:#008000">// if value is less than current node&amp;#39;s value, insert to the left
&lt;/span>&lt;span style="color:#008000">&lt;/span> left, err := insertNode(node.left, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.left = left
}
&lt;span style="color:#00f">return&lt;/span> node, &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s expose the function to the user via the &lt;code>binarySearchTree struct&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> (tree *binarySearchTree) Insert(val &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">error&lt;/span> {
&lt;span style="color:#008000">// always start insert from the root
&lt;/span>&lt;span style="color:#008000">&lt;/span> root, err := insertNode(tree.root, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> err
}
tree.root = root
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>To check whether the value we entered is in the correct position, then we create the traverse function first. There are 3 ways to traverse the tree, &lt;code>pre-order&lt;/code>, &lt;code>in-order&lt;/code>, and &lt;code>post-order&lt;/code>. Here&amp;rsquo;s the difference:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain"># pre-order
1. print current value
2. go recursively to the left
3. go recursively to the right
# in-order
1. go recursively to the left
2. print current value
3. go recursively to the right
# post-order
1. go recursively to the left
2. go recursively to the right
3. print current value
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>To remember it easily, remember when you need to print the current value. if &lt;code>pre&lt;/code> then print first, if &lt;code>post&lt;/code> then print at the end, otherwise print in the middle. we&amp;rsquo;re gonna make &lt;code>in order traverse&lt;/code>, because it will go recursively to the left first and then print the value which means in our case it will print &lt;code>from least valuable nodes to the greatest&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> traverse(node *node) {
&lt;span style="color:#008000">// exit condition
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span>
}
traverse(node.left)
fmt.Println(node.value)
traverse(node.right)
}
&lt;span style="color:#00f">func&lt;/span> (tree *binarySearchTree) Traverse() {
&lt;span style="color:#008000">// traverse from the root
&lt;/span>&lt;span style="color:#008000">&lt;/span> traverse(tree.root)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s check our code first.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> main() {
tree := bst.New()
tree.Insert(23)
tree.Insert(10)
tree.Insert(15)
tree.Insert(20)
tree.Insert(2)
tree.Insert(25)
tree.Insert(50)
tree.Traverse() &lt;span style="color:#008000">// 2 10 15 20 23 25 50
&lt;/span>&lt;span style="color:#008000">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now that you find your &lt;code>traverse&lt;/code> results sorted, let&amp;rsquo;s move to the &lt;code>find&lt;/code> function. To find a specific node you don&amp;rsquo;t have to go around the whole tree, you need to know that BST can route to a specific node by checking the node value. Just like the &lt;code>insert&lt;/code> function, we only need to go to the left if the node value we are looking for is less than the current node and to the right, if the node value is greater.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> findNode(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) *node {
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#008000">// if the node is found, return the node
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.value == val {
&lt;span style="color:#00f">return&lt;/span> node
}
&lt;span style="color:#008000">// if value is greater than current node&amp;#39;s value, search recursively to the right
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;gt; node.value {
&lt;span style="color:#00f">return&lt;/span> findNode(node.right, val)
}
&lt;span style="color:#008000">// if value is less than current node&amp;#39;s value, search recursively to the left
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;lt; node.value {
&lt;span style="color:#00f">return&lt;/span> findNode(node.left, val)
}
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> (tree *binarySearchTree) Find(val &lt;span style="color:#2b91af">int&lt;/span>) *node {
&lt;span style="color:#008000">// as always, search from the root
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">return&lt;/span> findNode(tree.root, val)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now we return the specified node if there is a node with given value otherwise, we return nil. Since we encapsulate the node attributes and leave the user only with the Getter function, there is no need to worry about data mutability.&lt;/p>
&lt;p>Now let&amp;rsquo;s move to the &lt;code>remove&lt;/code> function. Just like &lt;code>insert&lt;/code> and &lt;code>find&lt;/code> function, we need to locate the position of the node first and then do the deletion. There are 3 rules to remove a node from its tree.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">If the node has no child, then Simply make it nil
If the node has 1 child, then move the child to the node position.
If the node has 2 children, then find the successor and move the successor to the node position.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>To find the successor of the node there are 2 ways&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">Find the least valueable node from the right child of the node
OR
Find the greatest valueable node from the left child of the node
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>I will use the first approach, &lt;code>find the least valuable node of the right child node&lt;/code>. To find the least valuable node from the current node, you only need to go to the leftmost node. And to find the most valuable node of the current node, just go to the rightmost node.&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34">34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35">35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36">36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37">37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38">38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39">39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40">40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41">41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42">42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43">43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44">44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45">45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46">46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47">47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48">48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49">49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50">50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51">51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52">52&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="53">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#53">53&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="54">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#54">54&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="55">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#55">55&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="56">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#56">56&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="57">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#57">57&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="58">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#58">58&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="59">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#59">59&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="60">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#60">60&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="61">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#61">61&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="62">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#62">62&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="63">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#63">63&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="64">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#64">64&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="65">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#65">65&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">func&lt;/span> least(node *node) *node {
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">if&lt;/span> node.left == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> node
}
&lt;span style="color:#00f">return&lt;/span> least(node.left)
}
&lt;span style="color:#00f">func&lt;/span> removeNode(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) (*node, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, ErrNodeNotFound
}
&lt;span style="color:#00f">if&lt;/span> val &amp;gt; node.value {
right, err := removeNode(node.right, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.right = right
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;lt; node.value {
left, err := removeNode(node.left, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.left = left
} &lt;span style="color:#00f">else&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> &amp;amp;&amp;amp; node.right != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has 2 children
&lt;/span>&lt;span style="color:#008000">&lt;/span>
&lt;span style="color:#008000">// find the successor
&lt;/span>&lt;span style="color:#008000">&lt;/span> successor := least(node.right)
value := successor.value
&lt;span style="color:#008000">// remove the successor
&lt;/span>&lt;span style="color:#008000">&lt;/span> right, err := removeNode(node.right, value)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.right = right
&lt;span style="color:#008000">// copy the successor value to the current node
&lt;/span>&lt;span style="color:#008000">&lt;/span> node.value = value
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> || node.right != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has 1 child
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// move the child position to the current node
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> {
node = node.left
} &lt;span style="color:#00f">else&lt;/span> {
node = node.right
}
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left == &lt;span style="color:#00f">nil&lt;/span> &amp;amp;&amp;amp; node.right == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has no child
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// simply remove the node
&lt;/span>&lt;span style="color:#008000">&lt;/span> node = &lt;span style="color:#00f">nil&lt;/span>
}
}
&lt;span style="color:#00f">return&lt;/span> node, &lt;span style="color:#00f">nil&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>That&amp;rsquo;s all, folks. If I curate the code it will be like this.&lt;/p>
&lt;h2 id="nodego">node.go&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10"> 10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11"> 11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12"> 12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13"> 13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14"> 14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15"> 15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16"> 16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17"> 17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18"> 18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19"> 19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20"> 20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21"> 21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22"> 22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23"> 23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24"> 24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25"> 25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26"> 26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27"> 27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28"> 28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29"> 29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30"> 30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31"> 31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32"> 32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33"> 33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34"> 34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35"> 35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36"> 36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37"> 37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38"> 38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39"> 39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40"> 40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41"> 41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42"> 42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43"> 43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44"> 44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45"> 45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46"> 46&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="47">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#47"> 47&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="48">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#48"> 48&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="49">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#49"> 49&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="50">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#50"> 50&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="51">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#51"> 51&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="52">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#52"> 52&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="53">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#53"> 53&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="54">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#54"> 54&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="55">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#55"> 55&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="56">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#56"> 56&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="57">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#57"> 57&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="58">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#58"> 58&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="59">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#59"> 59&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="60">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#60"> 60&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="61">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#61"> 61&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="62">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#62"> 62&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="63">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#63"> 63&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="64">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#64"> 64&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="65">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#65"> 65&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="66">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#66"> 66&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="67">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#67"> 67&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="68">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#68"> 68&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="69">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#69"> 69&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="70">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#70"> 70&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="71">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#71"> 71&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="72">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#72"> 72&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="73">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#73"> 73&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="74">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#74"> 74&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="75">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#75"> 75&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="76">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#76"> 76&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="77">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#77"> 77&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="78">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#78"> 78&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="79">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#79"> 79&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="80">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#80"> 80&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="81">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#81"> 81&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="82">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#82"> 82&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="83">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#83"> 83&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="84">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#84"> 84&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="85">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#85"> 85&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="86">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#86"> 86&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="87">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#87"> 87&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="88">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#88"> 88&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="89">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#89"> 89&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="90">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#90"> 90&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="91">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#91"> 91&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="92">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#92"> 92&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="93">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#93"> 93&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="94">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#94"> 94&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="95">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#95"> 95&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="96">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#96"> 96&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="97">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#97"> 97&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="98">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#98"> 98&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="99">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#99"> 99&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="100">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#100">100&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="101">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#101">101&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="102">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#102">102&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="103">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#103">103&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="104">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#104">104&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="105">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#105">105&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="106">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#106">106&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="107">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#107">107&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="108">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#108">108&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="109">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#109">109&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="110">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#110">110&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="111">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#111">111&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="112">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#112">112&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="113">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#113">113&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="114">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#114">114&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="115">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#115">115&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="116">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#116">116&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="117">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#117">117&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="118">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#118">118&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="119">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#119">119&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="120">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#120">120&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="121">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#121">121&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="122">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#122">122&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="123">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#123">123&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="124">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#124">124&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="125">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#125">125&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="126">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#126">126&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="127">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#127">127&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="128">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#128">128&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="129">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#129">129&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="130">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#130">130&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="131">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#131">131&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="132">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#132">132&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="133">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#133">133&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="134">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#134">134&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="135">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#135">135&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="136">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#136">136&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="137">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#137">137&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="138">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#138">138&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="139">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#139">139&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="140">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#140">140&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="141">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#141">141&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="142">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#142">142&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="143">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#143">143&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="144">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#144">144&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="145">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#145">145&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="146">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#146">146&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="147">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#147">147&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="148">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#148">148&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="149">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#149">149&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="150">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#150">150&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="151">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#151">151&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="152">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#152">152&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="153">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#153">153&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="154">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#154">154&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="155">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#155">155&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="156">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#156">156&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="157">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#157">157&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="158">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#158">158&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="159">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#159">159&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="160">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#160">160&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="161">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#161">161&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="162">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#162">162&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="163">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#163">163&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="164">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#164">164&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="165">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#165">165&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="166">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#166">166&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="167">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#167">167&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="168">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#168">168&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="169">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#169">169&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="170">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#170">170&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> bst
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;errors&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">var&lt;/span> (
ErrDuplicatedNode &lt;span style="color:#2b91af">error&lt;/span> = errors.New(&lt;span style="color:#a31515">&amp;#34;bst: found duplicated value on tree&amp;#34;&lt;/span>)
ErrNodeNotFound &lt;span style="color:#2b91af">error&lt;/span> = errors.New(&lt;span style="color:#a31515">&amp;#34;bst: node not found&amp;#34;&lt;/span>)
)
&lt;span style="color:#00f">type&lt;/span> node &lt;span style="color:#00f">struct&lt;/span> {
value &lt;span style="color:#2b91af">int&lt;/span>
left, right *node
}
&lt;span style="color:#00f">func&lt;/span> (n *node) Value() &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> n.value
}
&lt;span style="color:#00f">func&lt;/span> (n *node) Left() *node {
&lt;span style="color:#00f">return&lt;/span> n.left
}
&lt;span style="color:#00f">func&lt;/span> (n *node) Right() *node {
&lt;span style="color:#00f">return&lt;/span> n.right
}
&lt;span style="color:#00f">func&lt;/span> newNode(val &lt;span style="color:#2b91af">int&lt;/span>) *node {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;node{
value: val,
left: &lt;span style="color:#00f">nil&lt;/span>,
right: &lt;span style="color:#00f">nil&lt;/span>,
}
}
&lt;span style="color:#00f">func&lt;/span> insertNode(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) (*node, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#008000">// if there&amp;#39;s no node, create one
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> newNode(val), &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">if&lt;/span> node.value == val {
&lt;span style="color:#008000">// if there&amp;#39;s duplicated node returns error
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, ErrDuplicatedNode
}
&lt;span style="color:#00f">if&lt;/span> val &amp;gt; node.value {
&lt;span style="color:#008000">// if value is greater than current node&amp;#39;s value, insert to the right
&lt;/span>&lt;span style="color:#008000">&lt;/span> right, err := insertNode(node.right, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.right = right
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;lt; node.value {
&lt;span style="color:#008000">// if value is less than current node&amp;#39;s value, insert to the left
&lt;/span>&lt;span style="color:#008000">&lt;/span> left, err := insertNode(node.left, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.left = left
}
&lt;span style="color:#00f">return&lt;/span> node, &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> removeNode(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) (*node, &lt;span style="color:#2b91af">error&lt;/span>) {
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, ErrNodeNotFound
}
&lt;span style="color:#00f">if&lt;/span> val &amp;gt; node.value {
right, err := removeNode(node.right, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.right = right
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;lt; node.value {
left, err := removeNode(node.left, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.left = left
} &lt;span style="color:#00f">else&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> &amp;amp;&amp;amp; node.right != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has 2 children
&lt;/span>&lt;span style="color:#008000">&lt;/span>
&lt;span style="color:#008000">// find the successor
&lt;/span>&lt;span style="color:#008000">&lt;/span> successor := least(node.right)
value := successor.value
&lt;span style="color:#008000">// remove the successor
&lt;/span>&lt;span style="color:#008000">&lt;/span> right, err := removeNode(node.right, value)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>, err
}
node.right = right
&lt;span style="color:#008000">// copy the successor value to the current node
&lt;/span>&lt;span style="color:#008000">&lt;/span> node.value = value
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> || node.right != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has 1 child
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// move the child position to the current node
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left != &lt;span style="color:#00f">nil&lt;/span> {
node = node.left
} &lt;span style="color:#00f">else&lt;/span> {
node = node.right
}
} &lt;span style="color:#00f">else&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.left == &lt;span style="color:#00f">nil&lt;/span> &amp;amp;&amp;amp; node.right == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#008000">// has no child
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#008000">// simply remove the node
&lt;/span>&lt;span style="color:#008000">&lt;/span> node = &lt;span style="color:#00f">nil&lt;/span>
}
}
&lt;span style="color:#00f">return&lt;/span> node, &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> findNode(node *node, val &lt;span style="color:#2b91af">int&lt;/span>) *node {
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#008000">// if the node is found, return the node
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node.value == val {
&lt;span style="color:#00f">return&lt;/span> node
}
&lt;span style="color:#008000">// if value is greater than current node&amp;#39;s value, search recursively to the right
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;gt; node.value {
&lt;span style="color:#00f">return&lt;/span> findNode(node.right, val)
}
&lt;span style="color:#008000">// if value is less than current node&amp;#39;s value, search recursively to the left
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> val &amp;lt; node.value {
&lt;span style="color:#00f">return&lt;/span> findNode(node.left, val)
}
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> least(node *node) *node {
&lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">if&lt;/span> node.left == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> node
}
&lt;span style="color:#00f">return&lt;/span> least(node.left)
}
&lt;span style="color:#00f">func&lt;/span> traverse(node *node) {
&lt;span style="color:#008000">// exit condition
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">if&lt;/span> node == &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span>
}
traverse(node.left)
fmt.Println(node.value)
traverse(node.right)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="treego">tree.go&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34">34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35">35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36">36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37">37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38">38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39">39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40">40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41">41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42">42&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> bst
&lt;span style="color:#00f">type&lt;/span> binarySearchTree &lt;span style="color:#00f">struct&lt;/span> {
root *node
}
&lt;span style="color:#00f">func&lt;/span> New() *binarySearchTree {
&lt;span style="color:#00f">return&lt;/span> &amp;amp;binarySearchTree{}
}
&lt;span style="color:#00f">func&lt;/span> (tree *binarySearchTree) Insert(val &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">error&lt;/span> {
&lt;span style="color:#008000">// always start insert from the root
&lt;/span>&lt;span style="color:#008000">&lt;/span> root, err := insertNode(tree.root, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> err
}
tree.root = root
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> (tree *binarySearchTree) Remove(val &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">error&lt;/span> {
root, err := removeNode(tree.root, val)
&lt;span style="color:#00f">if&lt;/span> err != &lt;span style="color:#00f">nil&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> err
}
tree.root = root
&lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#00f">nil&lt;/span>
}
&lt;span style="color:#00f">func&lt;/span> (tree *binarySearchTree) Find(val &lt;span style="color:#2b91af">int&lt;/span>) *node {
&lt;span style="color:#008000">// as always, search from the root
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">return&lt;/span> findNode(tree.root, val)
}
&lt;span style="color:#00f">func&lt;/span> (tree *binarySearchTree) Traverse() {
&lt;span style="color:#008000">// traverse from the root
&lt;/span>&lt;span style="color:#008000">&lt;/span> traverse(tree.root)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="maingo">main.go&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;learn/bst&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> main() {
tree := bst.New()
tree.Insert(23)
tree.Insert(10)
tree.Insert(15)
tree.Remove(10)
tree.Insert(20)
tree.Insert(2)
tree.Insert(25)
tree.Remove(25)
tree.Remove(23)
tree.Insert(50)
tree.Traverse() &lt;span style="color:#008000">// 2 15 20 50
&lt;/span>&lt;span style="color:#008000">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Force Set Character Encoding on Spring Boot</title><link>https://clavinjune.dev/en/blogs/force-set-character-encoding-on-spring-boot/</link><pubDate>Wed, 11 Nov 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/force-set-character-encoding-on-spring-boot/</guid><description>&lt;p>Add this on your spring boot project:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">@Bean
@Order(Ordered.HIGHEST_PRECEDENCE)
&lt;span style="color:#00f">public&lt;/span> FilterRegistrationBean&amp;lt;CharacterEncodingFilter&amp;gt; characterEncodingFilterRegistration() {
CharacterEncodingFilter filter = &lt;span style="color:#00f">new&lt;/span> CharacterEncodingFilter();
filter.setEncoding(&lt;span style="color:#a31515">&amp;#34;UTF-8&amp;#34;&lt;/span>); &lt;span style="color:#008000">// use your preferred encoding
&lt;/span>&lt;span style="color:#008000">&lt;/span> filter.setForceEncoding(&lt;span style="color:#00f">true&lt;/span>); &lt;span style="color:#008000">// force the encoding
&lt;/span>&lt;span style="color:#008000">&lt;/span>
FilterRegistrationBean&amp;lt;CharacterEncodingFilter&amp;gt; registrationBean =
&lt;span style="color:#00f">new&lt;/span> FilterRegistrationBean&amp;lt;&amp;gt;(filter); &lt;span style="color:#008000">// register the filter
&lt;/span>&lt;span style="color:#008000">&lt;/span> registrationBean.addUrlPatterns(&lt;span style="color:#a31515">&amp;#34;/*&amp;#34;&lt;/span>); &lt;span style="color:#008000">// set preferred url
&lt;/span>&lt;span style="color:#008000">&lt;/span> &lt;span style="color:#00f">return&lt;/span> registrationBean;
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://www.baeldung.com/spring-boot-characterencodingfilter" >reference&lt;/a>&lt;/p>
&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Work Life Balance</title><link>https://clavinjune.dev/en/blogs/work-life-balance/</link><pubDate>Sun, 01 Nov 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/work-life-balance/</guid><description>&lt;p>On one of the &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://open.spotify.com/episode/6U5LH5iAZNNDd32N3nKIJl?si=06f11v9nSAWHHf11IwDmRg" >episode&lt;/a> of &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://positif.dev" >positif.dev&lt;/a>, Devin and I discussed about what is work-life balance. I described work-life balance as a happiness that hard to achieve, since we need to separate both our work and life, time and environment where we don’t need to think about work after work-hour.&lt;/p>
&lt;p>So far I have had a work-life balance in terms of work, but personally I sometimes have problems with my habit of working outside working hours when I’m in the zone. Devin said it is quite difficult not to think about work outside of working hours when the work itself is almost done because there are factors such as the urgency of the job and curiosity. And because of curiosity itself, we forget to take a break, then because we forget to take a break, we can’t finish things that make us curious. Ironic right?&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="https://i.kym-cdn.com/entries/icons/original/000/030/338/New.jpg" alt="Photo From Know Your Meme" title="Photo From Know Your Meme" width="100%" />
&lt;figcaption>Photo From Know Your Meme&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Devin thought that overtime because of our own curiosity is normal and still better than the demands of work because what needs to be improved is our mindset. Many people do not want to work outside working hours but because of the workload, like it or not they have to finish it. The fact that he experienced it before made him think that way. It is considered to be normal as long as you don’t do it everyday.&lt;/p>
&lt;p>We separate overtime out of curiosity into 2 things. First, you do the job because you are curious about the solution. Second, you do the job because you want to get your job done regardless of the urgency. The first is considered normal by Devin, the second is quite dangerous because it makes your co-workers have high expectations of you even though you make yourself work beyond your workload. Devin said that when you want to prove that you can do a better job, the habit might be created. This is different when you are on paid leave, but you are required to do work such as fixing bugs. While it’s common in software engineering jobs, it makes your work-life balance even worse.&lt;/p>
&lt;p>Then Devin asked me about how I could improve my work-life balance. I’m trying to improve my work-life balance when I commit not to work after work by setting a schedule, because I have goals that I need to achieve. Devin himself improves work-life balance by separating work laptops and personal laptops to avoid work-related things like, your work projects, Slack chats, etc. And also it’s important that your colleague knows that you need to maintain your work-life balance.&lt;/p>
&lt;p>The last discussion is about what we do in our spare time. While I follow my schedule that I have set up to refresh and improve my personal skills such as learning English, Japanese, side project development and watching Netflix, Devin uses his free time to read books, do side projects, and watch Udemy courses and Netflix.&lt;/p>
&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Monetize Your Content With Web Monetization</title><link>https://clavinjune.dev/en/blogs/monetize-your-content-with-web-monetization/</link><pubDate>Fri, 30 Oct 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/monetize-your-content-with-web-monetization/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1517232117795-40c9d8212a04?w=1920&amp;amp;q=50" alt="Photo by @veato on Unsplash" title="Photo by @veato on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@veato">@veato&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>In my &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://clavinjune.dev/blog/i-create-this-blog-using-jekyll-65efbd" >first post&lt;/a>, I said that:&lt;/p>
&lt;blockquote>
&lt;p>Perhaps I’m gonna try to integrate this blog using Webmention and Web Monetization after getting a bunch of visitors, but I’m gonna save it for later.&lt;/p>
&lt;/blockquote>
&lt;p>Though my blog visitors still not that much, I integrated &lt;code>Webmention&lt;/code> and &lt;code>Web Monetization&lt;/code> yesterday. I&amp;rsquo;m still exploring &lt;code>Webmention&lt;/code> due to a lack of resources, so I&amp;rsquo;m going to make another post featuring Webmention. So for now, let&amp;rsquo;s talk about &lt;code>Web Monetization&lt;/code>.&lt;/p>
&lt;p>The first time I heard about &amp;lsquo;Web Monetization&amp;rsquo; was from &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://dev.to/devteam/announcing-the-grant-for-the-web-hackathon-on-dev-3kd1" >this Hackathon&lt;/a> held by &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://dev.to/" >DEV&lt;/a>. But yeah, I only implemented yesterday. I read &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://dev.to/hacksultan/web-monetization-like-i-m-5-1418" >this post&lt;/a> posted by &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://dev.to/hacksultan" >@hacksultan&lt;/a> and really helps me to learn about the concept behind &lt;code>Web Monetization&lt;/code> itself.&lt;/p>
&lt;p>The implementation was so easy, you just need to have a digital wallet account. Currently, &lt;code>Web Monetization&lt;/code> only supports digital wallet like &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://webmonetization.org/docs/gatehub" >Gatehub&lt;/a>, &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://webmonetization.org/docs/uphold" >Uphold&lt;/a>, and &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://webmonetization.org/docs/xrptipbot" >XRP Tipbot&lt;/a>. I personally use uphold because it has many withdrawal currencies. You can follow the registration steps by clicking the link that I referred on each wallet, find your &lt;code>Interledger payment pointer&lt;/code> (&lt;strong>ILP&lt;/strong>) which has this format &lt;code>$wallet.example.com/alice&lt;/code>, and finally put it on your blog&amp;rsquo;s &lt;code>meta tag&lt;/code>. &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://webmonetization.org/docs/getting-started" >This docs&lt;/a> is to the point and clear.&lt;/p>
&lt;h2 id="where-the-money-comes-from">Where the money comes from?&lt;/h2>
&lt;p>Currently, &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://webmonetization.org" >Web Monetization&lt;/a> only provider is &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://coil.com" >Coil&lt;/a>. For every Coil paid members that visit your monetized content will stream a micro amount of money to your ILP automatically. &lt;code>Coil&lt;/code> will pay you per second for about &lt;code>$0.36/hour&lt;/code> according to &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://help.coil.com/accounts/creator-accounts#faqs" >this FAQ&lt;/a> which you should read to learn how Coil works. As the paid members of Coil, you can enjoy exclusive contents from &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://coil.com/explore" >these websites&lt;/a>. This is my content income after integrated with &lt;code>Web Monetization&lt;/code>.&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="https://clavinjune.dev/img/monetize-your-content-with-web-monetization/uphold.png" alt="Moneeeeeeyyy" title="Moneeeeeeyyy" width="100%" />
&lt;figcaption>Moneeeeeeyyy&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>To make your “premium” visitors feel more valued when visiting your content, you can give them exclusive content that free member can’t access, or perhaps removing ads. Then, the next question is how can you differentiate premium visitors from free visitors? The answer is in &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://webmonetization.org/docs/api" >this documentation&lt;/a> along with the examples. Besides your personal web, you can also monetize your &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://help.coil.com/for-creators/youtube-channels" >Youtube&lt;/a>, &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://help.coil.com/for-creators/twitch-stream" >Twitch&lt;/a> contents, and &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://dev.to/devteam/you-can-now-web-monetize-your-dev-posts-but-don-t-get-your-hopes-up-too-quickly-goc" >DEV&lt;/a> posts.&lt;/p>
&lt;p>Even though this post is like sponsoring some companies (which I hope so), they didn&amp;rsquo;t sponsor me to write this. The whole content of this post is to encourage you to try Web Monetization because I think this is the new future for monetizing digital contents. I really hate it when I only need to read one or two articles from a web then I meet paywall.&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="https://clavinjune.dev/img/monetize-your-content-with-web-monetization/paywall.png" alt="Paywall" title="Paywall" width="100%" />
&lt;figcaption>Paywall&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>I like the concept behind this &lt;code>Web Monetization&lt;/code> to only subscribe to one provider, then you can consume exclusive contents from many websites instead of subscribing to a lot of websites which perhaps you wouldn&amp;rsquo;t consume their contents daily. Despite the costs, it&amp;rsquo;s hard to manage this kind of subscription model.&lt;/p>
&lt;p>Though &lt;code>Web Monetization&lt;/code> is not a standard yet for monetizing digital content, it is currently being proposed as a &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://discourse.wicg.io/t/proposal-web-monetization-a-new-revenue-model-for-the-web/3785" >W3C standard&lt;/a>. I hope it become one and implemented everywhere ASAP.&lt;/p>
&lt;p>If you are interested in monetizing your website, You can read these 10 tips for monetizing anything from &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://www.codefuel.com/blog/if-its-online-you-can-monetize-it-10-tips-for-monetizing-anything/" >codefuel&lt;/a>.&lt;/p>
&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Create Redis Sets With Member Expiration</title><link>https://clavinjune.dev/en/blogs/create-redis-sets-with-member-expiration/</link><pubDate>Thu, 29 Oct 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/create-redis-sets-with-member-expiration/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1501139083538-0139583c060f?w=1920&amp;amp;q=50" alt="Photo by @aronvisuals on Unsplash" title="Photo by @aronvisuals on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@aronvisuals">@aronvisuals&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://redis.io" >Redis&lt;/a> is a good in-memory key-value data store that supports many types of value. &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://redis.io/topics/data-types-intro#sorted-sets" >Sorted Sets&lt;/a> is one of them. According to the docs &lt;code>sorted sets&lt;/code> is:&lt;/p>
&lt;blockquote>
&lt;p>Sorted sets, similar to Sets but where every string element is associated to a floating number value, called score. The elements are always taken sorted by their score, so unlike Sets it is possible to retrieve a range of elements (for example you may ask: give me the top 10, or the bottom 10).&lt;/p>
&lt;/blockquote>
&lt;p>What they didn&amp;rsquo;t say about &lt;code>sorted sets&lt;/code> is the expiration of &lt;code>sets members&lt;/code> can&amp;rsquo;t be defined, at least until this blog post is created. Why do we need to define &lt;code>sets members&lt;/code> expiration?&lt;/p>
&lt;p>Well, in my case I&amp;rsquo;ve required to create a phone service that could generate and verify OTP that sent to the users with a specific limit. The prior design is using &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://godoc.org/golang.org/x/time/rate" >Golang Rate Limit&lt;/a> that I thought it couldn&amp;rsquo;t be horizontally scalable. That&amp;rsquo;s why I thought that I would use Redis for this case. The requirement for generating OTP is only like this:&lt;/p>
&lt;ul>
&lt;li>Each phone number can request OTP up to &lt;code>X times&lt;/code> per &lt;code>Y minutes&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>That&amp;rsquo;s why I came up with &lt;code>Redis sets&lt;/code> but &lt;code>sets members&lt;/code> can&amp;rsquo;t have its own expiration time. Then I was googling around until I found &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://github.com/redis/redis/issues/135#issuecomment-2361996" >this issue comment&lt;/a> by &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://github.com/pietern" >@pietern&lt;/a>. This is quite a hacky move, but at least it is doable. That&amp;rsquo;s why I tried to implement it. Once again comments on Github saved my job.&lt;/p>
&lt;p>The idea is quite simple, using the score on sorted-sets as an expiration millis. Fetch the valid members that have a score between &lt;code>current millis&lt;/code> and &lt;code>current millis + Y minutes&lt;/code> and remove the expired members that have a score between zero and &lt;code>current millis&lt;/code>. So the minimum pseudocode would be like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain"># define variables
timeLimit := Y
requestLimit := X
key := +6212312341234
otp := randomString(6)
now := currentMillis()
exp := now + timeLimit
# get total of generated phone number in key
validOTPs := redisQuery(&amp;#34;ZRANGEBYSCORE $key $now $exp&amp;#34;)
# Limitting request
if count(validOTPs) &amp;gt;= requestLimit
then exit
# Add members to key
redisQuery(&amp;#34;ZADD $key $exp $otp&amp;#34;)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>I think this method is good enough and the simplest one to implement. You can add optional operations like, &lt;code>adding expiration to the key&lt;/code>, or &lt;code>removing members that are no longer valid&lt;/code>. But this operation is enough to adding expiration to the &lt;code>sets member&lt;/code>. You can also use this method to limiting the OTP verification to avoid brute-force.&lt;/p>
&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Creating Taboo Error Handler for Go</title><link>https://clavinjune.dev/en/blogs/creating-taboo-error-handler-for-go/</link><pubDate>Wed, 28 Oct 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/creating-taboo-error-handler-for-go/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1525785967371-87ba44b3e6cf?w=1920&amp;amp;q=50" alt="Photo by @hhh13 on Unsplash" title="Photo by @hhh13 on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@hhh13">@hhh13&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>I created &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://github.com/anon-org/taboo" >this module&lt;/a> for Golang to help me with error handling. This idea showed when a colleague of mine was thinking to pass &lt;code>context&lt;/code> from handler to service, to repository to trace the error log more verbose. I disagreed with him because I thought that&amp;rsquo;s not what &lt;code>context&lt;/code> is for. Perhaps I was wrong or he was wrong, or maybe both of us wrong because this is our first Golang project that deployed on production.&lt;/p>
&lt;p>Despite our opinion about &lt;code>context&lt;/code>, we both agreed that Golang&amp;rsquo;s error handling is too verbose and bulky. It makes us read more error handling more than read the system flow itself. Then I remember when I was coding using Java/Kotlin that I always use &lt;code>throws&lt;/code>, &lt;code>throw&lt;/code>, and &lt;code>try-catch block&lt;/code> to handle any errors.&lt;/p>
&lt;p>Hmm&amp;hellip;&lt;/p>
&lt;p>Why don&amp;rsquo;t I create it for Golang?&lt;/p>
&lt;p>Then I create this &lt;code>try-catch block&lt;/code> module for Golang called &lt;code>taboo&lt;/code>. Because I know this thing creates polemic among Golang developer but, then I thought why don&amp;rsquo;t I give it a try?&lt;/p>
&lt;p>For the design itself, I was inspired by &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://hackthology.com/exceptions-for-go-as-a-library.html" >this article&lt;/a> but the whole implementation is all adjusted with my current needs. Instead of &lt;code>error&lt;/code>, this module is based on &lt;code>panic&lt;/code> and &lt;code>recover&lt;/code> so it is quite dangerous whenever used in the wrong condition.&lt;/p>
&lt;p>Let&amp;rsquo;s take an example:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7">7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8">8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9">9&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">func&lt;/span> div(a, b &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">return&lt;/span> a / b
}
&lt;span style="color:#00f">func&lt;/span> main() {
div(10, 0)
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>When &lt;code>b&lt;/code> is filled with &lt;code>zero&lt;/code>, it causes panic&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6">6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7">7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8">8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9">9&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">panic: runtime error: integer divide by zero
goroutine 1 [running]:
main.div(...)
/tmp/anon-org/taboo/cmd/example.go:4
main.main()
/tmp/anon-org/taboo/cmd/example.go:8 +0x12
Process finished with exit code 2
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So, we can handle it using &lt;code>taboo&lt;/code> like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">taboo.Try(&lt;span style="color:#00f">func&lt;/span>() {
div(10, 0)
}).Catch(&lt;span style="color:#00f">func&lt;/span>(e *taboo.Exception) {
fmt.Println(e.Error())
}).Do()
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>taboo&lt;/code> will catch the &lt;code>panic&lt;/code> and try to &lt;code>recover&lt;/code> it and make a stack of error called &lt;code>taboo.Exception&lt;/code> to trace error more verbose. So the program ends like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">main.div:9 runtime error: integer divide by zero
Process finished with exit code 0
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Quite handy right?&lt;/p>
&lt;p>Then, what if I want to throw or rethrow the error to the first caller?&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1"> 1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2"> 2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3"> 3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4"> 4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5"> 5&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="6">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#6"> 6&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="7">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#7"> 7&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="8">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#8"> 8&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="9">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#9"> 9&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="10">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#10">10&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="11">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#11">11&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="12">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#12">12&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="13">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#13">13&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="14">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#14">14&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="15">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#15">15&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="16">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#16">16&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="17">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#17">17&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="18">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#18">18&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="19">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#19">19&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="20">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#20">20&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="21">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#21">21&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="22">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#22">22&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="23">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#23">23&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="24">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#24">24&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="25">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#25">25&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="26">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#26">26&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="27">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#27">27&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="28">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#28">28&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="29">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#29">29&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="30">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#30">30&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="31">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#31">31&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="32">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#32">32&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="33">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#33">33&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="34">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#34">34&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="35">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#35">35&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="36">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#36">36&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="37">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#37">37&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="38">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#38">38&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="39">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#39">39&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="40">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#40">40&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="41">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#41">41&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="42">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#42">42&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="43">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#43">43&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="44">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#44">44&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="45">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#45">45&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="46">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#46">46&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#00f">package&lt;/span> main
&lt;span style="color:#00f">import&lt;/span> (
&lt;span style="color:#a31515">&amp;#34;errors&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#a31515">&amp;#34;github.com/anon-org/taboo/pkg/taboo&amp;#34;&lt;/span>
)
&lt;span style="color:#00f">func&lt;/span> div(a, b &lt;span style="color:#2b91af">int&lt;/span>) &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">if&lt;/span> b == 0 {
taboo.Throw(errors.New(&lt;span style="color:#a31515">&amp;#34;division by zero detected&amp;#34;&lt;/span>))
}
&lt;span style="color:#00f">return&lt;/span> a / b
}
&lt;span style="color:#00f">func&lt;/span> callDiv() &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">var&lt;/span> result &lt;span style="color:#2b91af">int&lt;/span>
taboo.Try(&lt;span style="color:#00f">func&lt;/span>() {
result = div(10, 0)
}).Catch(&lt;span style="color:#00f">func&lt;/span>(e *taboo.Exception) {
e.Throw(&lt;span style="color:#a31515">&amp;#34;callDiv rethrow this error&amp;#34;&lt;/span>)
}).Do()
&lt;span style="color:#00f">return&lt;/span> result
}
&lt;span style="color:#00f">func&lt;/span> callCallDiv() &lt;span style="color:#2b91af">int&lt;/span> {
&lt;span style="color:#00f">var&lt;/span> result &lt;span style="color:#2b91af">int&lt;/span>
taboo.Try(&lt;span style="color:#00f">func&lt;/span>() {
result = callDiv()
}).Catch(&lt;span style="color:#00f">func&lt;/span>(e *taboo.Exception) {
e.Throw(&lt;span style="color:#a31515">&amp;#34;callCallDiv rethrow this error&amp;#34;&lt;/span>)
}).Do()
&lt;span style="color:#00f">return&lt;/span> result
}
&lt;span style="color:#00f">func&lt;/span> main() {
taboo.Try(&lt;span style="color:#00f">func&lt;/span>() {
callCallDiv()
}).Catch(&lt;span style="color:#00f">func&lt;/span>(e *taboo.Exception) {
fmt.Println(e.Error())
}).Do()
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>e.Throw(message)&lt;/code> Will wrap the previous exception, and throw it again to the previous caller. So the printed error will be like this:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-plain" data-lang="plain">main.callCallDiv:34 callCallDiv rethrow this error caused by:
main.callDiv:22 callDiv rethrow this error caused by:
main.div:11 division by zero detected
Process finished with exit code 0
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>It just like &lt;code>try-catch block&lt;/code> in Java/Kotlin I think but with many flaws lol. This module is still an experiment that I myself is not going to using this module in production. Or perhaps should I?&lt;/p>
&lt;p>Thank you for reading!&lt;/p></description></item><item><title>Allow Upload File on Spring Boot</title><link>https://clavinjune.dev/en/blogs/allow-upload-file-on-spring-boot/</link><pubDate>Mon, 26 Oct 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/allow-upload-file-on-spring-boot/</guid><description>&lt;p>Add this on application configuration:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="1">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#1">1&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="2">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#2">2&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="3">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#3">3&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="4">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#4">4&lt;/a>
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f" id="5">&lt;a style="outline: none; text-decoration:none; color:inherit" href="#5">5&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">spring:
mvc:
hiddenmethod:
filter:
enabled: &lt;span style="color:#00f">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://github.com/spring-projects/spring-boot/issues/18644" >reference&lt;/a>&lt;/p>
&lt;p>Thank you for reading!&lt;/p></description></item><item><title>I Create This Blog Using Jekyll</title><link>https://clavinjune.dev/en/blogs/i-create-this-blog-using-jekyll/</link><pubDate>Sat, 24 Oct 2020 00:00:00 +0700</pubDate><author>juneardoc@gmail.com (Clavin June)</author><guid>https://clavinjune.dev/en/blogs/i-create-this-blog-using-jekyll/</guid><description>
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1542435503-956c469947f6?w=1920&amp;amp;q=50" alt="Photo by @jessbaileydesigns on Unsplash" title="Photo by @jessbaileydesigns on Unsplash" width="100%" />
&lt;figcaption class="font-16">Photo by &lt;a class="link unsplash-ref" rel="noreferrer nofollow noopener" target="_blank" href="https://unsplash.com/@jessbaileydesigns">@jessbaileydesigns&lt;/a> on Unsplash&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://clavinjune.dev/" >This blog&lt;/a> is the result of my learning journey about a static-site generator made on top of &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://jekyllrb.com/" >Jekyll&lt;/a>. The design is kinda bad due to my lacked sense of design. To avoid creating a whole trash blog, I tried to ask my friends to give me feedback about the design a bit.&lt;/p>
&lt;p>I have tried using the provided theme like &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://github.com/jekyll/minima" >Minima&lt;/a> but, I just don&amp;rsquo;t like it after all. That&amp;rsquo;s why I think it&amp;rsquo;s better to create my own. I tried to create the simplest design as long as it is easy to be read. I used &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://coolors.co/" >Coolors&lt;/a>, &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://fonts.google.com/" >Google Font&lt;/a>, &lt;a class="link" rel="noreferrer noopener" target="_blank" href="http://rouge.jneen.net/" >Rogue&lt;/a>, &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://github.com/sverrirs/jekyll-paginate-v2" >Jekyll Paginate&lt;/a>, &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://github.com/jekyll/jekyll-feed" >Jekyll Feed&lt;/a>, and write a bit of Ruby, CSS, and JS for creating the theme itself. I didn&amp;rsquo;t think creating this simple blog costs me 2 Saturdays, even though it only consists of as many as 3 pages.&lt;/p>
&lt;p>After I think the whole template is ready to be published, I create &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://github.com/anon-org/jekyll-blog" >this template repository&lt;/a> just in case there&amp;rsquo;s someone who wants to try Jekyll using my template. It is ready to be deployed, just adjust &lt;code>_config.yaml&lt;/code> a bit and a whole blog is ready with it&amp;rsquo;s auto-generated RSS feeds.&lt;/p>
&lt;p>Integrating blog posts to &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://dev.to" >DEV&lt;/a> using RSS is not a new thing. But this is a new experience for me since I only write two posts on DEV before. Despite this is a new blog, I have written my thoughts at &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://medium.com/@ClavinJune" >Medium&lt;/a>. I was looking for a way to publish to Medium via RSS feeds, but I didn&amp;rsquo;t find any. Luckily DEV supports this kind of thing with simple configuration, perhaps I need to adjust the post a bit before publishing it.&lt;/p>
&lt;p>Perhaps I&amp;rsquo;m gonna try to integrate this blog using &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://webmention.io/" >Webmention&lt;/a> and &lt;a class="link" rel="noreferrer noopener" target="_blank" href="https://webmonetization.org/" >Web Monetization&lt;/a> after getting a bunch of visitors, but I&amp;rsquo;m gonna save it for later.&lt;/p>
&lt;p>Thank you for reading!&lt;/p></description></item></channel></rss>